{"doc_name":"Contagion Angelscript API Documentations","doc_logo":"images/logo.png","doc_gen":1740650326,"categories":{"Engine":{"Console Commands":{"desc":"Console commands that can be either manipulated, or used via static void functions.","page":"Console Commands","category":"Engine","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"AddFlag","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Adds a flag into our convar","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% nFlag":"Our flag we want to add"}},{"global":null,"name":"AddFlag2","namefake":"AddFlag","isfunc":null,"classfunction":null,"base":null,"object":"CASConVarRef","ref":null,"namespace":null,"child":null,"desc":"Adds a flag into our convar","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"removed","infobox_desc":"This function has been removed since 2.2.1.1, simply use [SetValue][SetValue] instead.","return":null,"args":{"%int% nFlag":"Our flag we want to add"}},{"global":null,"name":"Arg","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"Grabs the argument from the specified index value","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the requested argument","args":{"%int_in% nIndex":"The argument index"}},{"global":null,"name":"ArgFull","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"Grabs all the arguments as a whole string","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns all the arguments in one whole string","args":{}},{"global":null,"name":"Args","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"Grabs the amount of arguments we currently have","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the amount of arguments","args":{}},{"global":null,"name":"Create","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ConCommand","child":null,"desc":"Creates a console command, or hooks an already existing one.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strCommand":"The name of the console command","%string_in% strFunction":"The name of the void function","%string_in% strHelp = \"\"":"The help text","%enum_AdminAccessLevel_t% iAccessLevel = LEVEL_NONE":"The admin access level"}},{"global":null,"name":"Create2","namefake":"Create","isfunc":null,"classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":"ConVar","child":null,"desc":"Creates a console variable.","desc_md":"true","desc_file":"ConVar_Create","type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CASConVar@ object which can be manipulated","args":{"%string_in% strCommand":"The name of the console command","%string_in% strDefaultVar":"The default value","%string_in% strHelp = \"\"":"The help text","%bool_in% bMin = false":"If true, it will clamp the float as the lowest possible value","%float_in% flMin = 0.0f":"The lowest possible value","%bool_in% bMax = false":"If true, it will clamp the float as the highest possible value","%float_in% flMax = 0.0f":"The highest possible value"}},{"global":null,"name":"CvarFlag","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of types convar flags.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"FCVAR_NONE":"The default, no flags at all","FCVAR_HIDDEN":"Hidden. Doesn&apos;t appear in find or auto complete. Like DEVELOPMENTONLY, but can&apos;t be compiled out.","FCVAR_PROTECTED":"It&apos;s a server cvar, but we don&apos;t send the data since it&apos;s a password, etc.  Sends 1 if it&apos;s not bland&#47;zero, 0 otherwise as value","FCVAR_ARCHIVE":"Set to cause it to be saved to vars.rc","FCVAR_NOTIFY":"Notifies players when changed","FCVAR_PRINTABLEONLY":"This cvar&apos;s string cannot contain unprintable characters ( e.g., used for player name etc ).","FCVAR_CHEAT":"Only useable sv_cheats","FCVAR_NOT_CONNECTED":"Cvar cannot be changed by a client that is connected to a server"}},{"global":null,"name":"Find","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASConVarRef","ref":null,"namespace":"ConVar","child":null,"desc":"Finds a console variable","desc_md":"true","desc_file":"ConVar_Find","type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CASConVar@ object which can be manipulated","args":{"%string_in% strCommand":"The name of the console command"}},{"global":null,"name":"Find2","namefake":"Find","isfunc":"true","classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"Finds the specified argument, and returns it&apos;s ID","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the argument ID","args":{"%string_in% szName":"The name of the argument"}},{"global":null,"name":"GetBool","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Checks if the value is true or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"GetBool2","namefake":"GetBool","isfunc":"true","classfunction":null,"base":null,"object":"CASConVarRef","ref":null,"namespace":null,"child":null,"desc":"Checks if the value is true or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"GetDefault2","namefake":"GetDefault","isfunc":"true","classfunction":null,"base":null,"object":"CASConVarRef","ref":null,"namespace":null,"child":null,"desc":"Grabs the default value of the string","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the default value","args":{}},{"global":null,"name":"GetDefaultValue","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Grabs the default value of the string","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the default value","args":{}},{"global":null,"name":"GetFloat","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Grabs the current value as a float","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"GetFloat2","namefake":"GetFloat","isfunc":"true","classfunction":null,"base":null,"object":"CASConVarRef","ref":null,"namespace":null,"child":null,"desc":"Grabs the current value as a float","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"GetHelpText","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVarRef","ref":null,"namespace":null,"child":null,"desc":"Grabs the help message","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the help text of this cvar","args":{}},{"global":null,"name":"GetInt","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Grabs the current value as an interger","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"GetInt2","namefake":"GetInt","isfunc":"true","classfunction":null,"base":null,"object":"CASConVarRef","ref":null,"namespace":null,"child":null,"desc":"Grabs the current value as an interger","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"GetValue","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Grabs the current value of the string","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"GetValue2","namefake":"GetValue","isfunc":"true","classfunction":null,"base":null,"object":"CASConVarRef","ref":null,"namespace":null,"child":null,"desc":"Grabs the current value of the string","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"HasFlag","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Checks if this convar has a certain flag","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we have the flag","args":{"%int% nFlag":"Our flag we want to check"}},{"global":null,"name":"HasFlag2","namefake":"HasFlag","isfunc":null,"classfunction":null,"base":null,"object":"CASConVarRef","ref":null,"namespace":null,"child":null,"desc":"Checks if this convar has a certain flag","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we have the flag","args":{"%int% nFlag":"Our flag we want to check"}},{"global":null,"name":"Help","namefake":null,"isfunc":null,"classfunction":null,"base":"string","object":null,"ref":null,"namespace":"ConCommand","child":null,"desc":"Print the help message from a console command","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strCommand":"The name of the console command"}},{"global":null,"name":"Register","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"ConVar","child":null,"desc":"Register&apos;s a console variable to a void function","desc_md":"true","desc_file":"ConVar_Register","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CASConVar% pConVar":"The console variable object","%string_in% strFunction":"The name of the void function"}},{"global":null,"name":"RegisterToChat","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ConCommand","child":null,"desc":"Registers a chat command.","desc_md":"true","desc_file":"ConsoleCommand_RegisterToChat","type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strConCommand":"The name of the console command","%string_in% strCommand":"The command we have to write in chat"}},{"global":null,"name":"Remove","namefake":"Remove","isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ConCommand","child":null,"desc":"Removes a console variable.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strCommand":"The name of the console command"}},{"global":null,"name":"Remove2","namefake":"Remove","isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ConVar","child":null,"desc":"Removes a console variable.","desc_md":"true","desc_file":"ConVar_Remove","type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CASConVar% pConVar":"The console variable object"}},{"global":null,"name":"RemoveFlag","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Removes a flag from our convar","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% nFlag":"Our flag we want to remove"}},{"global":null,"name":"RemoveFlag2","namefake":"RemoveFlag","isfunc":null,"classfunction":null,"base":null,"object":"CASConVarRef","ref":null,"namespace":null,"child":null,"desc":"Removes a flag from our convar","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"removed","infobox_desc":"This function has been deprecated since 2.2.1.1, simply use [SetValue][SetValue] instead.","return":null,"args":{"%int% nFlag":"Our flag we want to remove"}},{"global":null,"name":"SetAccessLevel2","namefake":"SetAccessLevel","isfunc":"true","classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"Sets the admin access level required to execute this concommand","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_AdminAccessLevel_t% iAccessLevel = LEVEL_NONE":"The admin access level"}},{"global":null,"name":"SetValue","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Sets the new value for the convar","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"Our new desired value"}},{"global":null,"name":"SetValue2","namefake":"SetValue","isfunc":null,"classfunction":null,"base":null,"object":"CASConVarRef","ref":null,"namespace":null,"child":null,"desc":"Sets the new value for the convar","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"Our new desired value"}}]},"Admin System":{"desc":"Used to add, remove or just do simple administrative tasks on the server.","page":"Admin System","category":"Engine","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"AddAdmin","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Adds the player to the admin list, if the player doesn&apos;t already exist.","desc_md":"true","desc_file":"AdminSystem_AddAdmin","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that should be added to the admin list"}},{"global":null,"name":"AdminAccessLevel_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of the admin acess levels","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"LEVEL_NONE":"Has no access (Default)","LEVEL_MODERATOR":"Can be recognized as an moderator.","LEVEL_ADMIN":"Can be recognized as an administrator.","LEVEL_SUPERADMIN":"Can do everything (super-administrator)."}},{"global":null,"name":"AdminExist","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Checks if the player exist in the admin list","desc_md":"true","desc_file":"AdminSystem_AdminExist","type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the player exist in the admin list","args":{"%class_CTerrorPlayer% pPlayer":"The player we are trying to check"}},{"global":null,"name":"Ban","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Bans and kicks the player","desc_md":"true","desc_file":"AdminSystem_Ban","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pTarget":"The player that we are trying to target","%int% iLength":"The length of our ban.","%string_in% szReason":"The reason of our kick"}},{"global":null,"name":"CanTargetPlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Checks if the player can be targeted or not (all depends on immunity and&#47;or he&apos;s a bot)","desc_md":"true","desc_file":"AdminSystem_CanTargetPlayer","type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the player can be targeted","args":{"%class_CTerrorPlayer% pTarget":"The player that we are trying to target","%class_CTerrorPlayer% pTarget2":"The player that is trying to target said player"}},{"global":null,"name":"Gag","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Gags a player. They won&apos;t be able to talk in the chat","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pTarget":"The player that we are trying to target","%int% iLength":"The length of our gag.","%bool% bMinutes":"Should the length be in minutes instead of seconds?","%string_in% szReason":"The reason of our gag"}},{"global":null,"name":"IsGagged","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Checks if the player is gagged","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the player has been gagged","args":{"%class_CTerrorPlayer% pPlayer":"The player that should be checked on"}},{"global":null,"name":"IsMuted","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Checks if the player is muted","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the player has been muted","args":{"%class_CTerrorPlayer% pPlayer":"The player that should be checked on"}},{"global":null,"name":"Kick","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Kicks the player","desc_md":"true","desc_file":"AdminSystem_Kick","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pTarget":"The player that we are trying to target","%string_in% szReason":"The reason of our kick"}},{"global":null,"name":"Mute","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Mutes a player. They won&apos;t be able to talk over VOIP","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pTarget":"The player that we are trying to target","%int% iLength":"The length of our mute.","%bool% bMinutes":"Should the length be in minutes instead of seconds?","%string_in% szReason":"The reason of our mute"}},{"global":null,"name":"PlayerHasAccessLevel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Checks if the player has the required access level, or higher","desc_md":"true","desc_file":"AdminSystem_PlayerHasAccessLevel","type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the player has the required flag","args":{"%class_CTerrorPlayer% pPlayer":"The player that should be checked on","%enum_AdminAccessLevel_t% iAccessLevel":"The access flag we want to check"}},{"global":null,"name":"RemoveAdmin","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Removes the player from the admin list, this will also erase all the flags from the player.","desc_md":"true","desc_file":"AdminSystem_RemoveAdmin","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that should be removed from the admin list"}},{"global":null,"name":"SetPlayerAccessLevel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"AdminSystem","namespace":null,"child":null,"desc":"Set a specific player admin access.","desc_md":"true","desc_file":"AdminSystem_SetPlayerAccessLevel","type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the new access was set","args":{"%class_CTerrorPlayer% pPlayer":"The player that should be checked on","%enum_AdminAccessLevel_t% iAccessLevel":"The access flag we want to set"}}]},"Schedule":{"desc":"Class used to create a task and / or schedule.","page":"Schedule","category":"Engine","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"Create","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CSchedule","ref":null,"namespace":"Schedule","child":null,"desc":"Creates a object of CSchedule@, which can be manipulated.","desc_md":"true","desc_file":"Schedule_Create","type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CSchedule@ object, which can be manipulated.","args":{"%string_in% strFunction":"The name of the void function","%float_in% flDelay":"When this task should be fired (Counts in seconds)","%int_in% iRepeat = 0":"How many times it should repeat (-1 means it&apos;s infinite)"}},{"global":null,"name":"DoTask","namefake":null,"isfunc":"true","classfunction":null,"base":"void","object":"CSchedule","ref":null,"namespace":null,"child":null,"desc":"Forces the object to fire it&apos;s schedule","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Pause","namefake":null,"isfunc":"true","classfunction":null,"base":"void","object":"CSchedule","ref":null,"namespace":null,"child":null,"desc":"Pauses the schedule","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Resume","namefake":null,"isfunc":"true","classfunction":null,"base":"void","object":"CSchedule","ref":null,"namespace":null,"child":null,"desc":"Resumes the schedule","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Task","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"Schedule","child":null,"desc":"Fires a simple task.","desc_md":"true","desc_file":"Schedule_Task","type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flDelay":"When this task should be fired (Counts in seconds)","%string_in% strFunction":"The name of the void function"}}]},"Engine":{"desc":"Class used for engine related purposes.","page":"Engine","category":"Engine","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"AddToDownloadTable","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds the following string into the download table","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strFileName":"The file that should be added onto the download table"}},{"global":null,"name":"AddWorkshopID","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds the following WorkshopID into the download table","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%uint64% nWorkshopID":"The workshop ID we want our clienst to download when connecting"}},{"global":null,"name":"EdictCount","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the free and used edict count","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_out% iFree":"The number of free edicts","%int_out% iUsed":"The number of used edicts"}},{"global":null,"name":"EmitSoundEntity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Emits a sound from the specified entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"warning","infobox_desc":"Contagion does not support Steam Audio yet. You need use WWise soundevents for strSoundFile.","return":null,"args":{"%class_CBaseEntity% pEntity":"The entity where the sound will play from","%string_in% strSoundFile":"The file we want to play"}},{"global":null,"name":"EmitSoundPosition","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Emits a sound from the specified location","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"warning","infobox_desc":"Contagion does not support Steam Audio yet. You need use WWise soundevents for strSoundFile.","return":null,"args":{"%string_in% strSoundFile":"The file we want to play","%Vector_in% vecOrigin":"The position where the sound will play from"}},{"global":null,"name":"EnableCustomSettings","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enables and&#47;or disables CS (Custom Settings) Mode. This will allow certain values, and functions to be used. However, this will in return set the server into &quot;Custom&quot; state.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool% bEnable":"Enables or disables custom settings"}},{"global":null,"name":"Ent_Fire","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fires an IO value to a specific entity.","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strName":"The targeted entity name","%string_in% strAction":"The action it should send","%string_in% strValue":"The value we want to set it as, otherwise its empty (optional)","%string_in% strDelay":"When it should be fired, otherwise it&apos;s fired instantly (optional)"}},{"global":null,"name":"Ent_Fire_Ent","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fires an IO value to a specific entity.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The targeted entity","%string_in% strAction":"The action it should send","%string_in% strValue":"The value we want to set it as, otherwise its empty (optional)","%string_in% strDelay":"When it should be fired, otherwise it&apos;s fired instantly (optional)"}},{"global":null,"name":"PRECACHE_TYPE","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of precache types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"soundbank":"Used to precache soundbanks","sound":"Used to precache sounds","hud":"Used to precache hud elements","model":"Used to precache models and &#47; or sprites","material":"Used to precache materials (VMT only)","particle":"Used to precache particle files","script":"Used to precache script files","gameroot":"Used to precache files from the game&#47;mods folder"}},{"global":null,"name":"PrecacheFile","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Precaches the files, so the client and &#47; or server doesn&apos;t crash when spawning said value.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns returns the index of the precached value (if model), else it will return 1 if it was successful.","args":{"%enum_PRECACHE_TYPE% iValue":"Determines what we should precache","%string_in% strFileName":"The file that should be precached"}},{"global":null,"name":"RunConsoleCommand","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Executes a server console command.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strConsoleCommand":"The server command that will be executed."}},{"global":null,"name":"StartCampaign","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forcefully starts campaign mode for Dedicated Servers.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"warning","infobox_desc":"This function only works on dedicated servers.","return":null,"args":{"%string_in% CampaignName":"The name of the campaign file from data&#47;campaigns","%int_in% SessionID":"The session ID, allows 0-200"}}]}},"Entities":{"CPropDoorRotatingBreakable":{"desc":"Manipulates the CPropDoorRotatingBreakable object entity, and it's values.","page":"CPropDoorRotatingBreakable","subpage":"CBaseEntity","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"GetDoorHealth","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the health of the door","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the health of the door","args":{}},{"global":null,"name":"IsBreakable","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is breakable or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is breakable","args":{}},{"global":null,"name":"IsClosed","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is closed or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is closed","args":{}},{"global":null,"name":"IsClosing","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is closing or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is closing","args":{}},{"global":null,"name":"IsLocked","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is locked or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is locked","args":{}},{"global":null,"name":"IsOpen","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is open or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is open","args":{}},{"global":null,"name":"IsOpening","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is opening or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is opening","args":{}},{"global":null,"name":"LockState","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the locked state","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, the door will be locked"}},{"global":null,"name":"SetBreakable","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the door breakable state","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, we will be able to break the door"}},{"global":null,"name":"SetDoorHealth","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the door health","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iHealth":"The health this door should have."}}]},"CBaseAnimating":{"desc":"Manipulates the CBaseAnimating object entity, and it's values.","page":"CBaseAnimating","subpage":"CBaseEntity","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"Animate","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Animate the model to the next animation frame","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"LookupSequence","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Lookup an animation sequence","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the sequence number if found, -1 if invalid","args":{"%string_in% iAct":"The animation we want to find"}},{"global":null,"name":"PlayAnimation","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Starts the animation","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% nSequence":"The sequence we want to use"}},{"global":null,"name":"SetCycle","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Cycle access","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float% flCycle":"The sequence we want to use"}},{"global":null,"name":"SetPlaybackRate","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Animation playback rate","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float% rate":"The sequence we want to use"}},{"global":null,"name":"SetSequence","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The animation sequence to play from the compiled model (first animation starts with ID of 0)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% nSequence":"The sequence we want to use"}}]},"CBasePlayer":{"desc":"Manipulates the CBasePlayer object entity, and it's values.","page":"CBasePlayer","subpage":"CBaseEntity","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"GetPlayerName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the player name","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the player","args":{}},{"global":null,"name":"GetUserID","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the userid","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the userid of the player","args":{}},{"global":null,"name":"IsBot","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the player is a bot or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this is player is a bot","args":{}},{"global":null,"name":"IsConnected","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the player is connected","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this is player is connected","args":{}},{"global":null,"name":"LastHitGroup","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the last hitgroup","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the last hitgroup","args":{}},{"global":null,"name":"m_afButtonLast","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks when the button was last pressed","desc_md":"true","desc_file":"player_buttons_example","type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"m_afButtonPressed","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the button has been pressed","desc_md":"true","desc_file":"player_buttons_example","type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"m_afButtonReleased","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the button has been released","desc_md":"true","desc_file":"player_buttons_example","type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}}]},"CBaseButton":{"desc":"Manipulates the CBaseButton object entity, and it's values.","page":"CBaseButton","subpage":"CBaseEntity","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"IsLocked","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Lookup an animation sequence","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the button is locked","args":{}}]},"CBaseTrigger":{"desc":"Manipulates the CBaseTrigger object entity, and it's values.","page":"CBaseTrigger","subpage":"CBaseEntity","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"Disable","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Disables the trigger","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Enable","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enables the trigger","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"GetName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the name of the trigger","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the trigger","args":{}},{"global":null,"name":"IsTouching","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if said entity is touching this trigger","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the said entity is touching this trigger","args":{"%class_CBaseEntity% pEntity":"The entity that is touching this trigger"}},{"global":null,"name":"m_bDisabled","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CBaseTrigger","desc":"Checks if this trigger is disabled or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}}]},"Entity Creator":{"desc":"Creates new entities trough angelscript","page":"Entity Creator","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"Add","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CEntityData","ref":null,"namespace":null,"child":null,"desc":"Adds keyvalues into CEntityData","desc_md":"true","desc_file":"CEntityData_AddInput","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strInput":"Key input value","%string_in% strValue":"Key value","%bool% bAfterSpawn":"If true, it will send a input value after it spawns (AcceptInput)","%string_in% strDelay":"Delay time (Only used if it&apos;s an AcceptInput value)"}},{"global":null,"name":"Create","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":"EntityCreator","child":null,"desc":"Create and spawn a new entity within the map","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%string_in% strEntity":"The entity we want to create","%Vector% vecOrigin":"The position, where it should spawned and teleported to","%QAngle% qAngle":"The angles, where it should look at","%class_CEntityData% EntData":"[optional] Adds custom keyvalues to the entity before it spawns"}},{"global":null,"name":"CustomEntityTypes_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of custom entity types","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"k_eCustomWeapon":"Create custom weapons","k_eCustomNextBot":"Create custom NextBot Entity","k_eCustomPointClass":"Non interactable entity that won&apos;t be drawn","k_eCustomEntity":"Clients will be able to interact and see this entity","k_eCustomGameMode":"Custom GameMode"}},{"global":null,"name":"EntityData","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CEntityData","ref":null,"namespace":"EntityCreator","child":null,"desc":"Creates a CEntityData@ object, which can be used to manipulate the entity spawn values","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CEntityData@ object, which can be manipulated.","args":{}},{"global":null,"name":"PurgeCustomGameModes","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"EntityCreator","child":null,"desc":"Purge all custom gamemodes","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"RegisterCustomEntity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"EntityCreator","child":null,"desc":"Registers a custom entity","desc_md":"true","desc_file":"RegisterCustomEntity","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_CustomEntityTypes_t% eClassType":"Specify what kind of entity we want to create","%string_in% szClassname":"The classname of our custom entity","%string_in% szClassobject":"The class of our custom entity"}},{"global":null,"name":"RegisterCustomGameMode","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"EntityCreator","child":null,"desc":"Registers a custom gamemode","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szClassobject":"The class of our custom gamemode","%string_in% szMapTag":"The tag for this map, example zpo_"}},{"global":null,"name":"RegisterCustomWeapon","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"EntityCreator","child":null,"desc":"Registers a custom weapon","desc_md":"true","desc_file":"RegisterCustomWeapon","type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"deprecated","infobox_desc":"Use The new [RegisterCustomEntity][RegisterCustomEntity] function instead.","return":null,"args":{"%string_in% szClassname":"The classname of our custom weapon","%string_in% szClassobject":"The class of our custom weapon"}},{"global":null,"name":"UnregisterCustomEntity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"EntityCreator","child":null,"desc":"Deletes the custom class from memory","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szClassname":"The classname of our custom entity","%string_in% szClassobject":"The class of our custom entity"}}]},"CGameTrace":{"desc":"Manipulates the CGameTrace object entity, and it's values.","page":"CGameTrace","category":"Entities","restrict":"server","desc_md":"false","type":"class","functions":[{"global":null,"name":"allsolid","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Checks if the plane is fully solid or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true, plane is not valid","args":{}},{"global":null,"name":"CGameTrace","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a CGameTrace class.","desc_md":null,"desc_file":null,"type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CGameTrace class which can be manipulated","args":{}},{"global":null,"name":"COLLISIONGROUP","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of collision group types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"COLLISION_GROUP_NONE":"No collision","COLLISION_GROUP_DEBRIS":"Debris","COLLISION_GROUP_DEBRIS_TRIGGER":"Debris that can interact with triggers","COLLISION_GROUP_INTERACTIVE_DEBRIS":"Debris that can be interacted by players","COLLISION_GROUP_INTERACTIVE":"Interactive by players","COLLISION_GROUP_PLAYER":"Players","COLLISION_GROUP_BREAKABLE_GLASS":"Breakable glass planes","COLLISION_GROUP_PLAYER_MOVEMENT":"Players (When not standing still)","COLLISION_GROUP_WEAPON":"Weapons","COLLISION_GROUP_PROJECTILE":"Projectiles","COLLISION_GROUP_DOOR_BLOCKER":"Door blocker","COLLISION_GROUP_PASSABLE_DOOR":"Passable doors","COLLISION_GROUP_DISSOLVING":"Dissolving entities"}},{"global":null,"name":"contents","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the contents from the hit surface if we hit something","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the contents on other side of surface hit","args":{}},{"global":null,"name":"DestroyTracer","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Destroys the CGameTrace","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"DidHit","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Checks if the tracer hit something","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the tracer hit something","args":{}},{"global":null,"name":"DidHitNonWorldEntity","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Checks if the tracer hit a non world entity or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the tracer hit an entity object that isn't the world","args":{}},{"global":null,"name":"DidHitWorld","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Checks if the tracer hit the world or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the tracer hits the world","args":{}},{"global":null,"name":"endpos","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the end position of the tracer","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector class which can be manipulated","args":{}},{"global":null,"name":"fraction","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the amount of time","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the time completed, 1.0 = didn't hit anything","args":{}},{"global":null,"name":"fractionleftsolid","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the amount of time subce we left a solid","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the time we left a solid, only valid if we started in solid","args":{}},{"global":null,"name":"GetEntityIndex","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the index from the object, if it&apos;s valid","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the index of the entity object","args":{}},{"global":null,"name":"hitbox","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"If hEnt points at the world entity, then this is the static prop index. Otherwise, this is the hitbox index.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the hitbox index","args":{}},{"global":null,"name":"hitgroup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the hitgroup if we hit something","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the hitgroup, 0 == generic, non-zero is specific body part","args":{}},{"global":null,"name":"m_pEnt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Grabs the entity, if it&apos;s valid","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CBaseEntity@ class which can be manipulated","args":{}},{"global":null,"name":"MASK","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of mask types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"MASK_ALL":"checks everything","MASK_SOLID":"everything that is normally solid","MASK_NPCSOLID":"blocks npc movement","MASK_WATER":"water physics in these contents","MASK_OPAQUE":"everything that blocks lighting","MASK_VISIBLE":"everything that blocks line of sight for players","MASK_SHOT":"bullets see these as solid","MASK_SHOT_HULL":"non-raycasted weapons see this as solid (includes grates)","MASK_SHOT_PORTAL":"hits solids (not grates) and passes through everything else","MASK_SOLID_BRUSHONLY":"everything normally solid, except monsters (world+brush only)","MASK_PLAYERSOLID_BRUSHONLY":"everything normally solid for player movement, except monsters (world+brush only)","MASK_SPLITAREAPORTAL":"These are things that can split areaportals","MASK_CURRENT":"any moving water","MASK_DEADSOLID":"everything that blocks corpse movement","MASK_L4D_VISION":"everything that blocks line of sight in Left4Dead (players and bots all use this, and it hits other players and bots)","MASK_CONTAGION_VISION":"Same as MASK_L4D_VISION, except, we don&apos;t want to ignore OPAQUE, since some models uses it."}},{"global":null,"name":"startpos","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the start position of the tracer","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector class which can be manipulated","args":{}},{"global":null,"name":"startsolid","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Checks if the plane is solid or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true, the initial point was in a solid area","args":{}},{"global":null,"name":"TracePlaneNormal","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the plane normal of the trace","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector class which can be manipulated","args":{}}]},"CTerrorPlayer":{"desc":"Manipulates the CTerrorPlayer object entity, and it's values.","page":"CTerrorPlayer","subpage":"CBasePlayer","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"AddScore","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Increases the player score","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iScore":"The score we want to increase (or decrease if its a negative number)"}},{"global":null,"name":"AllowMusic","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The player will either hear the ingame music or not","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"custom","infobox_desc":"null","return":null,"args":{"%string_in% bAllowMusic":"Allow default music to be played"}},{"global":null,"name":"AmmoTypeValue","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of player ammo type values","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"k_eRevolver":".357 Magnum","k_ePistol":"9x19mm","k_eRifle":"5.56x45mm","k_eShotgun":"12-Gauge","k_eSniper":"7mm Magnum","k_eArrows":"Arrows","k_eFlame":"Flame Canister","k_eGrenadeLauncher":"40x46mm Grenade","k_e45ACP":".45 ACP","k_e50AE":".50 AE"}},{"global":null,"name":"ConsoleCommand","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The player will send a console command to the server","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"custom","infobox_desc":"null","return":null,"args":{"%string_in% szCommand":"Console command"}},{"global":null,"name":"DropUnusedAmmo","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Drops all unused ammunition","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"DropWeapon","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Drops the weapon, if we have a weapon on the specific slot","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we able to drop the weapon","args":{"%int_in% iSlot":"The weapon slot we want to drop. We only allow slot 1-5","%bool_in% bThrowForward = false":"Throw the weapon forward"}},{"global":null,"name":"Escape","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Functions the same as the trigger &quot;trigger_escape&quot;, where it will tell the player to simply &quot;escape&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"ForceGrapple","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forces the player to be grappled. If the pEnt is null, then no zombie (Infected AI or CTerrorPlayer on the zombie team) will be teleported to our location.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEnt":"Our zombie (Infected and&#47;or CTerrorPlayer on the zombie team that will force grapple us)"}},{"global":null,"name":"ForceRevive","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forces the player to revive from where they are.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"GetCurrentWeapon","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Returns the current active weapon","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"GetHudVisibility","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the hud visibility","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we able to see the hud","args":{}},{"global":null,"name":"GetMaxSpeed","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs our max possible speed","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the max speed value","args":{}},{"global":null,"name":"GetNavInformation","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the navigation information from where the player is standing, if available.","desc_md":null,"desc_file":null,"type":"NavInfo","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the information of the navigation the player is currently standing at","args":{}},{"global":null,"name":"GetPunchAngle","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the punch origin of the player","desc_md":null,"desc_file":null,"type":"QAngle","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a QAngle of the player punch angles","args":{}},{"global":null,"name":"GetScore","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the player score","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current score of the player","args":{}},{"global":null,"name":"GetSteamID64","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the SteamID64 from the player","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the SteamID64 as a string","args":{}},{"global":null,"name":"GetSurvivorID","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the ID of the survivor","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the ID of the current survivor","args":{}},{"global":null,"name":"GetSurvivorName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the name of the survivor","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the current survivor","args":{}},{"global":null,"name":"GetWeaponFromSlot","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Grabs a weapon from a valid weapon slot.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%int_in% iSlot":"The weapon slot we want to grab"}},{"global":null,"name":"GetWeaponSlot","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the weapon slot number of our desired weapon, if it&apos;s found","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the weapon slot number, -1 if the weapon is not found.","args":{"%string_in% szClassname":"Find the weapon slot by classname (targetname also works)"}},{"global":null,"name":"GiveAmmo","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gives a ammo type to the player, if they have enough room for it","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value of the ammo that were given","args":{"%enum_AmmoTypeValue% eAmmoTypeValue":"The ammo type of our choice","%int_in% iAmount":"The amount of ammo we should add or remove"}},{"global":null,"name":"GiveWeapon","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gives a specific weapon to the player, if they have enough room for it","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we able to give this weapon to the player","args":{"%string_in% szClassname":"The classname of the weapon we want to give to the player"}},{"global":null,"name":"GrabConvar","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the value of the client convar, if it allows server manipulation","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the client convar value","args":{"%string_in% strConVar":"The client convar","%string_in% strDefault":"Default value, if the convar fails"}},{"global":null,"name":"GrabIP","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the IP of the player","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the IP as a string","args":{}},{"global":null,"name":"GrabPing","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the lentancy (ping) of the player","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the ping as an interger","args":{}},{"global":null,"name":"HasGasMaskEquipped","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the player has their gasmask equipped","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this player has their gasmask equipped","args":{}},{"global":null,"name":"IsInfected","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the player is infected or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this player is infected","args":{}},{"global":null,"name":"IsMarkedForKick","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Used by the built in admin kick and ban.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this player is marked","args":{}},{"global":null,"name":"IsRoaring","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the player is currently roaring","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true, if the player is roaring","args":{}},{"global":null,"name":"NavInfo","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Contains navigation information","desc_md":"true","desc_file":"NavInfo","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"OnLookCommand","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Emits a &quot;look over here!&quot; voice command from a specific object or what the player is currently looking at","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEnt":"Our object that we want to point out (optional)"}},{"global":null,"name":"OnVoiceCommand","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Emits a voice command from the player","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szCommand":"Our voice command we want to play","%bool_in% bForced":"If true, it will be forced to play, no matter what"}},{"global":null,"name":"OpenSteamOverlay","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Opens up the steam overlay (if the client allows such a thing)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szHttp":"The website we want to visit"}},{"global":null,"name":"PhoneRingTone","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Causes the phone to emit a ringtone.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_RingTone% nTone":"The ringtone"}},{"global":null,"name":"PlayerVoice","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of player voices","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"eugene":"Eugene","marcus":"Marcus","nick":"Nick","tony":"Tony","jessica":"Jessica","nicole":"Nicole","ryan":"Ryan","lawrence":"Lawrence","mia":"Mia","manuel":"Manuel","curtis":"Curtis","yumi":"Yumi","mike":"Mike","diego":"Diego"}},{"global":null,"name":"PlayWwiseSound","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The player will play a specific sound event","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szSound":"WWise Sound ID","%string_in% szEnt":"The entity location where we want to play it from (leave empty for player&apos;s ears &#47; play everywhere)","%float_in% flRange":"The range of the sound (if szEnt is set)"}},{"global":null,"name":"PutToInventory","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Inserts an existing weapon object into our inventory","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we able to put this weapon inside our inventory","args":{"%class_CBaseEntity% pEntity":"The weapon object that we want to insert into our inventory, if we have enough space"}},{"global":null,"name":"RemoveWeapon","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Removes the weapon, if we have a weapon on the specific slot","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the weapon was found","args":{"%int_in% iSlot":"The weapon slot we want to drop. We only allow slot 1-5"}},{"global":null,"name":"ResetArms","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Removes the custom arm model and applies the default character one","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Respawn","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Respawns the player","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"RingTone","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of phone ringtones.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"vibrate":"null","brightbeep":"null","chillywater":"null","darkbeeps":"null","thedec":"null","zps_theme":"null","zps_cityofsouls":"null","zps_darkalley":"null","zps_descent":"null","zps_forgottenkingdom":"null","zps_trepidation":"null","zps_orphanage":"null","zps_plauge":"null","dlc_sleep":"null","dlc_band":"null","dlc_omen":"null","dlc_fallen":"null","dlc_behind":"null","dlc_rift":"null","dlc_away":"null","dlc_pursuit":"null","none":"null"}},{"global":null,"name":"SetArmModel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current active arm model with a new one","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szModelName":"Overrides the current arm model with a new one"}},{"global":null,"name":"SetCharacter","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the player character. If zombie team, it will assign the zombie variant.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iSurvivor":"The survivor of choice, from 0 to 12"}},{"global":null,"name":"SetGodMode","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Applies or removes godmode from players","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool% bState":"If false, it will disable godmode"}},{"global":null,"name":"SetHudVisibility","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the hud visibility","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% bIsHUDVisible":"Overrides the hud visibility"}},{"global":null,"name":"SetInfection","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forces the infection, or removes it","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool% bState":"If false, it will remove the infection from the player, if they are infected","%float% flTimer = 30.0f":"The amount of time until the player gets infected, and turns"}},{"global":null,"name":"SetMaxSpeed","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the max possible speed","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"custom","infobox_desc":"null","return":null,"args":{"%float_in% flSpeed":"Overrides the max speed we can obtain. If set to 0.0f, it will revert to default max speed","%bool_in% bRunSpeed":"If true, it will override the max sprint speed"}},{"global":null,"name":"SetPlayerName","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the player name","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szPlayerName":"Overrides the player name on the server (resets if the player reconnect)"}},{"global":null,"name":"SetPunchAngle","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Punches the player&apos;s view","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%QAngle% angles":"The angles where we should punch the player view"}},{"global":null,"name":"SetVoice","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current voice with a new one. The voice will reset to default if the player respawns.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_PlayerVoice% eVoice":"Overrides the player voice"}},{"global":null,"name":"StopWwiseSound","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The player will stop all sounds from an entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szEnt = \"\"":"The entity we want to stop all sounds from (leave empty for player)"}},{"global":null,"name":"StripEquipment","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Removes everything from the player (inventory and phone)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% bAmmo":"Removes all ammo"}},{"global":null,"name":"UIDraw","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The UI element we want to draw on the player&apos;s HUD","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%DrawASUI_in% data":"The UI Data element we want to draw"}},{"global":null,"name":"UIRemove","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The UI element we want to remove from the player&apos;s HUD","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iID":"The UI ID that we want to remove, if it exists"}},{"global":null,"name":"Vocalize","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forces the player to vocalize from the voice table.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_VoiceEnumTable% nTable":"The voice table we want to use"}},{"global":null,"name":"VoiceEnumTable","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of character voices.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"k_eVoiceYes":"null","k_eVoiceNo":"null","k_eVoiceZombies":"null","k_eVoiceFollow":"null","k_eVoiceThanks":"null","k_eVoiceStop":"null","k_eVoiceBarricade":"null","k_eVoiceHelp":"null","k_eVoiceNeedWeapon":"null","k_eVoiceNeedAmmo":"null","k_eVoiceNeedHealth":"null","k_eVoiceTakeThis":"null","k_eVoiceCoverMe":"null","k_eVoiceLetsGo":"null","k_eVoiceNoProblem":"null","k_eVoiceIllFollow":"null","k_eVoiceJoinTeam":"null","k_eVoiceFoundWeapon":"null","k_eVoiceFoundItem":"null","k_eVoiceFoundSpecific_BoltCutter":"null","k_eVoiceFoundSpecific_Extinguisher":"null","k_eVoiceFoundSpecific_Nailgun":"null","k_eVoiceFoundSpecific_Keys":"null","k_eVoiceFoundSpecific_KeyCard":"null","k_eVoiceFoundAmmo":"null","k_eVoiceFoundHealth":"null","k_eVoiceFoundBreakable":"null","k_eVoiceFoundSurvivor":"null","k_eVoiceIdle":"null","k_eVoiceDoorLocked":"null","k_eVoiceDoorClose":"null","k_eVoiceHeIsInfected":"null","k_eVoiceSheIsInfected":"null","k_eVoiceFriendlyFire":"null","k_eVoiceGrenade":"null","k_eVoiceExtractionPoint":"null","k_eVoiceDying":"null","k_eVoiceTurning":"null","k_eVoicePain":"null","k_eVoiceDrown":"null","k_eVoiceNPCDeath":"null","k_eVoiceNPCPain":"null","k_eVoiceNPCAttacked":"null","k_eVoiceTaunt":"null","k_eVoiceCarAlarm":"null","k_eVoiceCarAlarm_Cause":"null","k_eVoiceCarAlarm_Found":"null","k_eVoiceRadioUse":"null","k_eVoiceRadioUseTrain":"null","k_eVoiceCresendo":"null","k_eVoiceResponseA":"null","k_eVoiceResponseB":"null","k_eVoiceResponse_MikeA":"null","k_eVoiceResponse_MikeB":"null","k_eVoiceResponse_DiegoA":"null","k_eVoiceResponse_DiegoB":"null","k_eVoiceResponse_ElijahA":"null","k_eVoiceResponse_ElijahB":"null","k_eVoiceAskA":"null","k_eVoiceAskB":"null","k_eVoiceAsk_MikeA":"null","k_eVoiceAsk_MikeB":"null","k_eVoiceAsk_DiegoA":"null","k_eVoiceAsk_DiegoB":"null","k_eVoiceAsk_ElijahA":"null","k_eVoiceAsk_ElijahB":"null","k_eVoiceBombsOnATrain":"null","k_eVoiceBridePre":"null","k_eVoiceBrideFight":"null","k_eVoiceFinale":"null","k_eVoiceForest":"null","k_eVoiceLabs":"null","k_eVoiceLabsEgg":"null","k_eVoiceLastStop_06_01":"null","k_eVoiceLastStop_06_02":"null","k_eVoiceLastStop_06_03":"null","k_eVoiceLastStop_07_01":"null","k_eVoiceLastStop_08_01":"null","k_eVoiceLastStop_08_02":"null","k_eVoiceMansion":"null","k_eVoiceElevator":"null","k_eVoiceElevatorSurface":"null","k_eVoiceRadio":"null","k_eVoiceTrain":"null","k_eVoiceTrainStation":"null"}}]},"NetProp":{"desc":"Modifies entity properties","page":"NetProp","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"Dump","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Dump all network properties from an object into to a local file inside data&#47;netprops&#47; folder.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szFile":"The name of the file we want to dump everything at"}},{"global":null,"name":"GetPropEntity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":"NetProp","child":null,"desc":"Grabs the CBaseEntity property from the entity","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the property value","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity"}},{"global":null,"name":"GetPropEntityArray","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":"NetProp","child":null,"desc":"Grabs the CBaseEntity property from the entity","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the property value","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%int_in% iElement":"The element we want to read"}},{"global":null,"name":"GetPropFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Grabs the float property from the entity","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the property value","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity"}},{"global":null,"name":"GetPropFloatArray","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Grabs the float property from the entity","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the property value","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%int_in% iElement":"The element we want to read"}},{"global":null,"name":"GetPropInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Grabs the interger property from the entity","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the property value","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity"}},{"global":null,"name":"GetPropIntArray","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Grabs the interger property from the entity","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the property value","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%int_in% iElement":"The element we want to read"}},{"global":null,"name":"GetPropString","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Grabs the string property from the entity","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the property value","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity"}},{"global":null,"name":"GetPropStringArray","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Grabs the string property from the entity","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the property value","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%int_in% iElement":"The element we want to read"}},{"global":null,"name":"GetPropType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Grabs the property type from the entity","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the property type","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity"}},{"global":null,"name":"GetPropVector","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Grabs the Vector property from the entity","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the property value","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity"}},{"global":null,"name":"GetPropVectorArray","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Grabs the Vector property from the entity","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the property value","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%int_in% iElement":"The element we want to read"}},{"global":null,"name":"HasProp","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Checks if the entity has said property value","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the entity has the property value","args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity"}},{"global":null,"name":"SetPropEntity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Sets the CBaseEntity property on the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%class_CBaseEntity% pValue":"The value we want to apply"}},{"global":null,"name":"SetPropEntityArray","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Sets the CBaseEntity property on the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%class_CBaseEntity% pValue":"The value we want to apply","%int_in% iElement":"The element we want to apply"}},{"global":null,"name":"SetPropFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Sets the float property on the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%float_in% flValue":"The value we want to apply"}},{"global":null,"name":"SetPropFloatArray","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Sets the float property on the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%int_in% iElement":"The element we want to apply"}},{"global":null,"name":"SetPropInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Sets the string property on the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%int_in% iValue":"The value we want to apply"}},{"global":null,"name":"SetPropIntArray","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Sets the string property on the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%int_in% iElement":"The element we want to apply"}},{"global":null,"name":"SetPropString","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Sets the string property on the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%string_in% szValue":"The value we want to apply"}},{"global":null,"name":"SetPropStringArray","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Sets the string property on the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%string_in% szValue":"The value we want to apply","%int_in% iElement":"The element we want to apply"}},{"global":null,"name":"SetPropVector","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Sets the Vector property on the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%Vector% vValue":"The value we want to apply"}},{"global":null,"name":"SetPropVectorArray","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"NetProp","child":null,"desc":"Sets the Vector property on the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity","%string_in% szPropertyName":"The property value of the entity","%Vector% vValue":"The value we want to apply","%int_in% iElement":"The element we want to apply"}}]},"CTerrorWeapon":{"desc":"Manipulates the CTerrorWeapon object entity, and it's values.","page":"CTerrorWeapon","subpage":"CBaseEntity","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"FireBullets","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fires our bullets","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{}},{"global":null,"name":"GetAmmoCount","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current ammo count","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":"Returns the amount of ammo left","args":{}},{"global":null,"name":"GetFireRate","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the firerate of the weapon","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{}},{"global":null,"name":"GetMaxClip","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Our max clip amount","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the max clip amount","args":{}},{"global":null,"name":"GetObjectiveName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the objective name from the entity","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"GetViewModel","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CBaseAnimating","ref":null,"namespace":null,"child":null,"desc":"Grabs the view model of this weapon","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"GetWeaponInformation","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Our weapon information","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{"%WeaponInfo_out% info":"The weapon information"}},{"global":null,"name":"GrabOwner","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CTerrorPlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs the owner of the weapon","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{}},{"global":null,"name":"HasAttachment","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the weapon has said attachment","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":"Returns true if the attachment exist","args":{"%enum_WeaponAttachment% Attachment":"The Attachment ID","%bool_out% bAttached":"Returns true if it&apos;s attached"}},{"global":null,"name":"HasWeaponIdleTimeElapsed","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the idle time has elapsed","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"IsInWorld","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the weapon is within the world","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":"Returns true if the weapon is within the world","args":{}},{"global":null,"name":"m_flNextPrimaryAttack","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current primary attack time","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"m_flNextSecondaryAttack","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current secondary attack time","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"m_iClip","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current clip","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"m_iIsFiring","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current fire state","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"MeleeAttack","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When melee attack gets fired","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{}},{"global":null,"name":"OnCreate","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the weapon gets created","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{}},{"global":null,"name":"OnDestroy","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the weapon gets destroyed","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{}},{"global":null,"name":"PrimaryAttack","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When primary attack gets fired","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{}},{"global":null,"name":"SecondaryAttack","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When secondary attack gets fired","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{}},{"global":null,"name":"SendWeaponAnim","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Play a weapon animation","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":"Returns true if the animation exists","args":{"%Activity% iAct":"The animation we want to play"}},{"global":null,"name":"SetActiveWorldModel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the active world model for the weapon","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{"%string_in% szModel":"Sets the active world model"}},{"global":null,"name":"SetAllowAttachmentDrop","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Should this weapon allow attachments?","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{"%bool% state":"If true, this weapon will allow weapon drops"}},{"global":null,"name":"SetAllowUnderWater","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Allow this weapon to fire underwater?","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{"%bool% ClipSize":"If true, this weapon will be able to shoot underwater"}},{"global":null,"name":"SetAmmoType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the ammotype this weapon should use. Check [WeaponInfo_AmmoDef] for available ammotypes","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{"%int% AmmoType":"The ammotype ID"}},{"global":null,"name":"SetAttachment","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Apply weapon attachments for the weapon.","desc_md":"true","desc_file":"SetAmmoAttachmentInfo","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_WeaponAttachment% Attachment":"The Attachment ID","%int% state":"If true, it will set the specified bodygroup 0. If false, it will set it to 1"}},{"global":null,"name":"SetClipSize","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the clip size for this weapon","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{"%int% ClipSize":"The clip size"}},{"global":null,"name":"SetIsHeavy","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Is this weapon heavy?","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{"%bool% state":"If true, this weapon will do heavy staggers"}},{"global":null,"name":"SetMeleeDamage","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the melee damage for this weapon","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your weapon script","return":null,"args":{"%int% MeleeDamage":"The damage amount"}},{"global":null,"name":"SetModel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the view and world model for the weapon","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szWorld":"Sets the world model","%string_in% szView":"Sets the view model"}},{"global":null,"name":"SetWeaponAnimationPlaybackRate","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides playback rate for the current weapon animation for both View and World model","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float% flRate":"Sets the playback rate for the current weapon animation"}},{"global":null,"name":"SetWeaponIdleTime","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the weapon should switch back to idle","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float% flIdle":"When we should switch back to idle animation"}},{"global":null,"name":"SwitchAwayFromThis","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Switches to another weapon","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"UpgradeModule","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Apply, remove or check if the weapon has upgrades.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we could apply, remove or if it has said upgrade","args":{"%enum_WeaponUpgradeInfo% UpgradeSet":"The Upgrade we want to apply","%enum_WeaponUpgrade% UpgradeMod":"The Upgrade we want to apply"}},{"global":null,"name":"WeaponAttachment","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of the weapon attachments","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"k_eNone":"null","k_eFlashlight":"null","k_eSilencer":"null","k_eRailMod":"null","k_eSightDef":"null","k_eSightDefFront":"null","k_eSightRedDot":"null","k_eSightHolo":"null","k_eSightScope":"null","k_eLaserSight":"null","k_eArrowSet":"null","k_eVertGrip":"null","k_eExtendedMag":"null"}},{"global":null,"name":"WeaponInfo","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Contains weapon information for custom weapons","desc_md":"true","desc_file":"WeaponInfo","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"WeaponInfo_AmmoDef","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of the WeaponInfo ammo","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"AMMO_NONE":"If set, it will read the iAmmoSizeMax from WeaponInfo","AMMO_REVOLVER":"Tells the weapon to use revolver ammo","AMMO_PISTOL":"Tells the weapon to use pistol ammo","AMMO_RIFLE":"Tells the weapon to use rifle ammo","AMMO_SHOTGUN":"Tells the weapon to use shotgun ammo","AMMO_SNIPER":"Tells the weapon to use sniper ammo","AMMO_ARROW":"Tells the weapon to use arrows","AMMO_FLAME":"Tells the weapon to use flame ammo","AMMO_GLAUNCHER":"Tells the weapon to use grenade ammo","AMMO_45ACP":"Tells the weapon to use 45acp ammo","AMMO_50AE":"Tells the weapon to use 50ae ammo"}},{"global":null,"name":"WeaponUpgrade","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of the weapon upgrades","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"k_eNone":"null","k_eExplosive":"null","k_eDissolve":"null","k_eDoubleDamage":"null","k_eFireDamage":"null","k_eFlashlight":"null","k_eMoneyBoost":"null"}},{"global":null,"name":"WeaponUpgradeInfo","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of the weapon upgrades information","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"SET":"Applies the upgrade module","HAS":"Checks if it has the upgrade module","REM":"Removes the upgrade moduke"}}]},"Infected":{"desc":"Manipulates the Infected object entity, and it's values.","page":"Infected","subpage":"CBaseEntity","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"AddDroppableItem","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Add an item to our droppable items. 5 is the maximum amount.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we are able to add a droppable item to our list","args":{"%string_in% strModel":"Our model we want to draw and attach","%string_in% strItem":"Our item we want to drop on death","%bool_in% bIsMelee":"If this is a melee weapon, then set this to true."}},{"global":null,"name":"Enrage","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"This will cause the zombie to be enraged, and run forwards their target. If it doesn&apos;t have a target, then it will randomly pick one.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"EnrageTarget","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"This will cause the zombie to be enraged, and run forwards their specific target.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pTarget":"The specified player it should target"}},{"global":null,"name":"GetAnimationSet","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current animation set of the infected AI","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the ID of the animation set","args":{}},{"global":null,"name":"GetRiotHelmetHealth","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Returns the health of our riot helmet","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the health of our riot helmet","args":{}},{"global":null,"name":"GetZombieFollower","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs our zombie follower (the person who roared)","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the entity index of our zombie follower. Returns -1 if we don't find anything.","args":{}},{"global":null,"name":"GetZombieID","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the zombie ID type","desc_md":null,"desc_file":null,"type":"ZombieID","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the ID of the zombie","args":{}},{"global":null,"name":"HasRiotHelmet","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the zombie have a riot helmet","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the zombie has a breakable riot helmet","args":{}},{"global":null,"name":"IsFemaleZombie","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the zombie is using a female model","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the zombie is using a female model","args":{}},{"global":null,"name":"IsRiot","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the zombie is a riot zombie","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the zombie is a riot zombie","args":{}},{"global":null,"name":"IsStumbling","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the zombie is currently stumbling","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the zombie is stumbling","args":{}},{"global":null,"name":"IsZombieBoss","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the zombie is a boss","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the zombie is a boss type","args":{}},{"global":null,"name":"LastHitGroup","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the last hitgroup","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the last hitgroup","args":{}},{"global":null,"name":"ReduceDroppableItems","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Reduce the amount of droppable items, if it has any.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iAmount":"Reduces the amount of items. 5 is the maximum amount."}},{"global":null,"name":"SetAnimationSet","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the zombie speed walk and run speed. Max value is 10","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% animationset":"The animation set we want to use."}}]},"DrawASUI":{"desc":"Manipulates the DrawASUI object entity, and it's values.","page":"DrawASUI","category":"Entities","desc_md":"false","type":"class","functions":[{"global":null,"name":"Draw","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"DrawASUI","desc":"Draws the UI on the client side.","desc_md":"true","desc_file":"DrawASUI_Draw","type":"void","restrict":"client","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"DrawASUI","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Contains draw information for the player","desc_md":"true","desc_file":"DrawASUI","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"DrawASUIEnum","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of DrawASUIEnum types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"UI_Text":"Draw a simple string of text","UI_Texture":"Draw a texture file","UI_Background":"Draw a background (same as UI_Texture, except it&apos;s solid color)","UI_BackgroundFade":"Same as UI_Background, Alpha1 and Alpha2 controls the fade","UI_BackgroundFadeHorizontal":"Same as UI_Background, Alpha1 and Alpha2 controls the fade","UI_Outline":"Same as UI_Background, except we only draw the outline","UI_Line":"Draw a simple line"}},{"global":null,"name":"DrawASUIFonts","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of DrawASUIFonts types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"k_eSmallest":"null","k_eSmall":"null","k_eNormal":"null","k_eLarge":"null","k_eLargest":"null"}},{"global":null,"name":"DrawASUITypeEnum","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of DrawASUITypeEnum types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"UI_Top":"Starts the position from top left.","UI_TopRight":"Starts the position from top right","UI_Bottom":"Starts the position from bottom left","UI_BottomRight":"Starts the position from bottom right","UI_Center":"Starts the position from the center"}}]},"CBaseEntity":{"desc":"Manipulates the CBaseEntity object entity, and it's values.","page":"CBaseEntity","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"Activity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of the Activities","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"ACT_INVALID":"null","ACT_RESET":"null","ACT_IDLE":"null","ACT_TRANSITION":"null","ACT_WALK":"null","ACT_WALK_CROUCH":"null","ACT_RUN":"null","ACT_RUN_CROUCH":"null","ACT_SCRIPT_CUSTOM_MOVE":"null","ACT_DIESIMPLE":"null","ACT_DIEBACKWARD":"null","ACT_DIEFORWARD":"null","ACT_DIEVIOLENT":"null","ACT_DIERAGDOLL":"null","ACT_FLY":"null","ACT_HOVER":"null","ACT_GLIDE":"null","ACT_SWIM":"null","ACT_JUMP":"null","ACT_LEAP":"null","ACT_LAND":"null","ACT_CLIMB":"null","ACT_CLIMB_UP":"null","ACT_CLIMB_DOWN":"null","ACT_STRAFE_LEFT":"null","ACT_STRAFE_RIGHT":"null","ACT_ROLL_LEFT":"null","ACT_ROLL_RIGHT":"null","ACT_TURN_LEFT":"null","ACT_TURN_RIGHT":"null","ACT_CROUCH":"null","ACT_IDLE_CROUCH":"null","ACT_STAND":"null","ACT_USE":"null","ACT_RUNTOIDLE":"null","ACT_PRIMARYATTACK_PRIME":"null","ACT_PRIMARYATTACK_PRIME_IDLE":"null","ACT_PRIMARYATTACK":"null","ACT_SECONDARYATTACK":"null","ACT_PRIMARYATTACK_LAST":"null","ACT_RELOAD_LOOP":"null","ACT_RELOAD_LOOP_DOUBLE":"null","ACT_RELOAD_END":"null","ACT_VCD":"null","ACT_SPRINT":"null","ACT_DEPLOY":"null","ACT_HOLSTER":"null","ACT_PUMP":"null","ACT_MELEE":"null","ACT_MELEE_GRAPPLE":"null","ACT_SMALL_FLINCH":"null","ACT_BIG_FLINCH":"null","ACT_RELOAD":"null","ACT_RELOAD_START":"null","ACT_RELOAD_START_EMPTY":"null","ACT_RELOAD_START_EMPTY_SINGLE":"null","ACT_RELOAD_FINISH":"null","ACT_DROP_WEAPON":"null","ACT_VICTORY_DANCE":"null","ACT_DIE_HEADSHOT":"null","ACT_DIE_CHESTSHOT":"null","ACT_DIE_GUTSHOT":"null","ACT_DIE_BACKSHOT":"null","ACT_IDLE_ON_FIRE":"null","ACT_WALK_ON_FIRE":"null","ACT_RUN_ON_FIRE":"null","ACT_GESTURE_SMALL_FLINCH":"null","ACT_GESTURE_BIG_FLINCH":"null","ACT_GESTURE_FLINCH_BLAST":"null","ACT_GESTURE_FLINCH_BLAST_SHOTGUN":"null","ACT_GESTURE_FLINCH_BLAST_DAMAGED":"null","ACT_GESTURE_FLINCH_BLAST_DAMAGED_SHOTGUN":"null","ACT_GESTURE_FLINCH_HEAD":"null","ACT_GESTURE_FLINCH_CHEST":"null","ACT_GESTURE_FLINCH_STOMACH":"null","ACT_GESTURE_FLINCH_LEFTARM":"null","ACT_GESTURE_FLINCH_RIGHTARM":"null","ACT_GESTURE_FLINCH_LEFTLEG":"null","ACT_GESTURE_FLINCH_RIGHTLEG":"null","ACT_DO_NOT_DISTURB":"null","ACT_VM_MELEE":"null","ACT_VM_MELEE2":"null","ACT_VM_MELEE3":"null","ACT_VM_MELEE_MISS":"null","ACT_VM_MELEE2_MISS":"null","ACT_VM_MELEE3_MISS":"null","ACT_VM_MELEE_HIT":"null","ACT_VM_MELEE2_HIT":"null","ACT_VM_MELEE3_HIT":"null","ACT_VM_MELEE_HOLD":"null","ACT_VM_MELEE2_HOLD":"null","ACT_VM_MELEE3_HOLD":"null","ACT_VM_MELEE_PUSH":"null","ACT_VM_MELEE_SWIPE":"null","ACT_VM_MELEE_START_V1":"null","ACT_VM_MELEE_START_V2":"null","ACT_VM_MELEE_START_V3":"null","ACT_VM_MELEE_START_H1":"null","ACT_VM_MELEE_START_H2":"null","ACT_VM_MELEE_START_H3":"null","ACT_VM_MELEE_HOLD_V1":"null","ACT_VM_MELEE_HOLD_V2":"null","ACT_VM_MELEE_HOLD_V3":"null","ACT_VM_MELEE_HOLD_H1":"null","ACT_VM_MELEE_HOLD_H2":"null","ACT_VM_MELEE_HOLD_H3":"null","ACT_VM_MELEE_MISS_V1":"null","ACT_VM_MELEE_MISS_V2":"null","ACT_VM_MELEE_MISS_V3":"null","ACT_VM_MELEE_MISS_H1":"null","ACT_VM_MELEE_MISS_H2":"null","ACT_VM_MELEE_MISS_H3":"null","ACT_VM_MELEE_HIT_V1":"null","ACT_VM_MELEE_HIT_V2":"null","ACT_VM_MELEE_HIT_V3":"null","ACT_VM_MELEE_HIT_H1":"null","ACT_VM_MELEE_HIT_H2":"null","ACT_VM_MELEE_HIT_H3":"null","ACT_CHARGE1_POST":"null","ACT_CHARGE1_IDLE":"null","ACT_CHARGE1_SWING":"null","ACT_CHARGE2_POST":"null","ACT_CHARGE2_IDLE":"null","ACT_CHARGE2_SWING":"null","ACT_CONTAGION_JUMP_1911":"null","ACT_CONTAGION_JUMP_KG9":"null","ACT_CONTAGION_JUMP_MP5K":"null","ACT_CONTAGION_JUMP_MOSSBERG":"null","ACT_CONTAGION_JUMP_AR15":"null","ACT_CONTAGION_JUMP_SLEDGEHAMMER":"null","ACT_CONTAGION_JUMP_ZOMBIE":"null","ACT_CONTAGION_JUMP_GRENADE":"null","ACT_CONTAGION_JUMP_INOCULATOR":"null","ACT_CONTAGION_JUMP_BOLTCUTTER":"null","ACT_CONTAGION_JUMP_SNIPER":"null","ACT_CONTAGION_JUMP_PHONE":"null","ACT_CONTAGION_JUMP_COIN":"null","ACT_CONTAGION_IDLE_1911":"null","ACT_CONTAGION_IDLE_KG9":"null","ACT_CONTAGION_IDLE_MP5K":"null","ACT_CONTAGION_IDLE_MOSSBERG":"null","ACT_CONTAGION_IDLE_AR15":"null","ACT_CONTAGION_IDLE_SLEDGEHAMMER":"null","ACT_CONTAGION_IDLE_ZOMBIE":"null","ACT_CONTAGION_IDLE_GRENADE":"null","ACT_CONTAGION_IDLE_INOCULATOR":"null","ACT_CONTAGION_IDLE_BOLTCUTTER":"null","ACT_CONTAGION_IDLE_SNIPER":"null","ACT_CONTAGION_IDLE_PHONE":"null","ACT_CONTAGION_IDLE_COIN":"null","ACT_CONTAGION_IDLE_CROUCH_1911":"null","ACT_CONTAGION_IDLE_CROUCH_KG9":"null","ACT_CONTAGION_IDLE_CROUCH_MP5K":"null","ACT_CONTAGION_IDLE_CROUCH_MOSSBERG":"null","ACT_CONTAGION_IDLE_CROUCH_AR15":"null","ACT_CONTAGION_IDLE_CROUCH_SLEDGEHAMMER":"null","ACT_CONTAGION_IDLE_CROUCH_ZOMBIE":"null","ACT_CONTAGION_IDLE_CROUCH_GRENADE":"null","ACT_CONTAGION_IDLE_CROUCH_INOCULATOR":"null","ACT_CONTAGION_IDLE_CROUCH_BOLTCUTTER":"null","ACT_CONTAGION_IDLE_CROUCH_SNIPER":"null","ACT_CONTAGION_IDLE_CROUCH_PHONE":"null","ACT_CONTAGION_IDLE_CROUCH_COIN":"null","ACT_CONTAGION_PRIMARYFIRE_1911":"null","ACT_CONTAGION_PRIMARYFIRE_KG9":"null","ACT_CONTAGION_PRIMARYFIRE_MP5K":"null","ACT_CONTAGION_PRIMARYFIRE_MOSSBERG":"null","ACT_CONTAGION_PRIMARYFIRE_AR15":"null","ACT_CONTAGION_PRIMARYFIRE_SLEDGEHAMMER":"null","ACT_CONTAGION_PRIMARYFIRE_NAILGUN":"null","ACT_CONTAGION_PRIMARYFIRE_BOLTCUTTER":"null","ACT_CONTAGION_PRIMARYFIRE_SNIPER":"null","ACT_CONTAGION_PRIMARYFIRE_COIN":"null","ACT_CONTAGION_PRIMARYFIRE_INOCULATOR":"null","ACT_CONTAGION_PRIMARYFIRE_GLOWSTICK":"null","ACT_CONTAGION_PRIMARYFIRE_GRENADE":"null","ACT_CONTAGION_PRIMARYFIRE_GRENADE_PRIME":"null","ACT_CONTAGION_PRIMARYFIRE_GRENADE_PRIME_IDLE":"null","ACT_CONTAGION_PRIMARYFIRE_TORCH":"null","ACT_CONTAGION_MELEE_1911":"null","ACT_CONTAGION_MELEE_KG9":"null","ACT_CONTAGION_MELEE_MP5K":"null","ACT_CONTAGION_MELEE_MOSSBERG":"null","ACT_CONTAGION_MELEE_AR15":"null","ACT_CONTAGION_MELEE_SLEDGEHAMMER":"null","ACT_CONTAGION_MELEE_ZOMBIE1":"null","ACT_CONTAGION_MELEE_ZOMBIE2":"null","ACT_CONTAGION_MELEE_ZOMBIE3":"null","ACT_CONTAGION_MELEE_INOCULATOR":"null","ACT_CONTAGION_MELEE_GRENADE":"null","ACT_CONTAGION_MELEE_BOLTCUTTER":"null","ACT_CONTAGION_MELEE_SNIPER":"null","ACT_CONTAGION_MELEE_PHONE":"null","ACT_CONTAGION_MELEE_COIN":"null","ACT_CONTAGION_RELOAD_1911":"null","ACT_CONTAGION_RELOAD_REVOLVER":"null","ACT_CONTAGION_RELOAD_KG9":"null","ACT_CONTAGION_RELOAD_MP5K":"null","ACT_CONTAGION_RELOAD_AUTOSHOTGUN_DOUBLE":"null","ACT_CONTAGION_RELOAD_AUTOSHOTGUN_START_EMPTY":"null","ACT_CONTAGION_RELOAD_AUTOSHOTGUN_START_EMPTY_SINGLE":"null","ACT_CONTAGION_RELOAD_MOSSBERG":"null","ACT_CONTAGION_RELOAD_MOSSBERG_START":"null","ACT_CONTAGION_RELOAD_MOSSBERG_END":"null","ACT_CONTAGION_RELOAD_AR15":"null","ACT_CONTAGION_RELOAD_SLEDGEHAMMER":"null","ACT_CONTAGION_RELOAD_SNIPER":"null","ACT_CONTAGION_RELOAD_SNIPER_START":"null","ACT_CONTAGION_RELOAD_SNIPER_END":"null","ACT_CONTAGION_MOSSBERG_PUMP":"null","ACT_CONTAGION_REMINGTON870_PUMP":"null","ACT_CONTAGION_RUN_1911":"null","ACT_CONTAGION_RUN_KG9":"null","ACT_CONTAGION_RUN_MP5K":"null","ACT_CONTAGION_RUN_MOSSBERG":"null","ACT_CONTAGION_RUN_AR15":"null","ACT_CONTAGION_RUN_SLEDGEHAMMER":"null","ACT_CONTAGION_RUN_ZOMBIE":"null","ACT_CONTAGION_RUN_CHARGER":"null","ACT_CONTAGION_RUN_INOCULATOR":"null","ACT_CONTAGION_RUN_GRENADE":"null","ACT_CONTAGION_RUN_BOLTCUTTER":"null","ACT_CONTAGION_RUN_SNIPER":"null","ACT_CONTAGION_RUN_PHONE":"null","ACT_CONTAGION_RUN_COIN":"null","ACT_CONTAGION_WALK_1911":"null","ACT_CONTAGION_WALK_KG9":"null","ACT_CONTAGION_WALK_MP5K":"null","ACT_CONTAGION_WALK_MOSSBERG":"null","ACT_CONTAGION_WALK_AR15":"null","ACT_CONTAGION_WALK_SLEDGEHAMMER":"null","ACT_CONTAGION_WALK_ZOMBIE":"null","ACT_CONTAGION_WALK_INOCULATOR":"null","ACT_CONTAGION_WALK_GRENADE":"null","ACT_CONTAGION_WALK_BOLTCUTTER":"null","ACT_CONTAGION_WALK_SNIPER":"null","ACT_CONTAGION_WALK_PHONE":"null","ACT_CONTAGION_WALK_COIN":"null","ACT_CONTAGION_CROUCH_WALK_1911":"null","ACT_CONTAGION_CROUCH_WALK_KG9":"null","ACT_CONTAGION_CROUCH_WALK_MP5K":"null","ACT_CONTAGION_CROUCH_WALK_MOSSBERG":"null","ACT_CONTAGION_CROUCH_WALK_AR15":"null","ACT_CONTAGION_CROUCH_WALK_SLEDGEHAMMER":"null","ACT_CONTAGION_CROUCH_WALK_ZOMBIE":"null","ACT_CONTAGION_CROUCH_WALK_INOCULATOR":"null","ACT_CONTAGION_CROUCH_WALK_GRENADE":"null","ACT_CONTAGION_CROUCH_WALK_BOLTCUTTER":"null","ACT_CONTAGION_CROUCH_WALK_SNIPER":"null","ACT_CONTAGION_CROUCH_WALK_PHONE":"null","ACT_CONTAGION_CROUCH_WALK_COIN":"null","ACT_CONTAGION_DRAW_PISTOL":"null","ACT_CONTAGION_DRAW_RIFLE":"null","ACT_CONTAGION_DRAW_INOCULATOR":"null","ACT_CONTAGION_HOLSTER_PISTOL":"null","ACT_CONTAGION_HOLSTER_RIFLE":"null","ACT_CONTAGION_HOLSTER_INOCULATOR":"null","ACT_CONTAGION_DROP_PISTOL":"null","ACT_CONTAGION_DROP_RIFLE":"null","ACT_CONTAGION_DROP_INOCULATOR":"null","ACT_CONTAGION_GRAB":"null","ACT_CONTAGION_STAGGER":"null","ACT_CONTAGION_ROAR":"null","ACT_CONTAGION_DEFIB":"null","ACT_CONTAGION_REVIVE_DEFIB":"null","ACT_CONTAGION_REVIVE_SELF":"null","ACT_CONTAGION_INFECTION":"null","ACT_CONTAGION_EXTRCTION_CLIMB_UP":"null","ACT_CONTAGION_EXTRCTION_CLIMB_THROW":"null","ACT_CONTAGION_EXTRCTION_CLIMB_DOWN":"null","ACT_CONTAGION_KILLCAM_BAT":"null","ACT_CONTAGION_KILLCAM_AXE":"null","ACT_CONTAGION_KILLCAM_KNIFE":"null","ACT_CONTAGION_KILLCAM_SLEDGEHAMMER":"null","ACT_CONTAGION_KILLCAM_MACHETE":"null","ACT_CONTAGION_KILLCAM_SURVIVE":"null","ACT_CONTAGION_JUMP_TONFA":"null","ACT_CONTAGION_IDLE_TONFA":"null","ACT_CONTAGION_IDLE_CROUCH_TONFA":"null","ACT_CONTAGION_MELEE_TONFA":"null","ACT_CONTAGION_RUN_TONFA":"null","ACT_CONTAGION_WALK_TONFA":"null","ACT_CONTAGION_CROUCH_WALK_TONFA":"null","ACT_CONTAGION_JUMP_KABAR":"null","ACT_CONTAGION_IDLE_KABAR":"null","ACT_CONTAGION_IDLE_CROUCH_KABAR":"null","ACT_CONTAGION_MELEE_KABAR":"null","ACT_CONTAGION_RUN_KABAR":"null","ACT_CONTAGION_WALK_KABAR":"null","ACT_CONTAGION_CROUCH_WALK_KABAR":"null","ACT_CONTAGION_JUMP_BASEBALLBAT":"null","ACT_CONTAGION_IDLE_BASEBALLBAT":"null","ACT_CONTAGION_IDLE_CROUCH_BASEBALLBAT":"null","ACT_CONTAGION_MELEE_BASEBALLBAT":"null","ACT_CONTAGION_RUN_BASEBALLBAT":"null","ACT_CONTAGION_WALK_BASEBALLBAT":"null","ACT_CONTAGION_CROUCH_WALK_BASEBALLBAT":"null","ACT_CONTAGION_JUMP_MACHETE":"null","ACT_CONTAGION_IDLE_MACHETE":"null","ACT_CONTAGION_IDLE_CROUCH_MACHETE":"null","ACT_CONTAGION_MELEE_MACHETE":"null","ACT_CONTAGION_RUN_MACHETE":"null","ACT_CONTAGION_WALK_MACHETE":"null","ACT_CONTAGION_CROUCH_WALK_MACHETE":"null","ACT_CONTAGION_BASEBALLBAT_CHARGE1":"null","ACT_CONTAGION_BASEBALLBAT_CHARGE1_IDLE":"null","ACT_CONTAGION_BASEBALLBAT_CHARGE1_SWING":"null","ACT_CONTAGION_BASEBALLBAT_CHARGE2":"null","ACT_CONTAGION_BASEBALLBAT_CHARGE2_IDLE":"null","ACT_CONTAGION_BASEBALLBAT_CHARGE2_SWING":"null","ACT_CONTAGION_TONFA_CHARGE1":"null","ACT_CONTAGION_TONFA_CHARGE1_IDLE":"null","ACT_CONTAGION_TONFA_CHARGE1_SWING":"null","ACT_CONTAGION_KABAR_CHARGE1":"null","ACT_CONTAGION_KABAR_CHARGE1_IDLE":"null","ACT_CONTAGION_KABAR_CHARGE1_SWING":"null","ACT_CONTAGION_KABAR_CHARGE2":"null","ACT_CONTAGION_KABAR_CHARGE2_IDLE":"null","ACT_CONTAGION_KABAR_CHARGE2_SWING":"null","ACT_CONTAGION_MACHETE_CHARGE1":"null","ACT_CONTAGION_MACHETE_CHARGE1_IDLE":"null","ACT_CONTAGION_MACHETE_CHARGE1_SWING":"null","ACT_CONTAGION_MACHETE_CHARGE2":"null","ACT_CONTAGION_MACHETE_CHARGE2_IDLE":"null","ACT_CONTAGION_MACHETE_CHARGE2_SWING":"null","ACT_CONTAGION_SLEDGEHAMMER_CHARGE1":"null","ACT_CONTAGION_SLEDGEHAMMER_CHARGE1_IDLE":"null","ACT_CONTAGION_SLEDGEHAMMER_CHARGE1_SWING":"null","ACT_CONTAGION_SLEDGEHAMMER_CHARGE2":"null","ACT_CONTAGION_SLEDGEHAMMER_CHARGE2_IDLE":"null","ACT_CONTAGION_SLEDGEHAMMER_CHARGE2_SWING":"null","ACT_GASMASK_WALK":"null","ACT_GASMASK_RUN":"null","ACT_GASMASK_JUMP":"null","ACT_GASMASK_CROUCH":"null","ACT_GASMASK_MELEE":"null","ACT_IDLE_ZOMBIE1":"null","ACT_IDLE_ZOMBIE2":"null","ACT_IDLE_ZOMBIE3":"null","ACT_IDLE_ZOMBIE4":"null","ACT_IDLE_ZOMBIE5":"null","ACT_IDLE_ZOMBIE6":"null","ACT_IDLE_ZOMBIE7":"null","ACT_IDLE_ZOMBIE8":"null","ACT_IDLE_ZOMBIE9":"null","ACT_IDLE_ZOMBIE10":"null","ACT_WALK_ZOMBIE1":"null","ACT_WALK_ZOMBIE2":"null","ACT_WALK_ZOMBIE3":"null","ACT_WALK_ZOMBIE4":"null","ACT_WALK_ZOMBIE5":"null","ACT_WALK_ZOMBIE6":"null","ACT_WALK_ZOMBIE7":"null","ACT_WALK_ZOMBIE8":"null","ACT_WALK_ZOMBIE9":"null","ACT_WALK_ZOMBIE10":"null","ACT_RUN_ZOMBIE1":"null","ACT_RUN_ZOMBIE2":"null","ACT_RUN_ZOMBIE3":"null","ACT_RUN_ZOMBIE4":"null","ACT_RUN_ZOMBIE5":"null","ACT_RUN_ZOMBIE6":"null","ACT_RUN_ZOMBIE7":"null","ACT_RUN_ZOMBIE8":"null","ACT_RUN_ZOMBIE9":"null","ACT_RUN_ZOMBIE10":"null","ACT_CONTAGION_ZOMBIE_FEED":"null","ACT_CONTAGION_ZOMBIE_FEED_START":"null","ACT_CONTAGION_ZOMBIE_FEED_END":"null","ACT_CONTAGION_ZOMBIE_FEED_LOOP":"null","ACT_CONTAGION_GIB_LEGL":"null","ACT_CONTAGION_GIB_LEGR":"null","ACT_CONTAGION_GIB_LEGBOTH":"null","ACT_SPECIFIC_SEQUENCE":"null","ACT_VM_DEPLOY":"null","ACT_VM_RELOAD_EMPTY":"null","ACT_VM_DRAW":"null","ACT_VM_HOLSTER":"null","ACT_VM_IDLE":"null","ACT_VM_FIDGET":"null","ACT_VM_THROW":"null","ACT_VM_LOB":"null","ACT_VM_DROP":"null","ACT_VM_PULLPIN":"null","ACT_VM_PULLPIN2":"null","ACT_VM_PRIMARYATTACK":"null","ACT_VM_SECONDARYATTACK":"null","ACT_VM_RELOAD":"null","ACT_VM_RELOAD_DOUBLE":"null","ACT_VM_RELOAD_START":"null","ACT_VM_RELOAD_START_EMPTY":"null","ACT_VM_RELOAD_START_EMPTY_SINGLE":"null","ACT_VM_RELOAD_END":"null","ACT_VM_DRYFIRE":"null","ACT_VM_CROUCH":"null","ACT_VM_JUMP":"null","ACT_VM_UNLOAD":"null","ACT_VM_UNLOAD_TOP":"null","ACT_VM_UNLOAD_BOTTOM":"null","ACT_VM_USE":"null","ACT_VM_USE_ITEM":"null","ACT_VM_PUMP":"null","ACT_VM_FLASHLIGHT":"null","ACT_VM_UNLOAD_START":"null","ACT_VM_UNLOAD_END":"null","ACT_VM_FIRE_LAST":"null","ACT_VM_RELOAD_ALT1":"null","ACT_VM_RELOAD_ALT2":"null","ACT_VM_RELOAD_ALT3":"null","ACT_VM_RELOAD_ALT4":"null","ACT_DIE_FRONTSIDE":"null","ACT_DIE_RIGHTSIDE":"null","ACT_DIE_BACKSIDE":"null","ACT_DIE_LEFTSIDE":"null","ACT_DIE_CROUCH_FRONTSIDE":"null","ACT_DIE_CROUCH_RIGHTSIDE":"null","ACT_DIE_CROUCH_BACKSIDE":"null","ACT_DIE_CROUCH_LEFTSIDE":"null","ACT_DIE_INCAP":"null","ACT_DIE_STANDING":"null","ACT_OPEN_DOOR":"null","ACT_TURN":"null","ACT_TERROR_IDLE_NEUTRAL":"null","ACT_TERROR_IDLE_ALERT":"null","ACT_TERROR_IDLE_INTENSE":"null","ACT_TERROR_IDLE_ALERT_INJURED_AHEAD":"null","ACT_TERROR_IDLE_ALERT_AHEAD":"null","ACT_TERROR_IDLE_ALERT_INJURED_BEHIND":"null","ACT_TERROR_IDLE_ALERT_BEHIND":"null","ACT_TERROR_IDLE_ALERT_INJURED_LEFT":"null","ACT_TERROR_IDLE_ALERT_LEFT":"null","ACT_TERROR_IDLE_ALERT_INJURED_RIGHT":"null","ACT_TERROR_IDLE_ALERT_RIGHT":"null","ACT_TERROR_IDLE_ACQUIRE":"null","ACT_TERROR_LEAN_FORWARD_IDLE":"null","ACT_TERROR_LEAN_BACKWARD_IDLE":"null","ACT_TERROR_LEAN_LEFTWARD_IDLE":"null","ACT_TERROR_LEAN_RIGHTWARD_IDLE":"null","ACT_TERROR_FIDGET":"null","ACT_TERROR_NEUTRAL_TO_ALERT":"null","ACT_TERROR_ALERT_TO_NEUTRAL":"null","ACT_TERROR_FACE_LEFT_NEUTRAL":"null","ACT_TERROR_FACE_LEFT_ALERT":"null","ACT_TERROR_FACE_LEFT_INTENSE":"null","ACT_TERROR_FACE_RIGHT_NEUTRAL":"null","ACT_TERROR_FACE_RIGHT_ALERT":"null","ACT_TERROR_FACE_RIGHT_INTENSE":"null","ACT_TERROR_ABOUT_FACE_NEUTRAL":"null","ACT_TERROR_ABOUT_FACE_ALERT":"null","ACT_TERROR_ABOUT_FACE_INTENSE":"null","ACT_TERROR_SHAMBLE":"null","ACT_TERROR_WALK_NEUTRAL":"null","ACT_TERROR_WALK_INTENSE":"null","ACT_TERROR_CROUCH_RUN_INTENSE":"null","ACT_TERROR_RUN_INTENSE":"null","ACT_TERROR_RUN_ON_FIRE_INTENSE":"null","ACT_TERROR_RUN_INTENSE_TO_STAND_ALERT":"null","ACT_TERROR_CRAWL_RUN":"null","ACT_TERROR_RUN_ON_FIRE":"null","ACT_TERROR_ATTACK":"null","ACT_TERROR_PLAYER_ATTACK":"null","ACT_TERROR_PLAYER_ATTACK2":"null","ACT_TERROR_ATTACK_CONTINUOUSLY":"null","ACT_TERROR_ATTACK_LOW":"null","ACT_TERROR_ATTACK_LOW_CONTINUOUSLY":"null","ACT_TERROR_ATTACK_DOOR":"null","ACT_TERROR_ATTACK_DOOR_CONTINUOUSLY":"null","ACT_TERROR_UNABLE_TO_REACH_TARGET":"null","ACT_TERROR_REACH_THROUGH_DOOR":"null","ACT_TERROR_SHOVED_HEAVY_FORWARD":"null","ACT_TERROR_SHOVED_HEAVY_BACKWARD":"null","ACT_TERROR_SHOVED_HEAVY_LEFTWARD":"null","ACT_TERROR_SHOVED_HEAVY_RIGHTWARD":"null","ACT_TERROR_SHOVED_HEAVY_FORWARD_MELEE":"null","ACT_TERROR_SHOVED_HEAVY_BACKWARD_MELEE":"null","ACT_TERROR_SHOVED_HEAVY_LEFTWARD_MELEE":"null","ACT_TERROR_SHOVED_HEAVY_RIGHTWARD_MELEE":"null","ACT_TERROR_SHOVED_HEAVY_BACKWARD_INTO_WALL":"null","ACT_TERROR_SHOVED_HEAVY_FORWARD_INTO_WALL":"null","ACT_TERROR_SHOVED_HEAVY_LEFTWARD_INTO_WALL":"null","ACT_TERROR_SHOVED_HEAVY_RIGHTWARD_INTO_WALL":"null","ACT_TERROR_SHOVED_HEAVY_BACKWARD_FROM_SIT":"null","ACT_TERROR_SHOVED_HEAVY_RIGHTWARD_FROM_SIT":"null","ACT_TERROR_SHOVED_HEAVY_LEFTWARD_FROM_SIT":"null","ACT_TERROR_SHOVED_FORWARD":"null","ACT_TERROR_SHOVED_BACKWARD":"null","ACT_TERROR_SHOVED_LEFTWARD":"null","ACT_TERROR_SHOVED_RIGHTWARD":"null","ACT_TERROR_SHOVED_FORWARD_MELEE":"null","ACT_TERROR_SHOVED_BACKWARD_MELEE":"null","ACT_TERROR_SHOVED_LEFTWARD_MELEE":"null","ACT_TERROR_SHOVED_RIGHTWARD_MELEE":"null","ACT_TERROR_SHOVED_BACKWARD_INTO_WALL":"null","ACT_TERROR_SHOVED_FORWARD_INTO_WALL":"null","ACT_TERROR_SHOVED_LEFTWARD_INTO_WALL":"null","ACT_TERROR_SHOVED_RIGHTWARD_INTO_WALL":"null","ACT_TERROR_SHOVED_BACKWARD_FROM_SIT":"null","ACT_TERROR_SHOVED_RIGHTWARD_FROM_SIT":"null","ACT_TERROR_SHOVED_LEFTWARD_FROM_SIT":"null","ACT_TERROR_SIT_IDLE":"null","ACT_TERROR_SIT_FROM_STAND":"null","ACT_TERROR_SIT_TO_STAND":"null","ACT_TERROR_SIT_TO_STAND_ALERT":"null","ACT_TERROR_SIT_TO_LIE":"null","ACT_TERROR_LIE_IDLE":"null","ACT_TERROR_LIE_FROM_STAND":"null","ACT_TERROR_LIE_TO_STAND":"null","ACT_TERROR_LIE_TO_STAND_ALERT":"null","ACT_TERROR_LIE_TO_SIT":"null","ACT_TERROR_JUMP":"null","ACT_TERROR_JUMP_UP_TO_LEDGE":"null","ACT_TERROR_JUMP_DOWN_FROM_LEDGE":"null","ACT_TERROR_JUMP_OVER_GAP":"null","ACT_TERROR_JUMP_LANDING":"null","ACT_TERROR_JUMP_LANDING_HARD":"null","ACT_TERROR_FALL":"null","ACT_TERROR_DIE_FROM_STAND":"null","ACT_TERROR_DIE_FROM_CROUCH":"null","ACT_TERROR_DIE_WHILE_RUNNING":"null","ACT_TERROR_DIE_BACKWARD_FROM_SHOTGUN":"null","ACT_TERROR_DIE_FORWARD_FROM_SHOTGUN":"null","ACT_TERROR_DIE_LEFTWARD_FROM_SHOTGUN":"null","ACT_TERROR_DIE_RIGHTWARD_FROM_SHOTGUN":"null","ACT_BLUDGEON_DEATH_BACK":"null","ACT_BLUDGEON_DEATH_FORWARD":"null","ACT_BLUDGEON_DEATH_LEFT":"null","ACT_BLUDGEON_DEATH_RIGHT":"null","ACT_SLICING_DEATH_BACK":"null","ACT_SLICING_DEATH_FORWARD":"null","ACT_SLICING_DEATH_LEFT":"null","ACT_SLICING_DEATH_RIGHT":"null","ACT_TERROR_FLINCH":"null","ACT_TERROR_FLINCH_HEAD":"null","ACT_TERROR_FLINCH_LEDGE":"null","ACT_TERROR_INCAP_CRAWL":"null","ACT_TERROR_INCAP_TO_STAND":"null","ACT_TERROR_INCAP_TO_CROUCH":"null","ACT_TERROR_ITEM_PICKUP":"null","ACT_FALL":"null","ACT_PUSH":"null","ACT_GEST_HEAD_NOD":"null","ACT_GEST_HEAD_YES":"null","ACT_GEST_HEAD_NO":"null","ACT_TERROR_LEDGE_CLIMB":"null","ACT_TERROR_LEDGE_CLIMB_TO_CROUCH":"null","ACT_TERROR_FALL_GRAB_LEDGE":"null","ACT_TERROR_IDLE_LADDER":"null","ACT_TERROR_LADDER_DISMOUNT":"null","ACT_TERROR_CLIMB_24_FROM_STAND":"null","ACT_TERROR_CLIMB_36_FROM_STAND":"null","ACT_TERROR_CLIMB_38_FROM_STAND":"null","ACT_TERROR_CLIMB_48_FROM_STAND":"null","ACT_TERROR_CLIMB_50_FROM_STAND":"null","ACT_TERROR_CLIMB_60_FROM_STAND":"null","ACT_TERROR_CLIMB_70_FROM_STAND":"null","ACT_TERROR_CLIMB_72_FROM_STAND":"null","ACT_TERROR_CLIMB_84_FROM_STAND":"null","ACT_TERROR_CLIMB_96_FROM_STAND":"null","ACT_TERROR_CLIMB_108_FROM_STAND":"null","ACT_TERROR_CLIMB_115_FROM_STAND":"null","ACT_TERROR_CLIMB_120_FROM_STAND":"null","ACT_DOOR_OPEN":"null","ACT_DOOR_OPENFAIL":"null","ACT_DOOR_ANIMTOLOCK":"null","ACT_DOOR_ANIMTOUNLOCK":"null","ACT_VM_CROUCH_EMPTY":"null","ACT_VM_JUMP_EMPTY":"null","ACT_VM_USE_EMPTY":"null","ACT_VM_USE_ITEM_EMPTY":"null","ACT_VM_DRAW_EMPTY":"null","ACT_VM_HOLSTER_EMPTY":"null","ACT_VM_MELEE_HIT_EMPTY":"null","ACT_VM_MELEE_MISS_EMPTY":"null","ACT_VM_PRIMARYATTACK_BOW_PULL":"null","ACT_VM_PRIMARYATTACK_BOW_PULL_IDLE":"null","ACT_VM_PRIMARYATTACK_BOW_SHOOT":"null","ACT_VM_PRIMARYATTACK_BOW_SHOOT_LAST":"null","ACT_VM_PRIMARYATTACK_LAST":"null","ACT_CONTAGION_IDLE_COMPBOW":"null","ACT_CONTAGION_PULL_COMPBOW":"null","ACT_CONTAGION_PULLED_IDLE_COMPBOW":"null","ACT_CONTAGION_PULLED_IDLE_CROUCH_COMPBOW":"null","ACT_CONTAGION_WALK_COMPBOW":"null","ACT_CONTAGION_RUN_COMPBOW":"null","ACT_CONTAGION_CROUCH_WALK_COMPBOW":"null","ACT_CONTAGION_IDLE_CROUCH_COMPBOW":"null","ACT_CONTAGION_MELEE_COMPBOW":"null","ACT_CONTAGION_PRIMARYFIRE_COMPBOW":"null","ACT_CONTAGION_RELOAD_COMPBOW":"null","ACT_CONTAGION_WALK_COMPBOW_PULLED":"null","ACT_CONTAGION_CROUCH_WALK_COMPBOW_PULLED":"null","ACT_CONTAGION_IDLE_M1GARAND":"null","ACT_CONTAGION_WALK_M1GARAND":"null","ACT_CONTAGION_RUN_M1GARAND":"null","ACT_CONTAGION_CROUCH_WALK_M1GARAND":"null","ACT_CONTAGION_IDLE_CROUCH_M1GARAND":"null","ACT_CONTAGION_MELEE_M1GARAND":"null","ACT_CONTAGION_PRIMARYFIRE_M1GARAND":"null","ACT_CONTAGION_RELOAD_M1GARAND":"null","ACT_CONTAGION_IDLE_REMINGTON870":"null","ACT_CONTAGION_WALK_REMINGTON870":"null","ACT_CONTAGION_RUN_REMINGTON870":"null","ACT_CONTAGION_CROUCH_WALK_REMINGTON870":"null","ACT_CONTAGION_IDLE_CROUCH_REMINGTON870":"null","ACT_CONTAGION_MELEE_REMINGTON870":"null","ACT_CONTAGION_PRIMARYFIRE_REMINGTON870":"null","ACT_CONTAGION_RELOAD_REMINGTON870":"null","ACT_CONTAGION_IDLE_SCAR":"null","ACT_CONTAGION_WALK_SCAR":"null","ACT_CONTAGION_RUN_SCAR":"null","ACT_CONTAGION_CROUCH_WALK_SCAR":"null","ACT_CONTAGION_IDLE_CROUCH_SCAR":"null","ACT_CONTAGION_MELEE_SCAR":"null","ACT_CONTAGION_PRIMARYFIRE_SCAR":"null","ACT_CONTAGION_RELOAD_SCAR":"null","ACT_CONTAGION_WALK_EXTINGUISHER":"null","ACT_CONTAGION_RUN_EXTINGUISHER":"null","ACT_CONTAGION_JUMP_EXTINGUISHER":"null","ACT_CONTAGION_CROUCH_WALK_EXTINGUISHER":"null","ACT_CONTAGION_MELEE_EXTINGUISHER":"null","ACT_CONTAGION_WALK_TORCH":"null","ACT_CONTAGION_RUN_TORCH":"null","ACT_CONTAGION_CROUCH_WALK_TORCH":"null","ACT_CONTAGION_MELEE_TORCH":"null","ACT_CONTAGION_JUMP_TORCH":"null","ACT_CONTAGION_DRAW_TORCH":"null","ACT_CONTAGION_WALK_MAC10":"null","ACT_CONTAGION_RUN_MAC10":"null","ACT_CONTAGION_CROUCH_WALK_MAC10":"null","ACT_CONTAGION_MELEE_MAC10":"null","ACT_CONTAGION_JUMP_MAC10":"null","ACT_CONTAGION_DRAW_MAC10":"null","ACT_CONTAGION_RELOAD_MAC10":"null","ACT_CONTAGION_PRIMARYFIRE_MAC10":"null","LAST_SHARED_ACTIVITY":"null","ACT_TERROR_WITCH_IDLE":"null","ACT_TERROR_WITCH_IDLE_PRE_RETREAT":"null","ACT_TERROR_WITCH_RETREAT":"null","ACT_TERROR_WITCH_ANGRY_HIGH":"null","ACT_TERROR_WITCH_ANGRY":"null","ACT_TERROR_WITCH_WANDER_WALK":"null","ACT_TERROR_WITCH_WANDER_IDLE":"null","ACT_TERROR_WITCH_WANDER_ACQUIRE":"null"}},{"global":null,"name":"AddEffects","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Applies effects to the object","desc_md":"true","desc_file":"Entity_Effects","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% nEffect":"The effect(s) we want to add"}},{"global":null,"name":"AddSolidFlags","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds solid flags for the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% flag":"The solid flag(s) we want to add"}},{"global":null,"name":"AddSpawnFlags","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds new spawnflags to the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% flag":"The spawnflag we want to add"}},{"global":null,"name":"ApplyVelocity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Applies new velocity for the entity object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecVelocity":"The new velocity for this object"}},{"global":null,"name":"ChangeTeam","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Changes the team of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iTeamID":"Changes the objects team to a new one"}},{"global":null,"name":"ClassnameIs","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the entity object has the correct classname","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the entity is using the said classname","args":{"%string_in% szClassname":"The classname we should look for"}},{"global":null,"name":"CreatePhysics","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Create&apos;s a physics mesh for the object (if the model has a .phy file)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_SolidType_t% solidType":"Sets the new solidtype state","%int% solidflags":"Set the solid flags","%bool% asleep":"Should it start asleep?"}},{"global":null,"name":"CTakeDamageInfo","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a CTakeDamageInfo class.","desc_md":"true","desc_file":"CTakeDamageInfo_Info","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CTakeDamageInfo class which can be manipulated","args":{}},{"global":null,"name":"CTakeDamageInfo_GetAttacker","namefake":"GetAttacker","isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the attacker from the damage info","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"CTakeDamageInfo_GetDamage","namefake":"GetDamage","isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the damage amount","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the damage amount","args":{}},{"global":null,"name":"CTakeDamageInfo_GetDamageForce","namefake":"GetDamageForce","isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the damage force vector","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the damage force vector","args":{}},{"global":null,"name":"CTakeDamageInfo_GetDamagePosition","namefake":"GetDamagePosition","isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the damage position vector","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the damage position vector","args":{}},{"global":null,"name":"CTakeDamageInfo_GetDamageType","namefake":"GetDamageType","isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the damage type","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the damage bits","args":{}},{"global":null,"name":"CTakeDamageInfo_GetInflictor","namefake":"GetInflictor","isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the inflictor from the damage info","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"CTakeDamageInfo_GetReportedPosition","namefake":"GetReportedPosition","isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the reported position vector","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the damage position vector","args":{}},{"global":null,"name":"CTakeDamageInfo_GetWeapon","namefake":"GetWeapon","isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the attacker from the damage info","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"CTakeDamageInfo_HasDamageType","namefake":"HasDamageType","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Checks if we have the specific damage type","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we have said damage type","args":{"%int% bitsDamageType":"The damage type bits"}},{"global":null,"name":"CTakeDamageInfo_ScaleDamage","namefake":"ScaleDamage","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Scale the damage","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float% flScaleAmount":"Scale our damage amount"}},{"global":null,"name":"CTakeDamageInfo_ScaleDamageForce","namefake":"ScaleDamageForce","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Scale our damage force","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float% flScaleAmount":"Scale our damage force"}},{"global":null,"name":"CTakeDamageInfo_SetAttacker","namefake":"SetAttacker","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the attacker for this damage info","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pAttacker":"Our attacker entity object"}},{"global":null,"name":"CTakeDamageInfo_SetDamage","namefake":"SetDamage","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the damage amount","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float% flDamage":"Our damage amount"}},{"global":null,"name":"CTakeDamageInfo_SetDamageForce","namefake":"SetDamageForce","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the damage force amount","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% damageForce":"Our damage force"}},{"global":null,"name":"CTakeDamageInfo_SetDamagePosition","namefake":"SetDamagePosition","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the damage position","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% damagePosition":"Our damage position"}},{"global":null,"name":"CTakeDamageInfo_SetDamageType","namefake":"SetDamageType","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the damage type","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% bitsDamageType":"Our damage type"}},{"global":null,"name":"CTakeDamageInfo_SetFakeWeapon","namefake":"SetFakeWeapon","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the fake weapon for this damage info","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szFakeWeapon":"The fake weapon, used by the killfeed"}},{"global":null,"name":"CTakeDamageInfo_SetInflictor","namefake":"SetInflictor","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the inflictor for this damage info","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pInflictor":"Our inflictor entity object"}},{"global":null,"name":"CTakeDamageInfo_SetReportedPosition","namefake":"SetReportedPosition","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the reported position","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% reportedPosition":"Our reported position"}},{"global":null,"name":"CTakeDamageInfo_SetWeapon","namefake":"SetWeapon","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the weapon for this damage info","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pWeapon":"Our weapon entity object"}},{"global":null,"name":"Distance","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the entity object is closer or futher away from a specified Vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the distance in centimeters","args":{"%Vector% pVector":"The Vector position we should check on the map"}},{"global":null,"name":"Dmg","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of damage types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"DMG_GENERIC":"generic damage -- do not use if you want players to flinch and bleed!","DMG_CRUSH":"crushed by falling or moving object","DMG_BULLET":"shot","DMG_SLASH":"cut, clawed, stabbed","DMG_BURN":"heat burned","DMG_FALL":"fell too far","DMG_BLAST":"explosive blast damage","DMG_CLUB":"crowbar, punch, headbutt","DMG_SHOCK":"electric shock","DMG_SONIC":"sound pulse shockwave","DMG_ENERGYBEAM":"laser or other high energy beam","DMG_NEVERGIB":"with this bit OR&apos;d in, no damage type will be able to gib victims upon death","DMG_ALWAYSGIB":"with this bit OR&apos;d in, any damage type can be made to gib victims upon death","DMG_DROWN":"Drowning","DMG_PARALYZE":"slows affected creature down","DMG_NERVEGAS":"nerve toxins, very bad","DMG_POISON":"blood poisoning - heals over time like drowning damage","DMG_RADIATION":"radiation exposure","DMG_DROWNRECOVER":"drowning recovery","DMG_ACID":"toxic chemicals or acid burns","DMG_SLOWBURN":"in an oven","DMG_BUCKSHOT":"not quite a bullet. Little, rounder, different"}},{"global":null,"name":"entindex","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the entity index of the object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the entity index of the object","args":{}},{"global":null,"name":"EntityGlowSet_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of glow filter sets.","desc_md":"true","desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"both":"Will draw even if the model is occluded or not","occlude":"Will only draw if occluded","unocclude":"Will only draw if unoccluded"}},{"global":null,"name":"EntityGlowState_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of glow filter states.","desc_md":"true","desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"off":"Turns off the glow","use":"Will draw if within USE range (and if it can be used by the player)","look":"Will draw if the player is looking at this entity, or within its direction","on":"Will draw at all times"}},{"global":null,"name":"EyeAngles","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the eye angles of the entity object","desc_md":null,"desc_file":null,"type":"QAngle","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a QAngle of the objects eye angles","args":{}},{"global":null,"name":"EyePosition","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the eye position of the entity object","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a Vector of the objects eye position","args":{}},{"global":null,"name":"GetAbsAngles","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the absolute angles from this object","desc_md":null,"desc_file":null,"type":"QAngle","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a QAngle of the objects absolute angles","args":{}},{"global":null,"name":"GetAbsOrigin","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the absolute origin of the entity object","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a Vector of the objects absolute location","args":{}},{"global":null,"name":"GetAbsVelocity","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the absolute velocity of the entity object","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a Vector of the objects absolute velocity","args":{}},{"global":null,"name":"GetBodyGroup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gets the bodygroup of the model","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the bodygroup state","args":{"%string_in% strBodyGroup":"The name of the bodygroup"}},{"global":null,"name":"GetClassname","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the classname from the entity object","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the classname of the entity","args":{}},{"global":null,"name":"GetCollisionGroup","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current collision group of the object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current collision group of the object","args":{}},{"global":null,"name":"GetEntityInfoBool","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the entity information.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the entity information","args":{"%string_in% key":"The information we want to read"}},{"global":null,"name":"GetEntityInfoColor","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the entity information.","desc_md":null,"desc_file":null,"type":"Color","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the entity information","args":{"%string_in% key":"The information we want to read"}},{"global":null,"name":"GetEntityInfoFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the entity information.","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the entity information","args":{"%string_in% key":"The information we want to read"}},{"global":null,"name":"GetEntityInfoInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the entity information.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the entity information","args":{"%string_in% key":"The information we want to read"}},{"global":null,"name":"GetEntityInfoString","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the entity information.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the entity information","args":{"%string_in% key":"The information we want to read"}},{"global":null,"name":"GetEntityName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the name from the entity object","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the entity","args":{}},{"global":null,"name":"GetHealth","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the health of the object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current health of the object","args":{}},{"global":null,"name":"GetLightingOrigin","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the origin of the lighting","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Lighting origin position","args":{}},{"global":null,"name":"GetLocalAngularVelocity","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the local angular velocity of the entity object","desc_md":null,"desc_file":null,"type":"QAngle","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a QAngle of the objects absolute velocity","args":{}},{"global":null,"name":"GetLocalOrigin","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the local origin of the entity object","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a Vector of the objects local location","args":{}},{"global":null,"name":"GetMass","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gets the mass from this entity","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"GetMaxHealth","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the max health of the object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the max health of the object","args":{}},{"global":null,"name":"GetModelIndex","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the model index from the entity object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the model index of the entity object","args":{}},{"global":null,"name":"GetModelName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the name of the current model","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the model","args":{}},{"global":null,"name":"GetMoveType","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the MoveType of the object","desc_md":null,"desc_file":null,"type":"MoveType_t","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current MoveType of the object","args":{}},{"global":null,"name":"GetNextTarget","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Grabs the next targeted entity object","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"GetOwner","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Grabs the owner for this entity object","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"GetParent","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Grabs the parent for this entity object","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"GetParentAttachment","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the parent attachment for this entity object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the attachment ID","args":{}},{"global":null,"name":"GetRenderFX","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the RenderFX of the object","desc_md":null,"desc_file":null,"type":"RenderFX","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current RenderFX of the object","args":{}},{"global":null,"name":"GetRenderMode","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the RenderMode of the object","desc_md":null,"desc_file":null,"type":"RenderMode","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current RenderMode of the object","args":{}},{"global":null,"name":"GetSkin","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gets the skingroup of the model","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the skingroup state","args":{}},{"global":null,"name":"GetSolidFlags","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Get solid flags for the object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current Solidflags of the object","args":{}},{"global":null,"name":"GetSolidType","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the SolidType of the object","desc_md":null,"desc_file":null,"type":"SolidType_t","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current SolidType of the object","args":{}},{"global":null,"name":"GetSpawnFlags","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gets the spawnflags of the object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the spawnflags","args":{}},{"global":null,"name":"GetTeamID","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the entity team name.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the current team","args":{}},{"global":null,"name":"GetTeamNumber","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current team number","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current team number of the object","args":{}},{"global":null,"name":"GetWaterLevel","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current water level","desc_md":null,"desc_file":null,"type":"WaterLevel","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current water level of the object","args":{}},{"global":null,"name":"HasSpawnFlag","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the object has the specified spawnflag","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if it finds the spawnflag","args":{"%int% flag":"The spawnflag we want to search for"}},{"global":null,"name":"Ignite","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the entity on fire","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flLifetime":"How long the flame will stay alive for"}},{"global":null,"name":"Intersects","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if a object is intersecting with this object","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if a object is intersecting with this object","args":{"%class_CBaseEntity% pOther":"The entity object that is intersecting with this object"}},{"global":null,"name":"IsAlive","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the entity object is alive or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is still alive","args":{}},{"global":null,"name":"IsBSPModel","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the enttiy object is a BSP model","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is a BSP model","args":{}},{"global":null,"name":"IsGrounded","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the entity object is on the ground or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the entity is on the ground","args":{}},{"global":null,"name":"IsInAir","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the entity object is in the air or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the entity is in the air","args":{}},{"global":null,"name":"IsInWorld","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the enttiy object is within the boundaries of the world, and not in the void","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is still within the world","args":{}},{"global":null,"name":"IsMoving","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the enttiy object is moving around","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is moving","args":{}},{"global":null,"name":"IsNetClient","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the enttiy object is a real player","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is a real player","args":{}},{"global":null,"name":"IsPlayer","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the enttiy object is a player","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is a player object","args":{}},{"global":null,"name":"m_takedamage","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CBaseEntity","desc":"Set the take damage","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"MoveType_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of movement types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"MOVETYPE_NONE":"Never moves","MOVETYPE_WALK":"Player only - moving on the ground","MOVETYPE_STEP":"Gravity, special edge handling -- monsters use this","MOVETYPE_FLY":"No gravity, but still collides with stuff","MOVETYPE_FLYGRAVITY":"flies through the air + is affected by gravity","MOVETYPE_VPHYSICS":"uses VPHYSICS for simulation","MOVETYPE_PUSH":"No clip to world, push and crush","MOVETYPE_NOCLIP":"No gravity, no collisions, still do velocity&#47;avelocity","MOVETYPE_LADDER":"Used by players only when going onto a ladder","MOVETYPE_OBSERVER":"Observer movement, depends on player&apos;s observer mode"}},{"global":null,"name":"ObjectCaps","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gets the ObjectCaps from the entity","desc_md":"true","desc_file":"Entity_ObjectCaps","type":"int","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your custom entity script","return":null,"args":{}},{"global":null,"name":"PlayerAnimEvent_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of the Player Animation Events","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"PLAYERANIMEVENT_INVALID":"null","PLAYERANIMEVENT_ATTACK_PRIMARY_LAST":"null","PLAYERANIMEVENT_ATTACK_PRIMARY":"null","PLAYERANIMEVENT_ATTACK_SECONDARY":"null","PLAYERANIMEVENT_ATTACK_GRENADE":"null","PLAYERANIMEVENT_RELOAD":"null","PLAYERANIMEVENT_RELOAD_LOOP":"null","PLAYERANIMEVENT_RELOAD_END":"null","PLAYERANIMEVENT_JUMP":"null","PLAYERANIMEVENT_JUMPLAND":"null","PLAYERANIMEVENT_SWIM":"null","PLAYERANIMEVENT_DIE":"null","PLAYERANIMEVENT_FLINCH_CHEST":"null","PLAYERANIMEVENT_FLINCH_HEAD":"null","PLAYERANIMEVENT_FLINCH_LEFTARM":"null","PLAYERANIMEVENT_FLINCH_RIGHTARM":"null","PLAYERANIMEVENT_FLINCH_LEFTLEG":"null","PLAYERANIMEVENT_FLINCH_RIGHTLEG":"null","PLAYERANIMEVENT_DOUBLEJUMP":"null","PLAYERANIMEVENT_ATTACK_CANCEL":"null","PLAYERANIMEVENT_CANCEL":"null","PLAYERANIMEVENT_SPAWN":"null","PLAYERANIMEVENT_SNAP_YAW":"null","PLAYERANIMEVENT_CUSTOM":"&#47;&#47; Used to play specific activities","PLAYERANIMEVENT_CUSTOM_GESTURE":"null","PLAYERANIMEVENT_CUSTOM_SEQUENCE":"&#47;&#47; Used to play specific sequences","PLAYERANIMEVENT_CUSTOM_GESTURE_SEQUENCE":"null","PLAYERANIMEVENT_ATTACK_PRE":"null","PLAYERANIMEVENT_ATTACK_POST":"null","PLAYERANIMEVENT_GRENADE1_DRAW":"null","PLAYERANIMEVENT_GRENADE2_DRAW":"null","PLAYERANIMEVENT_GRENADE1_THROW":"null","PLAYERANIMEVENT_GRENADE2_THROW":"null","PLAYERANIMEVENT_VOICE_COMMAND_GESTURE":"null","PLAYERANIMEVENT_MELEE":"null","PLAYERANIMEVENT_MELEE_GRAPPLE":"null","PLAYERANIMEVENT_RELOAD_DOUBLE":"null","PLAYERANIMEVENT_RELOAD_START":"null","PLAYERANIMEVENT_RELOAD_START_EMPTY":"null","PLAYERANIMEVENT_RELOAD_START_EMPTY_SINGLE":"null","PLAYERANIMEVENT_FIRE_GUN_PRIMARY":"null","PLAYERANIMEVENT_FIRE_GUN_SECONDARY":"null","PLAYERANIMEVENT_FLINCH_FRONT":"null","PLAYERANIMEVENT_FLINCH_BACK":"null","PLAYERANIMEVENT_UNLOAD":"null","PLAYERANIMEVENT_DEPLOY":"null","PLAYERANIMEVENT_HOLSTER":"null","PLAYERANIMEVENT_USE":"null","PLAYERANIMEVENT_USE_ITEM":"null","PLAYERANIMEVENT_GESTURE":"null","PLAYERANIMEVENT_STAGGER":"&#47;&#47; 0 = forward","PLAYERANIMEVENT_CANCELSTAGGER":"null","PLAYERANIMEVENT_CUSTOMACTIVITY":"null","PLAYERANIMEVENT_FIDGET":"null","PLAYERANIMEVENT_ATTACK_PRIME":"null","PLAYERANIMEVENT_ATTACK_PRIME_IDLE":"null","PLAYERANIMEVENT_MELEE_V_CHARGE":"&#47;&#47; Left click","PLAYERANIMEVENT_MELEE_V_CHARGE_IDLE":"&#47;&#47; Left click","PLAYERANIMEVENT_MELEE_V_CHARGE_SWING":"&#47;&#47; Left click","PLAYERANIMEVENT_MELEE_H_CHARGE":"&#47;&#47; Right click","PLAYERANIMEVENT_MELEE_H_CHARGE_IDLE":"&#47;&#47; Right click","PLAYERANIMEVENT_MELEE_H_CHARGE_SWING":"&#47;&#47; Right click","PLAYERANIMEVENT_COMPBOW_PULL":"null","PLAYERANIMEVENT_COMPBOW_PULLED_IDLE":"null","PLAYERANIMEVENT_COMPBOW_PULLED_CROUCH_IDLE":"null","PLAYERANIMEVENT_COMPBOW_FIRE":"null","PLAYERANIMEVENT_PUMP":"null"}},{"global":null,"name":"Precache","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the entity gets precached","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your entity script","return":null,"args":{}},{"global":null,"name":"RegisterBreak","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the break function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be broken"}},{"global":null,"name":"RegisterDamaged","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the use function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be damaged"}},{"global":null,"name":"RegisterDrop","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the drop function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be dropped"}},{"global":null,"name":"RegisterOutput","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the output from an entity to the &quot;Entity register&quot;, so it can be recognized by the output function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strOutputName":"The name of the output that should be recognized","%string_in% strEntityName":"The name of the entity that should be recognized"}},{"global":null,"name":"RegisterPickup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the pickup function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be picked up"}},{"global":null,"name":"RegisterUse","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the use function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be used"}},{"global":null,"name":"RegisterWakeup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the wake function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be woken up"}},{"global":null,"name":"RemoveEffects","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Removes effects to the object","desc_md":"true","desc_file":"Entity_Effects","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% nEffect":"The effect(s) we want to remove"}},{"global":null,"name":"RemoveRegisterBreak","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the break check from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RemoveRegisterDamaged","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the damaged from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RemoveRegisterDrop","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the drop from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RemoveRegisterOutput","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the output from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strOutputName":"The name of the the output that should be removed from the register","%string_in% strEntityName":"The name of the entity that is linked to this output"}},{"global":null,"name":"RemoveRegisterPickup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the pickup from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RemoveRegisterUse","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the use from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RemoveRegisterWokenUp","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the waken check from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RemoveSolidFlags","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Removes solid flags from the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% flag":"The solid flag(s) we want to remove"}},{"global":null,"name":"RemoveSpawnFlags","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Removes spawnflags from the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% flag":"The spawnflag we want to remove"}},{"global":null,"name":"RenderFX","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of render effects types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"kRenderFxNone":"null","kRenderFxPulseSlow":"null","kRenderFxPulseFast":"null","kRenderFxPulseSlowWide":"null","kRenderFxPulseFastWide":"null","kRenderFxFadeSlow":"null","kRenderFxFadeFast":"null","kRenderFxSolidSlow":"null","kRenderFxSolidFast":"null","kRenderFxStrobeSlow":"null","kRenderFxStrobeFast":"null","kRenderFxStrobeFaster":"null","kRenderFxFlickerSlow":"null","kRenderFxFlickerFast":"null","kRenderFxNoDissipation":"null","kRenderFxDistort":"Distort&#47;scale&#47;translate flicker","kRenderFxHologram":"kRenderFxDistort + distance fade","kRenderFxExplode":"Scale up really big!","kRenderFxGlowShell":"Glowing Shell","kRenderFxPulseFastWider":"null"}},{"global":null,"name":"RenderMode","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of render types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"kRenderNormal":"src","kRenderTransColor":"c*a+dest*(1-a)","kRenderTransTexture":"src*a+dest*(1-a)","kRenderGlow":"src*a+dest -- No Z buffer checks -- Fixed size in screen space","kRenderTransAlpha":"src*srca+dest*(1-srca)","kRenderTransAdd":"src*a+dest","kRenderEnvironmental":"not drawn, used for environmental effects","kRenderTransAddFrameBlend":"use a fractional frame value to blend between animation frames","kRenderTransAlphaAdd":"src + dest*(1-a)","kRenderWorldGlow":"Same as kRenderGlow but not fixed size in screen space","kRenderNone":"Don&apos;t render."}},{"global":null,"name":"SetAbsAngles","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current absolute angles of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%QAngle_in% vecOrigin":"The new angles for this object"}},{"global":null,"name":"SetAbsOrigin","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current absolute location of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecOrigin":"The new location we want to place this object"}},{"global":null,"name":"SetAbsVelocity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current absolute velocity of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecOrigin":"The new velocity for this object"}},{"global":null,"name":"SetBlocked","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the blocked function","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% pFunction":"Our blocked function"}},{"global":null,"name":"SetBodyGroup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the bodygroup of the model","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strBodyGroup":"The name of the bodygroup","%int_in% iNum":"The state of the bodygroup (starts from 0)"}},{"global":null,"name":"SetClassname","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the classname for the entity object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strClassname":"Our new entity classname"}},{"global":null,"name":"SetCollisionGroup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the collision group of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% eGroup":"Sets the new collision group"}},{"global":null,"name":"SetEntityInfo","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the entity information","desc_md":"true","desc_file":"SetEntityInfo_Example","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% key":"The information key we want to set","%string_in% value":"The information value we want to set"}},{"global":null,"name":"SetEntityName","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the name for the entity object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strName":"Our new entity name"}},{"global":null,"name":"SetGlow","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Applies glowproxy for this entity. The entity requires the material &#92;&quot;OutlineLitGeneric&#92;&quot; for it to work.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% bEnabled":"Should we draw this glow or not?","%Color% clr = Color(255, 255, 255, 255)":"The color which we want to draw this glow in","%float_in% size = 1.0f":"The size of the glow"}},{"global":null,"name":"SetHealth","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the health of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iHealth":"Sets the the new health value"}},{"global":null,"name":"SetLightingOrigin","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the entity on fire","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strTargetName":"The name of the entity (CBaseEntity object is also allowed)"}},{"global":null,"name":"SetLocalAngularVelocity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the local velocity angle","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%QAngle_in% qAngle":"The angle velocity for this object"}},{"global":null,"name":"SetMass","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the new mass for the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flMass":"Our new mass"}},{"global":null,"name":"SetMaxHealth","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the max health of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iMaxHealth":"Sets the the new health value"}},{"global":null,"name":"SetModel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current active model with a new one","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szModelName":"Overrides the current model with a new one"}},{"global":null,"name":"SetModelIndex","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the current model to another one, if the model index is valid","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iModelIndex":"The index of the model we want to choose to"}},{"global":null,"name":"SetMoveType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the MoveType of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%MoveType_in% moveType":"Sets the new movetype state"}},{"global":null,"name":"SetNextThink","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the next think for the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flThink":"Our next think","%string_in% szContext = \"\"":"Our attachment name"}},{"global":null,"name":"SetOutline","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets an outline for this entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iTeamID":"Which team this glow will be drawn for","%enum_EntityGlowState_t% eGlowFilter":"Tells the the clients what kind of state we are in","%enum_EntityGlowSet_t% eGlowSet":"Tells the clients how we will draw this outline","%Color% clrRGB":"The color which we want to draw this outline in","%bool_in% bFlashing = false":"Should the glow flash or not","%float_in% flGlowRange = 0.0f":"The distance required until we will start drawing the outline"}},{"global":null,"name":"SetOwner","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the owner for this entity object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pOwner":"Our owner entity object"}},{"global":null,"name":"SetParent","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the parent for this entity object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pParent":"Our parent entity object"}},{"global":null,"name":"SetParentAttachment","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the parent attachment","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strAttachment":"Our attachment name","%bool% bMaintainOffset":"If true, we will maintain our offset"}},{"global":null,"name":"SetRenderColor","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the SetRenderColor of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% r":"Amount of red (0-255)","%int_in% g":"Amount of green (0-255)","%int_in% b":"Amount of blue (0-255)","%int_in% a":"Amount of alpha (0-255)"}},{"global":null,"name":"SetRenderFX","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the RenderFX of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%RenderFX_in% renderFX":"Sets the new render effect"}},{"global":null,"name":"SetRenderMode","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the RenderMode of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%RenderMode_in% renderMode":"Sets the new render mode"}},{"global":null,"name":"SetSize","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the size of the model.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecMin":"Set the minimum size","%Vector_in% vecMax":"Set the maximum size"}},{"global":null,"name":"SetSkin","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the skingroup of the model","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iNum":"The state of the skingroup (starts from 0)"}},{"global":null,"name":"SetSolidFlags","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set solid flags for the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% flag":"The solid flag(s) we want to set"}},{"global":null,"name":"SetSolidType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the SolidType of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%SolidType_t% solidType":"Sets the new solidtype state"}},{"global":null,"name":"SetThink","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the think function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% pFunction":"Our think function"}},{"global":null,"name":"SetTouch","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the touch function","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% pFunction":"Our touch function"}},{"global":null,"name":"SetUse","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the +use function","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% pFunction":"Our +use function"}},{"global":null,"name":"SetWaterLevel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the water level of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_WaterLevel% waterLevel":"The water level we want to set"}},{"global":null,"name":"SolidFlags_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of solid flags.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"FSOLID_CUSTOMRAYTEST":"Ignore solid type + always call into the entity for ray tests","FSOLID_CUSTOMBOXTEST":"Ignore solid type + always call into the entity for swept box tests","FSOLID_NOT_SOLID":"Are we currently not solid?","FSOLID_TRIGGER":"This is something may be collideable but fires touch functions even when it&apos;s not collideable (when the FSOLID_NOT_SOLID flag is set)","FSOLID_NOT_STANDABLE":"You can&apos;t stand on this","FSOLID_VOLUME_CONTENTS":"Contains volumetric contents (like water)","FSOLID_FORCE_WORLD_ALIGNED":"Forces the collision rep to be world-aligned even if it&apos;s SOLID_BSP or SOLID_VPHYSICS","FSOLID_USE_TRIGGER_BOUNDS":"Uses a special trigger bounds separate from the normal OBB","FSOLID_ROOT_PARENT_ALIGNED":"Collisions are defined in root parent&apos;s local coordinate space","FSOLID_TRIGGER_TOUCH_DEBRIS":"This trigger will touch debris objects","FSOLID_TRIGGER_TOUCH_PLAYER":"This trigger will touch only players","FSOLID_NOT_MOVEABLE":"Assume this object will not move","FSOLID_PHYSICS2":"Use Physics2 to simulate this object","FSOLID_ALLOW_TRACER":"Even if this entity is set to FSOLID_NOT_SOLID, it will still allow this entity to be picked up from the tracer"}},{"global":null,"name":"SolidType_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of solid types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"SOLID_NONE":"No solid model","SOLID_BBOX":"A BSP tree","SOLID_OBB":"An AABB","SOLID_OBB_YAW":"An OBB","SOLID_VPHYSICS":"An OBB, constrained so that it can only yaw","SOLID_CUSTOM":"Always call into the entity for tests","SOLID_BSP":"Solid vphysics object, get vcollide from the model and collide with that"}},{"global":null,"name":"Spawn","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the entity gets spawned","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Use this function override inside your entity script","return":null,"args":{}},{"global":null,"name":"SUB_FadeOut","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fades out the entity, and then deletes it","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"SUB_Remove","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Removes the entity object from the world","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"SUB_StartFadeOut","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fades out the entity after a specific amount of time, and then deletes it","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% delay":"The amount of time it should wait until it gets deleted","%bool_in% bNotSolid":"If true, it will set the entity object to be non solid"}},{"global":null,"name":"TakeDamage","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Damages the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"Teleport","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current absolute location, angles and velocity of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecOrigin":"The new location we want to place this object","%QAngle_in% qAngle":"The new angles we want for this object","%Vector_in% vecVelocity":"The new velocity for this object"}},{"global":null,"name":"USE_TYPE","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of use types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"USE_OFF":"null","USE_ON":"null","USE_SET":"null","USE_TOGGLE":"null"}},{"global":null,"name":"WaterLevel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of water level.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"WL_NotInWater":"null","WL_Feet":"null","WL_Waist":"null","WL_Eyes":"null"}}]},"Survivor":{"desc":"Manipulates the Survivor object entity, and it's values.","page":"Survivor","subpage":"CBaseEntity","category":"Entities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"GetSurvivorClassType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the class type","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_out% nClass":"The class we want to check"}},{"global":null,"name":"IsBeingExtracted","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the survivor is being extracted or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the AI is being extracted","args":{}},{"global":null,"name":"IsClassType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the survivor is on a specific class","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the survivor is on the class we are checking for","args":{"%enum_SurvivorTypes% nClass":"The class we want to check"}},{"global":null,"name":"IsExtracted","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the survivor has extracted or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the AI has been extracted","args":{}},{"global":null,"name":"IsOnFriendlyTerms","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the survivor is on friendly terms with said team","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the survivor is on friendly terms","args":{"%int_in% nTeam":"The team we want to check"}},{"global":null,"name":"LastHitGroup","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the last hitgroup","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the last hitgroup","args":{}},{"global":null,"name":"SetCustomGun","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gives the survivor a brand new weapon","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szWeapon":"The weapon we want to give this survivor","%bool_in% bRemoveActive":"If true, remove our active weapon. But if this is an turret entity, then it will always be true."}},{"global":null,"name":"SurvivorTypes","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of survivor class types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"TYPE_NONE":"Error class type","TYPE_NORMAL":"Normal class type (Friendly)","TYPE_RIOT":"Riot class type (Friendly)","TYPE_TURRET":"Turret class type (Enemy)","TYPE_PSYCHO":"Psycho class type (Enemy)","TYPE_MILITARY":"Military class type (Enemy)"}},{"global":null,"name":"SurvivorVoices","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of survivor voices.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"VOICE_DEATH":"null","VOICE_BURN":"null","VOICE_BREATHHEAVY":"null","VOICE_RUNNING":"null","VOICE_FOLLOW":"null","VOICE_FOLLOW_STOP":"null","VOICE_RESUCE":"null","VOICE_PAIN":"null","VOICE_PAIN_FF":"null","VOICE_ALERT":"null","VOICE_BACKUP":"null","VOICE_IDLE":"null","VOICE_IDLE_HINT":"null","VOICE_WANTS_HELP":"null","VOICE_GOT_HELP":"null","VOICE_ATTACKED":"null"}},{"global":null,"name":"Vocalize","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Makes the AI speak","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_SurvivorVoices% nVoice":"The voice we want this AI to say","%bool_in% bMustSay":"If true, force the AI to say this, no matter what."}},{"global":null,"name":"VocalizeLater","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Makes the AI speak","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_SurvivorVoices% nVoice":"The voice we want this AI to say","%float_in% flDelay":"When the survivor should speak","%bool_in% bMustSay":"If true, force the AI to say this, no matter what."}}]}},"Globals":{"ThePresident":{"desc":"Class used to manipulate the class 'The President'","page":"ThePresident","category":"Globals","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"AddAmmoToList","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds ammo to the random list (will only spawn if a weapon of said ammotype exist)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_WeaponInfo_AmmoDef% eAmmoType":"The classname of the weapon&#47;item","%int_in% iValue":"The amount we want allowed to spawn"}},{"global":null,"name":"AddAttachmentToList","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds the attachment to the random list with a % based spawn. Will only spawn on info_random_item entities","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szClassname":"The classname of the attachment","%int_in% iValue":"The amount we want allowed to spawn","%float_in% flPercent":"The Percent amount that this item will spawn"}},{"global":null,"name":"AddItemToList","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds the item to the random list with a % based spawn","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szClassname":"The classname of the weapon&#47;item","%int_in% iValue":"The amount we want allowed to spawn","%float_in% flPercent":"The Percent amount that this item will spawn"}},{"global":null,"name":"AddSpawnWeaponOverride","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Override the default spawn weapons with random ammo sets","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% nSlot":"The slot we want to override","%string_in% szClassname":"The classname of the weapon&#47;item","%int_in% nAmmoMin":"The min amount of ammo","%int_in% nAmmoMax":"The max amount of ammo"}},{"global":null,"name":"AddWeaponItemAmmoToList","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Spawn a specific number of weapons &#47; ammo","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szClassname":"The classname of the weapon&#47;item","%int_in% iValue":"The amount we want allowed to spawn"}},{"global":null,"name":"AddWeaponItemAmmoToListSpawn","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Spawn a specific number of weapons &#47; ammo to a group","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strGroup":"The name of the group","%string_in% szClassname":"The classname of the weapon&#47;item","%int_in% iValue":"The amount we want allowed to spawn"}},{"global":null,"name":"AutoSaveWave","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ThePresident::Flatline","child":null,"desc":"Overrides the round saver to save the current wave automatically.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iWave":"If set higher than 0, it will auto save the round (override round saver)"}},{"global":null,"name":"BeginHordeMode","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Starts the horde mode (all zombies will become agro)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"CandidateType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of gamemode types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"CT_DEV":"Developer Mode","CT_OBJECTIVE":"Escape","CT_EXTRACTION":"Extraction","CT_FLATLINE":"Flatline","CT_HUNTED":"Hunted","CT_PANIC_OBJECTIVE":"Panic Objective","CT_PANIC_CLASSIC":"Panic Classic"}},{"global":null,"name":"CleanupNonVisibleZombies","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Cleanup all zombies that are not visible","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"CleanupNonVisibleZombiesInDist","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Cleanup all zombies that are not visible within a certain location and distance","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% vecLocation":"The location where we will do the cleanup at","%float_in% flSafeDistance":"The safe range of the cleanup"}},{"global":null,"name":"CreateZombieAI","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Create a zombie AI at a specific place","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ZombieID% nZombieID":"The zombie type that should be spawned","%Vector% vecLocation":"The location where the zombie will spawn at","%QAngle% qAng":"The direction the zombie will look at"}},{"global":null,"name":"FakeKillFeed","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fake a kill, and send it to the kill feed","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szKiller":"The name of the killer","%string_in% szVictim":"The name of the victim","%string_in% szWeapon":"Weapon type","%bool_in% bHeadshot":"Headshot kill?","%int_in% team_killer":"The team of the killer","%int_in% team_victim":"The team of the victim","%bool_in% bForced = false":"Force the kill to draw?"}},{"global":null,"name":"FindPossibleAttackTarget","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Force a zombie, or all zombies, to find a possible target to attack","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Infected% pTarget = null":"Our zombie that should find a possible target. If null, it will grab all zombies instead of the targeted one"}},{"global":null,"name":"ForceSubtitles","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Force subtitles from a specific location","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iEntIndex":"The entity we should emit this to, if set to 0, it will emit to all players","%Vector% vecLocation":"The location where the subtitle should emit from","%float_in% flRange":"The range of the subtitle","%string_in% szMsg":"The subtitle message","%Color% clr":"The color of the subtitle"}},{"global":null,"name":"ForceWinState","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forces the gamemode into a certain win condition","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_WinState% nWinState":"The win condition"}},{"global":null,"name":"FreezeAllZombies","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forcefully freeze or unfreeze all zombie AI on the map.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool% state":"If true, all zombie AI will be frozen in place"}},{"global":null,"name":"GetGameModeType","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current gamemode type","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"GiveWeaponToSurvivor","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gives a weapon to the player from an array. Used by all gamemodes when the player spawns in for the first time.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pTerror":"The player we want to give weapons to","%array_RandomSpawnWeapon% List":"The array list of weapons","%enum_LimitTypes% eType":"The Type of weapon that will be given","%bool_in% bRequired":"If true this weapon will be required."}},{"global":null,"name":"IgnoreDefaultScoring","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Tells our president candidate to ignore or follow the default scoring rules.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, the default scoring will be ignored"}},{"global":null,"name":"InfoFeed","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Uses the kill feed to send quick information","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szMsg":"The string we want to show","%bool_in% bDrawRed":"Draw color in red?"}},{"global":null,"name":"IsAllowedToDropAmmo","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we are allowing ammo to be dropped","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we allow ammo to be dropped","args":{}},{"global":null,"name":"IsHordeMode","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we are in horde mode","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we are currently in horde mode","args":{}},{"global":null,"name":"IsInWeaponFastSwitch","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we are allowing weapon fast switch","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we allow fast weapon switch","args":{}},{"global":null,"name":"IsSolo","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we only have 1 player","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we only have 1 player","args":{}},{"global":null,"name":"MaxZombiesAllowed","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set maximum amount of zombies allowed at any given time. 200 is the maximum number.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"Sets the maximum amount of allowed zombies"}},{"global":null,"name":"MusicTypes","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of music types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"MUSIC_CALM":"Calm Intensity","MUSIC_ALERT":"Alert Intensity","MUSIC_COMBAT":"Combat Intensity"}},{"global":null,"name":"OnInfectedKilledFeed","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Similar to FakeKillFeed, except used by specific gamemodes when a zombie dies.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Infected% pInfected":"The infected AI that got killed","%class_CTerrorPlayer% pTerror":"The player that caused this kill","%bool_in% bHeadshot":"If true, this was a headshot kill."}},{"global":null,"name":"OnObjective","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Send an objective message to all survivors","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strMessage":"The message that will be sent to the phone"}},{"global":null,"name":"OnObjectiveTarget","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Send an objective message to all survivors with a target of (X,Y,Z)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strMessage":"The message that will be sent to the phone","%Vector% vecLocation":"The location where the message will pin point to"}},{"global":null,"name":"OpenShopItems","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ThePresident::Flatline","child":null,"desc":"Overrides the shop_item &quot;open&quot; state.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, all shop_item&apos;s will have it&apos;s state set to &quot;open&quot;"}},{"global":null,"name":"OverrideWeaponFastSwitch","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Override the weapon switch to use fast weapon switch. Flatline sets this to true by default.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, the weapons will not play holster animation"}},{"global":null,"name":"PlayersCanSeeThis","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the player can see this specific location or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the player can see this","args":{"%Vector% vecLocation":"The location where we want to check"}},{"global":null,"name":"RingToneAllPlayers","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Causes all survivors that are alive to make their phone emit a ringtone.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_RingTone% nTone":"The ringtone"}},{"global":null,"name":"SetAllowedToDropAmmo","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Tells our president candidate to allow and&#47;or ignore ammo dropping (does not work in Horde Mode)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, we will allow ammo to drop."}},{"global":null,"name":"SetDeathmatch","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ThePresident::Hunted","child":null,"desc":"Overrides the gamerules on Hunted. Make sure to set this when the round starts, as the timer will reset back to false, when ThePresident calls for &quot;Reset&quot; state.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, the game will never end, unless It&apos;s set via Angelscript."}},{"global":null,"name":"SetHordeAttackArea","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Force a horde of zombies in a radius to run at the co-ords","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% vecLocation":"The location where the message will pin point to","%float_in% flDist":"The slot we want to override"}},{"global":null,"name":"SetInfectedLives","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the number of lives an infected has","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"Sets the amount of zombie lives"}},{"global":null,"name":"SetInfiniteTimer","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ThePresident::Hunted","child":null,"desc":"Override the timer on hunted. Make sure to set this when the round starts, as the timer will reset back to false, when ThePresident calls for &quot;Reset&quot; state.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, the timer on hunted will be disabled."}},{"global":null,"name":"SetMaxExtractions","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ThePresident::Extraction","child":null,"desc":"Overrides the max amount of extractions this map can have.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iMax":"If set higher than 0, it will apply the max amount of extractions"}},{"global":null,"name":"SetMinMaxZombiesTypes","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"A riot, doctor or looter will spawn every X zombies between min and max.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ZombieID% nZombieID":"The zombie id","%int_in% min":"The minimum amount","%int_in% max":"The maximum amount"}},{"global":null,"name":"SetMusicIntensity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the music intensity for all players in the server.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_MusicTypes% eTense":"The music type should use"}},{"global":null,"name":"SetRandomizeWeapons","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ThePresident::Hunted","child":null,"desc":"Overrides the gamerules on Hunted. Make sure to set this when the round starts, as the timer will reset back to false, when ThePresident calls for &quot;Reset&quot; state.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, the player will be spawned with randomzied weapons"}},{"global":null,"name":"SetSpawnConstantFlags","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set a new flag for our constant spawn","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iSpawnFlags":"The spawnflags we want to set for our constant spawns"}},{"global":null,"name":"SetSpawnDelay","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the spawn delay for the zombies. -1 to clear the timer","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flVal":"The amount of time when zombies should be able to respawns"}},{"global":null,"name":"SetSpawnZombiesConstant","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the number of constant zombies to have in the world always.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"The amount we want to spawn"}},{"global":null,"name":"SetSurvivorJoinTime","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the time until survivors are forced to join as zombies","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iVal":"The amount of time allowed until late joiners are forced to join zombies"}},{"global":null,"name":"SpawnZombies","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Spawn a number of zombies in enabled spawns","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"The amount we want to spawn"}},{"global":null,"name":"SpawnZombiesConstant","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds number of constant zombies to have in the world always","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"The amount we want to spawn"}},{"global":null,"name":"SpawnZombiesForce","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forcefully spawn a number of zombies. Ignore survivors etc","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"The amount we want to spawn"}},{"global":null,"name":"SpawnZombiesForceArea","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forcefully spawn a number of zombies in a specifically named area","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"The amount we want to spawn","%string_in% szSpawn":"The name of the zombie spawn","%bool% ignoreplayers":"[Optional] If true, we will ignore players if they can see this trigger or are looking directly at it"}},{"global":null,"name":"SpawnZombiesInVolume","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forcefully spawn a number of zombies in a specified volume","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"The amount we want to spawn","%Vector_in% vMin":"Minimum volume space cords","%Vector_in% vMax":"Maximum volume space cords","%bool% ignoreplayers":"[Optional] If true, we will ignore players if they can see this trigger or are looking directly at it"}},{"global":null,"name":"StartCash","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ThePresident::Flatline","child":null,"desc":"Overrides the starting cash in Flatline.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iCash":"If set higher than -1, it will override the current starting cash"}},{"global":null,"name":"StopHordeMode","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Stops the horde mode (new zombies will not become agro, but the current active ones will still be in agro state)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"WinState","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of gamemode win states.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"STATE_WIN":"Causes the survivors to win","STATE_FAIL":"Causes the survivors to lose"}},{"global":null,"name":"ZombieID","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of zombie types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"ZID_NRM":"Normal zombie, reads from the population data","ZID_RIOT":"Riot Zombie","ZID_DOCTOR":"Doctor Zombie","ZID_LOOTER":"Looter Zombie","ZID_RUNNER":"same as ZID_NRM, except it overrides the run animation with the player run animation instead","ZID_BOSS_CARRIER":"Special zombie type - Carrier (Flatline Exclusive)","ZID_BOSS_CHARGER":"Special zombie type - Charger (Flatline Exclusive)","ZID_BOSS_SCREAMER":"Special zombie type - Screamer (Flatline Exclusive)","ZID_BOSS_SCREAMER_BRIDE":"Special zombie type - Screamer Bride (Flatline Exclusive)"}},{"global":null,"name":"ZombieSpawnFlags","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of zombie constant spawn flags.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"ZSF_DEFAULT":"Default flags and settings.","ZSF_IGNORE_MIN_DISTANCE":"Ignore checking against min spawn distance?","ZSF_IGNORE_MAX_DISTANCE":"Ignore checking against max spawn distance?","ZSF_IGNORE_LOS":"Ignore line of sight checks?","ZSF_PLAYER_SPAWN":"Use survivor spawn settings and entities if avaliable.","ZSF_FORCED_AREA":"Forcefully used the specifically selected area for spawning.","ZSF_WEAPONITEMAMMO_SPAWN":"This is used for a weapon, ammo or item spawn.","ZSF_FORCED_LOS_TRACE":"Force a line of sight trace against all players.","ZSF_FORCED_NEAR_SPAWN":"Force spawns near to players, used for Extraction."}}]},"RoundManager":{"desc":"Class used to manipulate the rounds","page":"RoundManager","category":"Globals","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"AddRounds","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds to the amount of rounds","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"Adds to the amount of rounds"}},{"global":null,"name":"AddTimeLeft","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds to the time remaining for the game (in seconds)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flValue":"Adds to the time remaining"}},{"global":null,"name":"ChangeLevel","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Changes the current map to the new specific map","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strMap":"The map we want to change to (if valid)"}},{"global":null,"name":"GetCurrentRound","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current of round","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current round","args":{}},{"global":null,"name":"GetRounds","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the amount of rounds","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the total amount of rounds","args":{}},{"global":null,"name":"GetTimeLeft","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the time remaining for the current game","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current time left for the game","args":{}},{"global":null,"name":"IsMapVoteEnabled","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if end of round map voting is enabled or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if map voting is enabled","args":{}},{"global":null,"name":"SetRounds","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the amount of rounds","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"Set the amount of rounds"}},{"global":null,"name":"SetTimeLeft","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the time remaining for the game (in minutes)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flValue":"Set the time remaining"}},{"global":null,"name":"StartMapVote","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Starts the map end voting","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we were able to start the map vote","args":{}}]},"SQL Database":{"desc":"Used to save, create and update data to an external Database","page":"SQL Database","category":"Globals","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"Connect","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Create a connection to an external database","desc_md":"true","desc_file":"CSQLConnection_Connect","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strHost":"Hostname","%int_in% iPort":"Port (if 0, it will use the default MySQL port)","%string_in% strUser":"User","%string_in% strPassword":"Password","%string_in% strDatabase":"Database","%class_SQLConFunc% pCallback":"The function that will be called if this connection was a success or a failure."}},{"global":null,"name":"Disconnect","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Disconnects from external database","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CSQLConnection% hConnection":"The CSQLConnection@ object"}},{"global":null,"name":"Failed","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"IMySQL","ref":null,"namespace":null,"child":null,"desc":"Checks if our query failed or succeded","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if our query failed.","args":{}},{"global":null,"name":"Failed","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CSQLConnection","ref":null,"namespace":null,"child":null,"desc":"Checks if our connection failed or succeded","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if our connection failed.","args":{}},{"global":null,"name":"GetFieldCount","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Grabs the amount of fields we get from our query.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the amount of fields from the query","args":{"%class_IMySQL% hQuery":"The IMySQL@ object"}},{"global":null,"name":"GetFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL::ReadResult","child":null,"desc":"Grabs the float from the result","desc_md":"true","desc_file":"IMySQL_ReadResult_Float","type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a float","args":{"%class_IMySQL% hQuery":"The IMySQL@ object","%int_in% iID":"Our index ID"}},{"global":null,"name":"GetInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL::ReadResult","child":null,"desc":"Grabs the interger from the result","desc_md":"true","desc_file":"IMySQL_ReadResult_Int","type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a interger","args":{"%class_IMySQL% hQuery":"The IMySQL@ object","%int_in% iID":"Our index ID"}},{"global":null,"name":"GetLastError","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CSQLConnection","ref":null,"namespace":null,"child":null,"desc":"Returns the last error of our SQL","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the last error, if the connection failed.","args":{}},{"global":null,"name":"GetString","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL::ReadResult","child":null,"desc":"Grabs the string from the result","desc_md":"true","desc_file":"IMySQL_ReadResult_String","type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a string","args":{"%class_IMySQL% hQuery":"The IMySQL@ object","%int_in% iID":"Our index ID"}},{"global":null,"name":"NextResult","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Grabs the next row result from our query.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if it was able to grab the next row result from the query","args":{"%class_IMySQL% hQuery":"The IMySQL@ object"}},{"global":null,"name":"PrintErrorsOnIgnoreQuery","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Checks if the SendAndIgnoreQuery should print errors or not","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CSQLConnection% hConnection":"The CSQLConnection@ object","%bool% bState":"Determines if SendAndIgnoreQuery should print errors or not"}},{"global":null,"name":"SendAndIgnoreQuery","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Sends a query to our database, it will automatically free the query after use. It will not however print any errors unless PrintErrorsOnIgnoreQuery is set to true","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CSQLConnection% hConnection":"The CSQLConnection@ object","%string_in% strQuery":"Our query","%class_SQLQueryFunc% pCallback = null":"If the function is null, then this will act as &quot;fire and forget&quot;."}},{"global":null,"name":"SendAndIgnoreQueryEx","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Sends a query to our database, it will automatically free the query after use. It will not however print any errors unless PrintErrorsOnIgnoreQuery is set to true","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CSQLConnection% hConnection":"The CSQLConnection@ object","%string_in% strQuery":"Our query","%class_SQLQueryFunc% pCallback":"If the function is null, then this will act as &quot;fire and forget&quot;.","%class_dictionary% dict":"Data we want to use if the query was fired successfully"}},{"global":null,"name":"SendQuery","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Sends a query to our database, frees the query once executed","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CSQLConnection% hConnection":"The CSQLConnection@ object","%string_in% strQuery":"Our query","%class_SQLQueryFunc% pCallback = null":"If the function is null, then this will act as &quot;fire and forget&quot;."}},{"global":null,"name":"SendQueryEx","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Sends a query to our database, frees the query once executed","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CSQLConnection% hConnection":"The CSQLConnection@ object","%string_in% strQuery":"Our query","%class_SQLQueryFuncDict% pCallback":"The function that will be called","%class_dictionary% dict":"Data we want to use if the query was fired successfully"}},{"global":null,"name":"SetErrorLocation","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Where the log file will be created at (under logs&#47; folder)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CSQLConnection% hConnection":"The CSQLConnection@ object","%string_in% strLocation":"Error location"}},{"global":null,"name":"SetErrorPrefix","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Set the error prefix when the Query throws an error","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CSQLConnection% hConnection":"The CSQLConnection@ object","%string_in% strPrefix":"Error prefix"}},{"global":null,"name":"TryReconnect","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"SQL","child":null,"desc":"Will try to reconnect to the SQL server if it lost connect.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CSQLConnection% hConnection":"The CSQLConnection@ object"}}]},"Hooks":{"desc":"All the available events that can be used by plugins & map scripts","page":"Hooks","category":"Globals","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"EscapeSequence","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When we we should start escaping on Flatline","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"FlatLine","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"FirstAidHeal","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When a player heals themselves or their target (survivor&#47;player)","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Weapons","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pOwner":"The owner of the weapon","%class_CBaseEntity% pTarget":"The target we healed"}},{"global":null,"name":"HalfTime","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When we progressed half way on Flatline","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"FlatLine","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"InfectionState","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of infection states.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"state_none":"No longer infected","state_infection":"Normal infection","state_infection_forced":"Forced infection","state_infection_turning":"Turning into a zombie","state_infection_completed":"Infection completed, has fully turned"}},{"global":null,"name":"InoculatorHeal","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When a player heals themselves or their target (survivor&#47;player)","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Weapons","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pOwner":"The owner of the weapon","%class_CBaseEntity% pTarget":"The target we healed"}},{"global":null,"name":"ItemCarry","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When a player uses (+attack) the item carry","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Weapons","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pOwner":"The owner of the weapon","%string_in% strName":"The name of the item carry (if it does not have an objective name, it will return weapon_itemcarry)"}},{"global":null,"name":"Melee","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When a player bashes with their firearm, or attacks using their melee weapon","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Weapons","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pOwner":"The owner of the weapon","%bool_in% bMeleeBash":"Returns true if we bashed with our firearm. False if we used our melee weapon","%bool_in% bHeavy":"Returns true if this was a heavy melee attack&#47;bash","%class_CBaseEntity% pHit":"The target we hit"}},{"global":null,"name":"OnCarAlarmTripped","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the prop_car_alarm gets tripped","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Entities","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pCause":"The entity that caused the alarm to trip (Survivor or CTerrorPlayer)","%class_CBaseEntity% pCar":"The car that got tripped"}},{"global":null,"name":"OnCarAlarmTrippedEnded","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the alarm ends from prop_car_alarm","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Entities","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pCar":"The car that got tripped"}},{"global":null,"name":"OnConCommand","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player is using the console.","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that is sending the message","%class_CASCommand% pArgs":"The console arguments"}},{"global":null,"name":"OnCosmeticKilled","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the cosmetic gets killed","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Cosmetic","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strModel":"The model that the cosmetic used","%Vector_in% vecPosition":"The position the cosmetic","%QAngle_in% qAngles":"The angles of the cosmetic"}},{"global":null,"name":"OnEndTouch","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity stopped touching this trigger (if it gets accepted by the filters).","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Trigger","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pTrigger":"The trigger object that was fired","%string_in% strEntityName":"The name of the trigger","%class_CBaseEntity% pEntity":"The entity that stopped touching this trigger"}},{"global":null,"name":"OnEntityCreation","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is being created","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Entities","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strClassname":"The classname of the entity","%class_CBaseEntity% pEntity":"The entity that was recently created"}},{"global":null,"name":"OnEntityDestruction","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is being destroyed","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Entities","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strClassname":"The classname of the entity","%class_CBaseEntity% pEntity":"The entity that is being destroyed"}},{"global":null,"name":"OnEntityDropped","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player drops an item &#47; weapon. Gets executed when the player dies as well.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that&apos;s dropping the item","%class_CBaseEntity% pEntity":"The entity that got dropped"}},{"global":null,"name":"OnInfectedDamaged","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the infected gets damaged.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Infected","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Infected% pInfected":"The infected that got damaged","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnInfectedDamagedPre","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the infected is about to get damaged.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Infected","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Infected% pInfected":"The infected that got damaged","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnInfectedKilled","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the infected gets killed.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Infected","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Infected% pInfected":"The infected that got damaged","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnInfectedSpawned","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the infected spawns","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Infected","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Infected% pInfected":"The infected that spawned"}},{"global":null,"name":"OnMenuExecuted","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player is executing a menu item","desc_md":null,"desc_file":null,"type":"event","restrict":null,"eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that executed this menu","%string_in% szID":"The ID of the menu","%int_in% iValue":"The value of the item"}},{"global":null,"name":"OnNoSurvivorsRemaining","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When there are no survivors remaining.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"ThePresident","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% iCandidate":"The current gamemode type"}},{"global":null,"name":"OnPhysicsBreak","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is being destroyed","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Entities","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pAttacker":"The entity that attacked this entity","%class_CBaseEntity% pEntity":"The entity that is being destroyed"}},{"global":null,"name":"OnPlayerBotOutOfRange","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player bot is too far away from their leader","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pBot":"The player bot that got stuck","%class_CTerrorPlayer% pLeader":"The leader the bot teleported to"}},{"global":null,"name":"OnPlayerBotStuck","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player bot got stuck.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pBot":"The player bot that got stuck"}},{"global":null,"name":"OnPlayerConnect","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player has joined the game.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strPlayerName":"The name of the player","%string_in% strPlayerIP":"The IP of the player"}},{"global":null,"name":"OnPlayerConnected","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player has fully joined","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that just joined"}},{"global":null,"name":"OnPlayerDamaged","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets damaged.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that got damaged","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnPlayerDamagedPre","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player is about to get damaged.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that got damaged","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnPlayerDisconnected","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player has disconnected.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that has disconnected"}},{"global":null,"name":"OnPlayerEscape","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player escaped.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that recently spawned"}},{"global":null,"name":"OnPlayerInfected","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets infected, or when the infection state updates.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that got infected","%enum_InfectionState% iState":"The infection state"}},{"global":null,"name":"OnPlayerInfectedEx","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets infected, or when the infection state updates.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that got infected","%class_CTerrorPlayer% pTerror":"The player that infected us","%enum_InfectionState% iState":"The infection state"}},{"global":null,"name":"OnPlayerInitSpawn","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player spawned for the first time.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that spawned"}},{"global":null,"name":"OnPlayerKilled","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player dies.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that died","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnPlayerKilledPost","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Executes after the player has died.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that died"}},{"global":null,"name":"OnPlayerLeftSafeZone","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player leaves the safezone.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that recently spawned"}},{"global":null,"name":"OnPlayerReachSafeZone","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player reaches the safezone.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that recently spawned"}},{"global":null,"name":"OnPlayerRunCommand","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player fires a button input.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that ran the command","%int_out% nButtons":"The button inputs we used and maybe want to modify"}},{"global":null,"name":"OnPlayerRunCommandPost","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player fires a button input.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that ran the command","%int_out% nButtons":"The button inputs we used and maybe want to modify"}},{"global":null,"name":"OnPlayerSpawn","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player spawned in the world.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that recently spawned"}},{"global":null,"name":"OnPlayerVoiceCommand","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player uses vocalizer","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that used a vocalize command","%string_in% szID":"The ID of the voice command","%string_out% szChatText":"The chat text we will override, leave empty for default text. (If the player have chat prints enabled for vocalizer, then this will override said text)"}},{"global":null,"name":"OnRandomItemSpawn","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is being created from the random item pool","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"ThePresident","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strClassname":"The classname of the entity","%class_CBaseEntity% pEntity":"The entity that was recently created"}},{"global":null,"name":"OnRoundTime","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Called every frame, it will output the amount of minutes and seconds left in the round.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"ThePresident","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iMinutes":"The amount of time in minutes","%int_in% iSeconds":"The amount of time in seconds (0-59 for each minute)"}},{"global":null,"name":"OnStartTouch","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity touched this trigger (if it gets accepted by the filters).","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Trigger","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pTrigger":"The trigger object that was fired","%string_in% strEntityName":"The name of the trigger","%class_CBaseEntity% pEntity":"The entity that touched this trigger"}},{"global":null,"name":"OnSurvivorDamaged","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the survivor AI gets damaged.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Survivor","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Survivor% pSurvivor":"The survivor that got damaged","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnSurvivorDamagedPre","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the survivor AI is about to get damaged.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Survivor","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Survivor% pSurvivor":"The survivor that got damaged","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnSurvivorKilled","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the survivor AI gets killed.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Survivor","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Survivor% pSurvivor":"The survivor that got damaged","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnSurvivorSpawned","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the survivor AI spawns","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Survivor","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Survivor% pSurvivor":"The survivor that spawned"}},{"global":null,"name":"OnTerminateRound","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the round gets terminated","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"ThePresident","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% iTeam":"The team that won"}},{"global":null,"name":"OnTouching","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is touching this trigger (if it gets accepted by the filters).","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Trigger","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pTrigger":"The trigger object that was fired","%string_in% strEntityName":"The name of the trigger","%class_CBaseEntity% pEntity":"The entity that is touching this trigger"}},{"global":null,"name":"OnUserAdd","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the a player gets added to the admin list","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that got added as an admin","%bool_in% bRet":"Returns true if the command succeded"}},{"global":null,"name":"OnUserBanned","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets banned.","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that is going to get banned","%int_in% iMinutes":"The amount of time in minutes","%string_in% strReason":"The ban reason"}},{"global":null,"name":"OnUserBannedEx","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets banned (Extended).","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that is going to get banned","%class_CTerrorPlayer% pAdmin":"The player that called the ban","%int_in% iMinutes":"The amount of time in minutes","%string_in% strReason":"The ban reason"}},{"global":null,"name":"OnUserBannedSteamID","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets banned (SteamID).","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% uid":"The steamid that is going to get banned","%class_CTerrorPlayer% pAdmin":"The player that called the ban","%int_in% iMinutes":"The amount of time in minutes","%string_in% strReason":"The ban reason"}},{"global":null,"name":"OnUserGagMute","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets muted or gagged.","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_bool% bMuted":"If true, then this is a mute instead of a gag.","%class_CTerrorPlayer% pPlayer":"The player that is going to get banned","%class_CTerrorPlayer% pAdmin":"The player that called the ban","%int_in% iMinutes":"The amount of time in minutes","%string_in% strReason":"The ban reason"}},{"global":null,"name":"OnUserGagMuteSteamID","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets muted or gagged (SteamID).","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_bool% bMuted":"If true, then this is a mute instead of a gag.","%int_in% uid":"The steamid that is going to get muted&#47;gagged","%class_CTerrorPlayer% pAdmin":"The player that called the mute&#47;gag","%int_in% iMinutes":"The amount of time in minutes","%string_in% strReason":"The mute&#47;gag reason"}},{"global":null,"name":"OnUserKicked","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets kicked.","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that is going to get kicked","%string_in% strReason":"The kick reason"}},{"global":null,"name":"OnUserRemove","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the a player gets removed to the admin list","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that got removed as an admin","%bool_in% bRet":"Returns true if the command succeded"}},{"global":null,"name":"OnUserUpdated","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the a player gets admin status gets updated","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that got it&apos;s admin status updated","%enum_AdminAccessLevel_t% iLevel":"The level that we want to be set as","%enum_AdminAccessLevel_t% iRet":"The Actual level returned from the command"}},{"global":null,"name":"OnUserWarned","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets warned.","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that is going to get warned","%class_CTerrorPlayer% pAdmin":"The player that called the warning","%string_in% strReason":"The ban reason"}},{"global":null,"name":"OnUserWarnedSteamID","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets warned (SteamID).","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% uid":"The steamid that is going to get warned","%class_CTerrorPlayer% pAdmin":"The player that called the warning","%string_in% strReason":"The ban reason"}},{"global":null,"name":"OverrideZombieSpawn","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the zombie classname with something else","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Infected","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szZombieEnt":"The zombie classname we want to create","%string_out% szZombieEntOverride":"The classname we want to override with"}},{"global":null,"name":"PlayerSay","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player is sending a chat message.","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that is sending the message","%class_CASCommand% pArgs":"The chat arguments"}},{"global":null,"name":"ReadFromPopulations","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the infected is about to read from the population data","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Infected","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Infected% pInfected":"The infected that wants to use a new model","%string_in% szCurrentLocation":"The location data we are currently in","%string_out% szLocation":"The location data we want to override"}},{"global":null,"name":"WaveEnded","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the wave ended on Flatline","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"FlatLine","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% bCompleted":"Did we complete this wave or not?"}},{"global":null,"name":"WaveLast","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When we started the last wave on Flatline","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"FlatLine","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"WaveStart","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the wave starts on Flatline","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"FlatLine","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iRound":"The current round"}}]},"Script Handling":{"desc":"Handles the script file","page":"Script Handling","category":"Globals","desc_md":"false","type":"void","functions":[{"global":"true","name":"throw","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Throws an exception which will unload the plugin instantly","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% message":"Our message","%enum_ThrowMethod% method = m_kDefault":"Determines how we should print and log the error"}},{"global":null,"name":"ThrowMethod","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of throw methods.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"m_kDefault":"Prints and logs only the input throw message","m_kDump":"Prints and logs a dump without a call stack","m_kFullDump":"Prints and logs a dump with a call stack"}}]},"Log":{"desc":"Class used for logging purposes.","page":"Log","category":"Globals","desc_md":"false","type":"void","functions":[{"global":null,"name":"LogTypes","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of types (or severity) of messages.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"LOGTYPE_TRACE":"For &quot;code tracing&quot; purposes only, only scripters will need this.","LOGTYPE_INFO":"Useful information about plugin&apos;s behaviour like something has been finished with success.","LOGTYPE_CRITICAL":"A critical error prevents the plugin to function properly and needs immediate attention.","LOGTYPE_WARN":"Warning about potential problems that could be minor (incorrect behaviour, bad result...) or major (plugin failing to function properly).","LOGTYPE_ERROR":"An error causes problems but doesn&apos;t require immediate attention.","LOGTYPE_DEBUG":"Information that could be used by people like servers operators for troubleshooting purposes."}},{"global":null,"name":"PrintToServerConsole","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Log a message of a certain severity to the console.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Prints to the server console and logs","args":{"%enum_LogTypes% eLogType":"The type or severity of the message.","%string_in% strMsg":"The message to show."}},{"global":null,"name":"ToLocation","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Log a message of a certain severity within a specific context to a specific location.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Prints to the server console and logs","args":{"%string_in% strLogLocation":"The location the log file will be saved at","%enum_LogTypes% eLogType":"The type or severity of the message.","%string_in% strMsg":"The message to log."}}]},"Globals":{"desc":"Global functions","page":"Globals","category":"Globals","desc_md":"false","type":"void","functions":[{"global":"false","name":"AllowThirdPersonCamera","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we allow for third person cameras","desc_md":"true","desc_file":null,"type":"void","restrict":"server","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"Enables&#47;Disables thirdperson camera"}},{"global":"false","name":"AngleVectors","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Angles vectors","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%QAngle_in% pAngle":"Our angles","%Vector_out% pVector":"Our vector that will be modified"}},{"global":null,"name":"Distance","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks the distance between 2 vectors","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the distance in centimeters","args":{"%Vector% pVector1":"The Vector position we should check on the map","%Vector% pVector2":"The Vector position we should check on the map"}},{"global":"false","name":"GetCurrentMapName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current name of the map (without the .bsp)","desc_md":"true","desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current name of the map","args":{}},{"global":"false","name":"GetCurrentTime","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current global time","desc_md":"false","desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"preset_return_float","args":{}},{"global":"false","name":"GetMapCycle","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current mapcycle as a string array","desc_md":"true","desc_file":null,"type":"void","restrict":"server","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%array_string% aMapList":"The array we want to populate with our maps"}},{"global":"false","name":"GetMaps","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs all available maps, from official to custom content on the server","desc_md":"true","desc_file":null,"type":"void","restrict":"server","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%array_string% aMapList":"The array we want to populate with our maps"}},{"global":"false","name":"GetMaxClients","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the total amount of players that can be connected to the server","desc_md":"false","desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"preset_return_int","args":{}},{"global":"false","name":"IsCurrentMap","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we are on a specific map","desc_md":"true","desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we are on this specific map","args":{"%string_in% szMap":"Our mapname we want to check"}},{"global":"false","name":"RandomAngle","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets a random QAngle","desc_md":null,"desc_file":null,"type":"QAngle","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a QAngle with random angles","args":{"%float% min":"null","%float% max":"null"}},{"global":null,"name":"VectorAngles","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts Vector to QAngle","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% pVector":"The vector we want to convert to QAngle format","%QAngle_out% pAngle":"The QAngle output"}}]},"FileSystem":{"desc":"Read and writes .json files","page":"FileSystem","category":"Globals","desc_md":"false","type":"namespace","functions":[{"global":null,"name":"CreateFile_Json","namefake":"CreateFile","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem","child":null,"desc":"Creates a json file from the json object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strFileName":"The file we want to save","%class_JsonValues% Json":"The JsonValues@ object"}},{"global":null,"name":"CreateFolder","namefake":"CreateFolder","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem","child":null,"desc":"Creates a folder under data&#47;custom&#47;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strFolder":"The folder we want to create"}},{"global":null,"name":"CreateJson","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"JsonValues","ref":null,"namespace":"FileSystem","child":null,"desc":"Creates a JsonValues@ object that can be manipulated","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a JsonValues@ object that can be manipulated","args":{}},{"global":null,"name":"Exists","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem","child":null,"desc":"Checks if the value, or type, exists or not","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns 0 if the value exist. 1 if empty, 2 if the value does not exist","args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strValue":"The value we should read","%string_in% strType":"[optional] The type we should read"}},{"global":null,"name":"FileHTTP_Construct","namefake":"Construct","isfunc":null,"classfunction":null,"base":null,"object":"FileHTTP","ref":null,"namespace":"FileSystem::HTTP","child":null,"desc":"Construct a json object from a URL","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a FileHTTP@ object that can be manipulated","args":{"%string_in% strUrl":"The URL where we want to grab said information from","%enum_FileHttpRequestType% eRequest":"What kind of request we should ask for"}},{"global":null,"name":"FileHTTP_GetJson","namefake":"GetJson","isfunc":null,"classfunction":null,"base":null,"object":"JsonValues","ref":null,"namespace":"FileSystem::HTTP","child":null,"desc":"Grabs the raw data from the constructed HTTP request","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a JsonValues@ object that can be manipulated","args":{"%class_FileHTTP% data":"The FileHTTP@ object"}},{"global":null,"name":"FileHTTP_GetRaw","namefake":"GetRaw","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem::HTTP","child":null,"desc":"Grabs the raw data from the constructed HTTP request","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as a string","args":{"%class_FileHTTP% data":"The FileHTTP@ object"}},{"global":null,"name":"FileHTTP_IsValid","namefake":"IsValid","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem::HTTP","child":null,"desc":"Checks if the constructed HTTP request was valid","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as a boolean","args":{"%class_FileHTTP% data":"The FileHTTP@ object"}},{"global":null,"name":"FileHttpRequestType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of Fade Flags.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"eRequestJson":"Request a json file","eRequestText":"Request raw text data"}},{"global":null,"name":"GetArray","namefake":null,"isfunc":"true","classfunction":null,"base":"void","object":"CSchedule","ref":null,"namespace":null,"child":null,"desc":"Grabs the types as an array","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%array_string% aTypes":"The array we want to populate with our maps"}},{"global":null,"name":"GrabBool","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem","child":null,"desc":"Grabs the value from the JSON as a boolean","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as a boolean","args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strValue":"The value we should read","%string_in% strType":"[optional] The type we should read"}},{"global":null,"name":"GrabFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem","child":null,"desc":"Grabs the value from the JSON as a float","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as a float","args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strValue":"The value we should read","%string_in% strType":"[optional] The type we should read"}},{"global":null,"name":"GrabInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem","child":null,"desc":"Grabs the value from the JSON as a interger","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as a interger","args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strValue":"The value we should read","%string_in% strType":"[optional] The type we should read"}},{"global":null,"name":"GrabString","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem","child":null,"desc":"Grabs the value from the JSON as a string","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as a string","args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strValue":"The value we should read","%string_in% strType":"[optional] The type we should read"}},{"global":null,"name":"ReadBuffer_Json","namefake":"ReadBuffer","isfunc":null,"classfunction":null,"base":null,"object":"JsonValues","ref":null,"namespace":"FileSystem","child":null,"desc":"Reads json from a string buffer, and returns the info as a JsonValues@ object","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a JsonValues@ object that can be manipulated","args":{"%string_in% strBuffer":"The buffer we want to read"}},{"global":null,"name":"ReadFile_Json","namefake":"ReadFile","isfunc":null,"classfunction":null,"base":null,"object":"JsonValues","ref":null,"namespace":"FileSystem","child":null,"desc":"Reads a json file, and returns the info as a JsonValues@ object","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a JsonValues@ object that can be manipulated","args":{"%string_in% strFileName":"The file we want to search for"}},{"global":null,"name":"ReadMMDB_Json","namefake":"ReadMMDB","isfunc":null,"classfunction":null,"base":null,"object":"JsonValues","ref":null,"namespace":"FileSystem","child":null,"desc":"Reads the IP address and converts it into GeoIP information and returns the info as a JsonValues@ object","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a JsonValues@ object that can be manipulated","args":{"%string_in% strAddress":"The IPv4 Address that will be read"}},{"global":null,"name":"Write_Json","namefake":"Write","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem","child":null,"desc":"Writes the info at the specific location within the JsonValues@ object","desc_md":"true","desc_file":"FileSystem_Json_Write","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strType":"The json object we want to save our info at","%string_in% strArg":"The argument within the object","%string_in% strValue":"The value we want to save"}}]},"ASGameEvent":{"desc":"All the available events that can be used by plugins & map scripts","page":"ASGameEvent","category":"Globals","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"DumpEventStrings","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"ASGameEvent","namespace":null,"child":null,"desc":"Dumps the event contents into to a local file inside data&#47;gameevents&#47; folder.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the event dump was a success","args":{"%string% filename":"The name of the file"}},{"global":null,"name":"GetBool","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"ASGameEvent","namespace":null,"child":null,"desc":"Grabs the boolean from the event","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as boolean","args":{"%string% keyName":"Our event name","%uint64% defaultValue":"Our default value"}},{"global":null,"name":"GetFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"ASGameEvent","namespace":null,"child":null,"desc":"Grabs the float from the event","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as float","args":{"%string% keyName":"Our event name","%uint64% defaultValue":"Our default value"}},{"global":null,"name":"GetInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"ASGameEvent","namespace":null,"child":null,"desc":"Grabs the interger from the event","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as int","args":{"%string% keyName":"Our event name","%uint64% defaultValue":"Our default value"}},{"global":null,"name":"GetName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":"ASGameEvent","namespace":null,"child":null,"desc":"Grabs the name of the event","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as string","args":{}},{"global":null,"name":"GetString","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"ASGameEvent","namespace":null,"child":null,"desc":"Grabs the string from the event","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as string","args":{"%string% keyName":"Our event name","%uint64% defaultValue":"Our default value"}},{"global":null,"name":"GetUint64","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"ASGameEvent","namespace":null,"child":null,"desc":"Grabs the uint64 from the event","desc_md":null,"desc_file":null,"type":"uint64","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as uint64","args":{"%string% keyName":"Our event name","%uint64% defaultValue":"Our default value"}},{"global":null,"name":"IsEmpty","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"ASGameEvent","namespace":null,"child":null,"desc":"Checks if the keyName is empty","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the value is empty","args":{"%string% keyName":"Our event name"}},{"global":null,"name":"IsLocal","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":"ASGameEvent","namespace":null,"child":null,"desc":"Checks if this is an local event or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the event is local","args":{}},{"global":null,"name":"IsReliable","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":"ASGameEvent","namespace":null,"child":null,"desc":"Checks if this event is reliable or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the event is reliable","args":{}}]},"Forwards":{"desc":"Forwards that is ran automatically","page":"Forwards","category":"Globals","desc_md":"false","type":"void","functions":[{"global":"true","name":"OnBlowTorchUsed","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When using a weapon_torch is used, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that used said entity","%class_CBaseEntity% pEntity":"The object of the entity","%bool% timedup":"If false, the player has released the torch. If true, the torch has reached 100% on the progress bar"}},{"global":"true","name":"OnButtonTimedUsed","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When a prop_button_timed is used, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that used said entity","%class_CBaseEntity% pEntity":"The object of the entity","%bool% timedup":"If false, the player has released the button. If true, the timed button has reached 100% on the progress bar"}},{"global":"true","name":"OnButtonUsed","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When a prop_button is used, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that used said entity","%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnEntityBreak","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the entity is destroyed, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pAttacker":"The entity that attacked this entity","%string_in% strTargetname":"The targetname of the entity that got destroyed"}},{"global":"true","name":"OnEntityDamaged","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the entity is damaged, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pAttacker":"The entity that attacked this entity","%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnEntityDropped","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is dropped, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that dropped said entity","%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnEntityOutput","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the entity is sending a specific output, if the said output is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strOutput":"The output value that the output want to call","%class_CBaseEntity% pActivator":"The entity that activated the output","%class_CBaseEntity% pCaller":"The entity that called the output"}},{"global":"true","name":"OnEntityOutputParam","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the entity is sending a specific output, if the said output is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strOutput":"The output value that the output want to call","%string_in% strParamater":"The paramater of the output","%class_CBaseEntity% pActivator":"The entity that activated the output","%class_CBaseEntity% pCaller":"The entity that called the output"}},{"global":"true","name":"OnEntityPickedUp","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is picked up, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that picked up said entity","%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnEntityUsed","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is used, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that used said entity","%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnEntityWokenUp","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"However, this only applies to physics props.","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnFireGameEvent","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an event is fired, this function will then be automatically fired.","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%ASGameEvent_in% event":"The game event that was fired","%bool_in% bClientsided":"If it was meant for clients, then this will return true"}},{"global":"true","name":"OnMapInit","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the map has started","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"deprecated","infobox_desc":"Use The President&apos;s [OnMapStart][ThePresident_OnMapStart] function instead.","return":null,"args":{}},{"global":"true","name":"OnMapShutdown","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the server is shutting down, or switching maps","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"OnPluginInit","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the plugin is starting","desc_md":"false","desc_file":null,"type":"void","restrict":"plugin","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"OnPluginUnload","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the plugin is shutting down","desc_md":"false","desc_file":null,"type":"void","restrict":"plugin","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"OnProcessRound","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Called each frame (when there are players present)","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"OnSequenceFired","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When a .seq script file is firing its #ascall command","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szValue":"The value that was fired from the "}},{"global":"true","name":"OnUserInterface","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an UI event is fired from prop_button_interact","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that sent this UI interface trigger","%UIType_t% type":"The type of the UI trigger that was sent","%string_in% key":"The keyname of the event","%string_in% value":"The value of the event"}},{"global":"true","name":"OnWeaponPickup","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When a weapon gets picked up","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that picked up said weapon","%class_CTerrorWeapon% pWeapon":"The object of the weapon"}},{"global":"true","name":"PreLevelInit","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Get&apos;s executed before the map has initialized. Used for custom gamemode registration.","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnCampaignFinished","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the players complete&apos;s the campaign","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnLastRound","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When we are on the last round","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnMapEnd","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the map has ended","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnMapStart","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the map has begun","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnRoundEnd","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the round has ended","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnRoundStart","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the round has begun","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnWaveCompleted","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the wave has been completed on Flatline","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnWaveFailed","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the wave has failed on Flatline","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnWaveStart","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the wave has just begun on Flatline","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}}]}},"NextBot":{"INextBotReply":{"desc":"Manipulates the INextBotReply object entity, and it's values.","page":"INextBotReply","category":"NextBot","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"FailureReason","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of FailureReason.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"DENIED":"null","INTERRUPTED":"null","FAILED":"null"}}]},"Path":{"desc":"Manipulates the Path object entity, and it's values.","page":"Path","category":"NextBot","restrict":"server","desc_md":"false","type":"void","functions":[]},"IVision":{"desc":"Manipulates the IVision object entity, and it's values.","page":"IVision","category":"NextBot","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"FieldOfViewCheckType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of FieldOfViewCheckType.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"USE_FOV":"null","DISREGARD_FOV":"null"}},{"global":null,"name":"GetClosestRecognized","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Get the closest recognized entity","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%int_in% team":"The team we want to check"}},{"global":null,"name":"GetDefaultFieldOfView","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the default FOV","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the default FOV","args":{}},{"global":null,"name":"GetFieldOfView","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current FOV","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current FOV","args":{}},{"global":null,"name":"GetMaxVisionRange","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The maximum distance vision can reach","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a float value","args":{}},{"global":null,"name":"GetMinRecognizeTime","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The VISUAL reaction time","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a float value","args":{}},{"global":null,"name":"GetPrimaryRecognizedThreat","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Get the biggest threat we are aware of","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"GetRecognizedCount","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The number of actors on the given team visible to us closer than rangeLimit","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns interger value","args":{"%int_in% team":"The team we want to check","%float_in% rangeLimit":"The range limit"}},{"global":null,"name":"GetTimeSinceVisible","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The time since we saw any member of the given team","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a float value","args":{"%int_in% team":"The team we want to check"}},{"global":null,"name":"IsAbleToSee","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we can see the subject","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we can see them","args":{"%class_CBaseEntity% subject":"Our subject","%enum_FieldOfViewCheckType% checkFOV":"FOV type"}},{"global":null,"name":"IsAbleToSeePos","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we can see the vector position","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we can see the position","args":{"%Vector% visibleSpot":"Our vector position","%enum_FieldOfViewCheckType% checkFOV":"FOV type"}},{"global":null,"name":"IsEntityInFieldOfView","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if our subject is within our field of view","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the subject is in our field of view","args":{"%class_CBaseEntity% subject":"Our subject"}},{"global":null,"name":"IsIgnored","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we completely ignore this entity","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true to completely ignore this entity","args":{"%class_CBaseEntity% subject":"Our subject"}},{"global":null,"name":"IsInFieldOfView","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if our vector position is within our field of view","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the vector position is in our field of view","args":{"%Vector% pos":"Our vector position"}},{"global":null,"name":"IsInFieldOfViewIgnoreZ","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if our vector X Y position is within our field of view.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the vector X Y position is in our field of view","args":{"%Vector% pos":"Our vector position"}},{"global":null,"name":"IsLineOfSightClear","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if our line of sight is clear","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the ray to the given point is unobstructed","args":{"%Vector% visibleSpot":"Our vector position"}},{"global":null,"name":"IsLineOfSightClearToEntity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if our line of sight is clear","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the ray to the given point is unobstructed","args":{"%class_CBaseEntity% subject":"Our subject"}},{"global":null,"name":"IsLookingAt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we are looking at the given position","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we are looking at the given position","args":{"%class_CBaseEntity% subject":"Our subject","%float_in% cosTolerance":"The tolerance limit"}},{"global":null,"name":"IsLookingAtCharacter","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we are looking at the given actor","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we are looking at the given actor","args":{"%class_CBaseCombatCharacter% actor":"Our actor","%float_in% cosTolerance":"The tolerance limit"}},{"global":null,"name":"IsNoticed","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we &apos;notice&apos; the subject, even if we have clear LOS","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we 'notice' the subject, even if we have clear LOS","args":{"%class_CBaseEntity% subject":"Our subject"}},{"global":null,"name":"SetFieldOfView","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets our FOV","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% horizAngle":"The horizontal angle we want our FOV to take"}}]},"IBody":{"desc":"Manipulates the IBody object entity, and it's values.","page":"IBody","category":"NextBot","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"ActivityType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of ActivityType.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"MOTION_CONTROLLED_XY":"XY position and orientation of the bot is driven by the animation.","MOTION_CONTROLLED_Z":"Z position of the bot is driven by the animation.","ACTIVITY_UNINTERRUPTIBLE":"activity can&apos;t be changed until animation finishes","ACTIVITY_TRANSITORY":"a short animation that takes over from the underlying animation momentarily, resuming it upon completion","ENTINDEX_PLAYBACK_RATE":"played back at different rates based on entindex"}},{"global":null,"name":"AimHeadTowards","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Aim the bot&apos;s head towards the given goal","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% lookAtPos":"null","%enum_LookAtPriorityType% priority":"null","%float_in% duration":"null","%class_INextBotReply% replyWhenAimed":"null","%string_in% reason":"null","%bool% bWaitForSteady":"null","%float_in% flEaseInTime":"null"}},{"global":null,"name":"AimHeadTowardsEntity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Continually aim the bot&apos;s head towards the given subject","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% subject":"null","%enum_LookAtPriorityType% priority":"null","%float_in% duration":"null","%class_INextBotReply% replyWhenAimed":"null","%string_in% reason":"null","%bool% bWaitForSteady":"null","%float_in% flEaseInTime":"null"}},{"global":null,"name":"ArousalType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of ArousalType.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"NEUTRAL":"null","ALERT":"null","INTENSE":"null"}},{"global":null,"name":"GetActivity","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current animation activity","desc_md":null,"desc_file":null,"type":"Activity","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns currently animating activity","args":{}},{"global":null,"name":"GetActualPosture","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current actual posture","desc_md":null,"desc_file":null,"type":"PostureType","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns body's current actual posture","args":{}},{"global":null,"name":"GetArousal","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the arousal level","desc_md":null,"desc_file":null,"type":"ArousalType","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the arousal level","args":{}},{"global":null,"name":"GetCrouchHullHeight","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the height of bot&apos;s collision hull when crouched","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns height of bot's collision hull when crouched","args":{}},{"global":null,"name":"GetDesiredPosture","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the desired posture","desc_md":null,"desc_file":null,"type":"PostureType","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Gets posture body is trying to assume","args":{}},{"global":null,"name":"GetEntity","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the bot&apos;s entity object","desc_md":null,"desc_file":null,"type":"CBaseEntity","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"GetEyePosition","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the eye position of the IBody","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a Vector of the IBody eye position","args":{}},{"global":null,"name":"GetHeadSteadyDuration","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the time duration of bot&apos;s head","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the duration that the bot's head has not been rotating","args":{}},{"global":null,"name":"GetHullHeight","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the height of bot&apos;s current collision hull based on posture","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns height of bot's current collision hull based on posture","args":{}},{"global":null,"name":"GetHullMaxs","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the maximum vector of the collision hull","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns current collision hull maximums based on actual body posture","args":{}},{"global":null,"name":"GetHullMins","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the minimum vector of the collision hull","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns current collision hull minimums based on actual body posture","args":{}},{"global":null,"name":"GetHullWidth","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs width of bot&apos;s collision hull in XY plane","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns width of bot's collision hull in XY plane","args":{}},{"global":null,"name":"GetMaxHeadAngularVelocity","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the max turn rate of the head","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns max turn rate of head in degrees/second","args":{}},{"global":null,"name":"GetSolidMask","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the collision mask","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the bot's collision mask","args":{}},{"global":null,"name":"GetStandHullHeight","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the height of bot&apos;s collision hull when standing","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns height of bot's collision hull when standing","args":{}},{"global":null,"name":"GetViewVector","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the view vector of the IBody","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a Vector of the IBody view vector","args":{}},{"global":null,"name":"HasActivityType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the current activity has the flag enabled","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if currently animating activity has any of the given flags","args":{"%int_in% flags":"Activity flag"}},{"global":null,"name":"IsActivity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the given activity is the current active one","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if currently animating activity matches the given one","args":{"%enum_Activity% act":"Our activity of choice"}},{"global":null,"name":"IsActualPosture","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we are in a certain posture","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if body is actually in the given posture","args":{}},{"global":null,"name":"IsArousal","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks the arousal level","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if body is at this arousal level","args":{"%enum_ArousalType% arousal":"Arousal Type"}},{"global":null,"name":"IsDesiredPosture","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the bot is in our specified desired posture","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if body is trying to assume this posture","args":{"%enum_PostureType% posture":"Our posture of choice"}},{"global":null,"name":"IsHeadAimingOnTarget","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the bot is aiming on a target or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the bot's head has achieved its most recent lookat target","args":{}},{"global":null,"name":"IsHeadSteady","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the head is not turning","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if head is not rapidly turning to look somewhere else","args":{}},{"global":null,"name":"IsInDesiredPosture","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the bot is in our desired posture","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if body's actual posture matches its desired posture","args":{}},{"global":null,"name":"IsPostureChanging","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the body posture is currently changing","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if body's posture is in the process of changing to new posture","args":{}},{"global":null,"name":"IsPostureMobile","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the body is allowed to move around","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if body's current posture allows it to move around the world","args":{}},{"global":null,"name":"LookAtPriorityType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of LookAtPriorityType.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"BORING":"null","INTERESTING":"null","IMPORTANT":"null","CRITICAL":"null","MANDATORY":"null"}},{"global":null,"name":"PostureType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of PostureType.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"STAND":"null","CROUCH":"null","SIT":"null","CRAWL":"null","LIE":"null"}},{"global":null,"name":"SelectAnimationSequence","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Given an Activity, select and return a specific animation sequence within it","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the animation sequence number","args":{"%enum_Activity% act":"Our activity of choice"}},{"global":null,"name":"SetArousal","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the arousal level","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ArousalType% arousal":"Arousal Type"}},{"global":null,"name":"SetDesiredPosture","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets our desired posture","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_PostureType% posture":"Our posture of choice"}},{"global":null,"name":"StartActivity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Begin an animation activity, return false if we cant do that right now.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we are able to start the activity","args":{"%enum_Activity% act":"Our activity of choice","%int_in% flags":"Activity flag"}}]},"ILocomotion":{"desc":"Manipulates the ILocomotion object entity, and it's values.","page":"ILocomotion","category":"NextBot","restrict":"server","desc_md":"false","type":"void","functions":[]},"IIntention":{"desc":"Manipulates the IIntention object entity, and it's values.","page":"IIntention","category":"NextBot","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"QueryResultType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of QueryResultType.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"ANSWER_NO":"null","ANSWER_YES":"null","ANSWER_UNDEFINED":"null"}}]},"INextBot":{"desc":"Manipulates the INextBot object entity, and it's values.","page":"INextBot","category":"NextBot","restrict":"server","desc_md":"false","type":"void","functions":[]}},"Utilities":{"Math":{"desc":"Used to make simple to complex math related equations.","page":"Math","category":"Utilities","type":"namespace","functions":[{"global":null,"name":"AngleMod","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gets the angle modulation","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the angle","args":{"%float_in% flAngle":"Our angle input"}},{"global":null,"name":"clamp","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Clamps the value, so it doesn&apos;t go beyond the min or max value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"This value also allows for uint64, int64, int, float and double values.","return":null,"args":{"%int_in% iValue":"Our raw input value","%int_in% iMin":"The min value it can reach","%int_in% iMax":"The max value it can reach"}},{"global":null,"name":"max","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Clamps the maximum value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"This value also allows for uint64, int64, int, float and double values.","return":null,"args":{"%int_in% iClamp":"The max value it can reach","%int_in% iValue":"Our raw input value"}},{"global":null,"name":"min","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Clamps the minimum value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"This value also allows for uint64, int64, int, float and double values.","return":null,"args":{"%int_in% iValue":"Our raw input value","%int_in% iClamp":"The min value it can reach"}},{"global":null,"name":"RandomFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Randomizes the float value.","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the randomized float value","args":{"%float_in% flLow":"The lowest value it can reach","%float_in% flHigh":"The highest value it can reach"}},{"global":null,"name":"RandomInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Randomizes the interger value.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the randomized interger value","args":{"%int_in% iLow":"The lowest value it can reach","%int_in% iHigh":"The highest value it can reach"}}]},"Color":{"desc":"Class used for color related purposes.","page":"Color","category":"Utilities","desc_md":"false","type":"class","functions":[{"global":null,"name":"a","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Grabs the alpha value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the alpha value (0-255)","args":{}},{"global":null,"name":"b","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Grabs the blue color value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the color value (0-255)","args":{}},{"global":null,"name":"Color","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a Color class.","desc_md":"true","desc_file":"Color_Construct","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Color class which can be manipulated","args":{"%int% r":"Sets the red color","%int% g":"Sets the green color","%int% b":"Sets the blue color"}},{"global":null,"name":"DestroyColor","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Destroys the color","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"g","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Grabs the green color value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the color value (0-255)","args":{}},{"global":null,"name":"r","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Grabs the red color value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the color value (0-255)","args":{}},{"global":null,"name":"ToHEX","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Grabs the color code in HEX format","desc_md":"true","desc_file":"Color_ToHEX","type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the HEX value of the color code","args":{}},{"global":null,"name":"ToRGB","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Converts HEX color to RGB","desc_md":null,"desc_file":null,"type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Color class which can be manipulated","args":{"%string_in% szHexColor":"Our HEX value"}}]},"ClientUtils":{"desc":"Commonly used utility functions for client scripts","page":"ClientUtils","category":"Utilities","restrict":"client","type":"void","functions":[{"global":null,"name":"ASHUDDrawState","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of HUD Draw States","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"k_eDrawHealth":"null","k_eDrawSprint":"null","k_eDrawAmmo":"null","k_eDrawWeaponSlots":"null","k_eDrawKillFeed":"null","k_eDrawTargetID":"null"}},{"global":"false","name":"DrawDefaultHUD","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Tells what kind of HUD we want to draw","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool% bEnabled":"Should we render this default HUD class?","%enum_ASHUDDrawState% eDrawState":"The HUD we want to enable&#47;disable"}},{"global":"false","name":"UseCampaignScoreBoard","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Tells the HUD if we should use the campaign scoreboard, or the default one","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool% bEnabled":"Should we use the campaign scoreboard instead of the default one?"}}]},"CPresidentialCandidate":{"desc":"Create's custom gamemodes","page":"CPresidentialCandidate","category":"Utilities","restrict":"server","type":"class","functions":[{"global":null,"name":"LimitTypes","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of LimitTypes.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"k_eLimit_None":"null","k_eLimit_Sidearm":"null","k_eLimit_Machinegun":"null","k_eLimit_PowerWeapon":"null","k_eLimit_HealthItem":"null"}},{"global":null,"name":"RandomSpawnWeapon","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The spawn information for GiveWeaponToSurvivor function","desc_md":"true","desc_file":"RandomSpawnWeapon","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}}]},"Menu":{"desc":"Commonly used utility functions","page":"Menu","category":"Utilities","restrict":"server","type":"class","functions":[{"global":null,"name":"AddItem","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Menu","desc":"Adds a new item for our menu","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the item was added successfully","args":{"%string_in% szTitle":"The name of the item","%bool% bPrintError = false":"If true, it will print any errors that may occur"}},{"global":null,"name":"DestroyMenu","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Menu","desc":"Destroys the Menu","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Display","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Menu","desc":"Displays the menu for our clients.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The client we want this menu to draw for. If null, it will draw for everyone","%int% iDisplayTime":"How long we should draw the menu. -1 to draw infinitly."}},{"global":null,"name":"Menu","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Creates a SourceMod styled menu.","desc_md":"true","desc_file":"Menu","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a Menu class, which can be manipulated.","args":{}},{"global":null,"name":"SetBack","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Menu","desc":"Adds a &quot;Back&quot; item value","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool% state":"If true, it will override slot 8 with the text &quot;Back&quot;"}},{"global":null,"name":"SetExit","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Menu","desc":"Adds a &quot;Exit&quot; item value","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool% state":"If true, it will override slot 8","%string_in% szID":"The text we want to use for slot 8"}},{"global":null,"name":"SetID","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Menu","desc":"Applies a new ID for the menu.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szID":"The new ID we want to use"}},{"global":null,"name":"SetNext","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Menu","desc":"Adds a &quot;Next&quot; item value","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool% state":"If true, it will override slot 9 with the text &quot;Next&quot;"}},{"global":null,"name":"SetTitle","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Menu","desc":"Applies a title for the menu.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szTitle":"Our title we want to draw for our menu"}}]},"Vector":{"desc":"Commonly used utility functions","page":"Vector","category":"Utilities","type":"class","functions":[{"global":null,"name":"DestructVector","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Destroys the Vector","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Length","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Grabs the length of the Vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the length of our Vector","args":{}},{"global":null,"name":"Length2D","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Grabs the length of the Vector (Same as Vector2D)","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the length of our Vector in 2D","args":{}},{"global":null,"name":"Normalized","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Normalizes the Vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector class which can be manipulated","args":{}},{"global":null,"name":"opEquals","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Checks if the vectors are the same","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if both Vectors are the same","args":{"%Vector_in% other":"The Vector we want to check"}},{"global":null,"name":"Vector","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a Vector class.","desc_md":"true","desc_file":"Vector_Construct","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector class which can be manipulated","args":{"%float% x":"Sets the x vector","%float% y":"Sets the y vector","%float% z":"Sets the z vector"}},{"global":null,"name":"x","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Grabs the x vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the X vector","args":{}},{"global":null,"name":"y","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Grabs the y vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Y vector","args":{}},{"global":null,"name":"z","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Grabs the z vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Z vector","args":{}},{"global":null,"name":"Zero","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Resets the Vector back to 0,0,0","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}}]},"UserMessage":{"desc":"Commonly used to send messages to the client","page":"UserMessage","category":"Utilities","restrict":"server","type":"void","functions":[{"global":null,"name":"Begin","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Begins the user message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"If null, the message will be sent to all players","%string_in% szMessage":"The message we want to use"}},{"global":null,"name":"End","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sends the user message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"WriteBool","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a boolean to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% data":"Our message data"}},{"global":null,"name":"WriteByte","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a byte to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% data":"Our message data"}},{"global":null,"name":"WriteCord","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a cord to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% data":"Our message data"}},{"global":null,"name":"WriteEHandle","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a entity handle to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% data":"Our message data"}},{"global":null,"name":"WriteEntity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a entity index to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% data":"Our message data"}},{"global":null,"name":"WriteFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a float to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% data":"Our message data"}},{"global":null,"name":"WriteIntLong","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a long with bytes to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% data":"Our message data","%int_in% numbit":"Our data byte size"}},{"global":null,"name":"WriteLong","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a long to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% data":"Our message data"}},{"global":null,"name":"WriteQAngle","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a QAngle to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%QAngle% data":"Our message data"}},{"global":null,"name":"WriteShort","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a short to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% data":"Our message data"}},{"global":null,"name":"WriteString","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a string to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% data":"Our message data"}},{"global":null,"name":"WriteUIntLong","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes an unsigned long with bytes to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%uint_in% data":"Our message data","%int_in% numbit":"Our data byte size"}},{"global":null,"name":"WriteVectorCord","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a Vector to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% data":"Our message data"}},{"global":null,"name":"WriteVectorInter","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a Vector to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% data":"Our message data"}},{"global":null,"name":"WriteVectorNorm","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Writes a Vector to the message","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% data":"Our message data"}}]},"Chat":{"desc":"Class used for chat related purposes.","page":"Chat","category":"Utilities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"CenterMessage","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message on the center of the screen.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ChatTeam% iChatType":"Determines which team this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"CenterMessagePlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message on the center of the screen.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBasePlayer% pPlayer":"Determines which player this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"ChatTeam","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of team chat.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"all":"Will display the message to all players","survivor":"Will display the message to the survivor team only","zombie":"Will display the message to the zombie team only"}},{"global":null,"name":"HintMessage","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a hint message that will be shown at the top of the screen.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ChatTeam% iChatType":"Determines which team this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"HintMessagePlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a hint message that will be shown at the top of the screen.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBasePlayer% pPlayer":"Determines which player this will be displayed to","%string_in% strMsg":"The message that will be displayed","%Color_in% cClrCords":"The color of the message"}},{"global":null,"name":"PrintToChat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message to the chat.","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ChatTeam% iChatType":"Determines which team this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"PrintToChatPlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message to the chat.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"deprecated","infobox_desc":"Use [PrintToChat][PrintToChat] function instead.","return":null,"args":{"%class_CBasePlayer% pPlayer":"Determines which player this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"PrintToConsole","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message to the client&apos;s console.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ChatTeam% iChatType":"Determines which team this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"PrintToConsolePlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message to the client&apos;s console.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBasePlayer% pPlayer":"Determines which player this will be displayed to","%string_in% strMsg":"The message that will be displayed"}}]},"Vector2D":{"desc":"Commonly used utility functions","page":"Vector2D","category":"Utilities","type":"class","functions":[{"global":null,"name":"DestructVector2D","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Destroys the Vector2D","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Length","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Grabs the length of the 2D Vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the length of our 2D Vector","args":{}},{"global":null,"name":"NormalizeInPlace","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Normalizes the 2D Vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector2D class which can be manipulated","args":{}},{"global":null,"name":"opEquals","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Checks if the Vector2D vectors are the same","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if both Vector2Ds are the same","args":{"%Vector2D_in% other":"The 2D Vector we want to check"}},{"global":null,"name":"Vector2D","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a Vector2D class.","desc_md":"true","desc_file":"Vector2D_Construct","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector2D class which can be manipulated","args":{"%float% x":"Sets the x vector","%float% y":"Sets the y vector"}},{"global":null,"name":"x","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Grabs the x vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the X vector","args":{}},{"global":null,"name":"y","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Grabs the y vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Y vector","args":{}}]},"Plugin Interface":{"desc":"Class used for plugin interface related purposes.","page":"Plugin Interface","category":"Utilities","restrict":"plugin_shared","desc_md":"false","type":"void","functions":[{"global":null,"name":"IsLoaded","namefake":null,"isfunc":null,"classfunction":null,"base":"bool","object":null,"ref":null,"namespace":"PluginData","child":null,"desc":"Checks if said plugin is loaded","desc_md":null,"desc_file":null,"type":"namespace","restrict":"plugin_shared","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"The name of the plugin file"}},{"global":null,"name":"SetAuthor","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"PluginData","child":null,"desc":"Overrides the author of the plugin","desc_md":null,"desc_file":null,"type":"namespace","restrict":"plugin_shared","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"The author of the plguin"}},{"global":null,"name":"SetName","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"PluginData","child":null,"desc":"Overrides the name of the plugin","desc_md":null,"desc_file":null,"type":"namespace","restrict":"plugin_shared","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"The name of the plguin"}},{"global":null,"name":"SetVersion","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"PluginData","child":null,"desc":"Overrides the version of the plugin","desc_md":null,"desc_file":null,"type":"namespace","restrict":"plugin_shared","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"The version of the plguin"}}]},"Plugin Network":{"desc":"Class used for plugin networking related purposes.","page":"Plugin Network","category":"Utilities","restrict":"server","desc_md":"false","type":"void","functions":[{"global":null,"name":"CallFunction","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"Network","child":null,"desc":"Calls a specified function","desc_md":"true","desc_file":"Network_CallFunction","type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"Our network value","%NetData_in% data":"Our network data"}},{"global":null,"name":"Create","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":"Network","child":null,"desc":"Creates a new network, if it already doesn&apos;t exist. If it already exists, it will simply grab it.","desc_md":"true","desc_file":"Network_Create","type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CNetworked@ class which can be manipulated","args":{"%string_in% strNetwork":"Our new network","%bool% bDestroyOnMapChange":"If true, It will destroy the network when the map changes"}},{"global":null,"name":"Destroy","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"Network","child":null,"desc":"Destroys our networked value","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strNetwork":"Our network"}},{"global":null,"name":"DestroyNetData","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Destroys the NetData","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Dump","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"Network","child":null,"desc":"Dumps the information from our networked object","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CNetworked% pNetwork":"Our networked object"}},{"global":null,"name":"Get","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":"Network","child":null,"desc":"Grabs a CNetworked@ object","desc_md":"true","desc_file":"Network_Get","type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CNetworked@ class which can be manipulated","args":{"%string_in% strNetwork":"Our network"}},{"global":null,"name":"GetInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Grabs the interger from the index value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as int","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"GetInt_NetObject","namefake":"GetInt","isfunc":null,"classfunction":null,"base":null,"object":"NetObject","ref":null,"namespace":null,"child":null,"desc":"Grabs the interger from the index value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as int","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"GetNetworkName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Grabs the the networked name","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the network name","args":{}},{"global":null,"name":"GetString","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Grabs the string from the index value","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as string","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"GetString_NetObject","namefake":"GetString","isfunc":null,"classfunction":null,"base":null,"object":"NetObject","ref":null,"namespace":null,"child":null,"desc":"Grabs the string from the index value","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as string","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"GetUint64","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Grabs the uint64 from the index value","desc_md":null,"desc_file":null,"type":"uint64","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as uint64","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"GetUint64_NetObject","namefake":"GetUint64","isfunc":null,"classfunction":null,"base":null,"object":"NetObject","ref":null,"namespace":null,"child":null,"desc":"Grabs the uint64 from the index value","desc_md":null,"desc_file":null,"type":"uint64","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as uint64","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"HasIndexValue","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Checks if the index value is valid","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the index value exist","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"HasIndexValue_NetObject","namefake":"HasIndexValue","isfunc":null,"classfunction":null,"base":null,"object":"NetObject","ref":null,"namespace":null,"child":null,"desc":"Checks if the index value is valid","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the index value exist","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"NetData","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Constructs a NetData class.","desc_md":null,"desc_file":null,"type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns NetData class which can be manipulated","args":{}},{"global":null,"name":"Network_GetBool","namefake":"GetBool","isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Grabs the boolean from the networked value","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the boolean of the networked value","args":{"%string_in% strValue":"Our networked value"}},{"global":null,"name":"Network_GetFloat","namefake":"GetFloat","isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Grabs the float from the networked value","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the float of the networked value","args":{"%string_in% strValue":"Our networked value"}},{"global":null,"name":"Network_GetInt","namefake":"GetInt","isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Grabs the interger from the networked value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the interger of the networked value","args":{"%string_in% strValue":"Our networked value"}},{"global":null,"name":"Network_GetString","namefake":"GetString","isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Grabs the string from the networked value","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the string of the networked value","args":{"%string_in% strValue":"Our networked value"}},{"global":null,"name":"Save","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Saves the value into our network","desc_md":"true","desc_file":"Network_Example","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"Our network value","%string_in% strInput":"Our network input"}},{"global":null,"name":"Write","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Writes the data to the NetData","desc_md":"true","desc_file":"NetData_Write","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% value":"Our input value"}}]},"Utils":{"desc":"Commonly used utility functions","page":"Utils","category":"Utilities","restrict":"server","type":"void","functions":[{"global":null,"name":"ApplyMultiDamage","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Applies MultiDamage from TraceAttack","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"ASVoteItem","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Contains vote item information","desc_md":"true","desc_file":"ASVoteItem","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"BotDifficultyType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration for bot fifficulty levels","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"BOT_EASY":"null","BOT_NORMAL":"null","BOT_HARD":"null","BOT_EXPERT":"null","NUM_DIFFICULTY_LEVELS":"null"}},{"global":null,"name":"ClearMultiDamage","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Clears multi damage","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"false","name":"CollectInfected","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Collects all zombies on the map","desc_md":"true","desc_file":null,"type":"array_int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns an object array","args":{}},{"global":"false","name":"CollectPlayers","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Collects all players on the map","desc_md":"true","desc_file":null,"type":"array_int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns an object array","args":{}},{"global":"false","name":"CollectSurvivors","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Collects all survivor npcs on the map","desc_md":"true","desc_file":null,"type":"array_int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns an object array","args":{}},{"global":"false","name":"ColorToHex","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts the color into HEX","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Color_in% clr":"The color we want to convert to HEX","%int_out% iHex":"The color in HEX"}},{"global":null,"name":"Convert","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts a player&apos;s SteamID to another ID format, such as SteamID32, 64 or SteamID3.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the specified converted SteamID of choice.","args":{"%enum_SteamIDFormat% iFormat":"SteamID format type","%string_in% strSteamID":"The SteamID it should convert"}},{"global":null,"name":"CosmeticRemove","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Removes the cosmetic model from the player, if they have that specific model applied on them.","desc_md":"true","desc_file":"CosmeticHelp","type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we found the model we want to remove","args":{"%class_CZP_Player% pPlayer":"The player that should wear it","%string_in% strModel":"The model of the cosmetic"}},{"global":null,"name":"CosmeticWear","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds a cosmetic model on the player model (will auto merge with the bones, if the model contains the specific bones, if not, it will be merged with the &quot;root&quot; bone instead on the player. (pelvis)","desc_md":"true","desc_file":"CosmeticHelp","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that should wear it","%string_in% strModel":"The model of the cosmetic"}},{"global":null,"name":"CreateBeam","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Creates a laser beam (visual only)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The entity we want to apply this to","%string% strTexture":"The texture we want to use. If empty, it will use &quot;sprites&#47;laserbeam.vmt&quot;","%string% strAttachment":"The attachment we want to start from. Can be empty if there is none","%Vector% vEndPoint":"The end point where the beam should point at","%Color% cColor":"The color of the texture (if using grayscale textures)","%float% flWidth":"The width of the texture","%float% flScrollRate":"The rate of which the texture should scroll","%float% iBrightness":"The brightness of the texture"}},{"global":null,"name":"CreateBeamRingPoint","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Creates a beam ring point (visual only)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float% flDelay":"When the message should be sent to the clients","%Vector% vOrigin":"The origin point where the ring should be created","%Color% cColor":"The color of the ring","%float% flStart":"Start radius","%float% flEnd":"End radius","%int% iModelIndex":"The index of the precached beam texture","%int% iHaloIndex":"The index of the precached halo texture","%int% iStartFrame":"Start frame for the beam texture","%int% iFrameRate":"The framerate for the beam texture","%float% flLife":"Lifetime for the ring","%float% flStartWidth":"The start width for the ring","%float% flEndWidth":"The end width for the ring","%float% flAmplitude":"Amplitude of the ring","%int% iSpeed":"The speed of the ring","%int% iFlags":"Flags for the ring"}},{"global":null,"name":"CrescendoEvent","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Creates a crescendo event","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%CrescendoEventType_in% event":"The crescendo event object"}},{"global":null,"name":"DestroyCrescendoEvent","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Destroys the specified crescendo event","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% event_id":"The event ID we want to destroy"}},{"global":null,"name":"EnvExplosion","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Cause an explosions","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% vecOrigin":"The place where we want the explosion to occur at","%float_in% flDamage":"The amount of damage we want to cause","%float_in% flRange":"The range of this blast [Optional]"}},{"global":null,"name":"EscapeCharacters","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Escapes the characters in a string.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the escape characters.","args":{"%string_in% strValue":"Our raw string input"}},{"global":null,"name":"FadeFlag_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of Fade Flags.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"fade_in":"Fade in","fade_out":"Fade out (not in)","fade_modulate":"Modulate (don&apos;t blend)","fade_stayout":"ignores the duration, stays faded out until new ScreenFade message received","fade_purge":"Purges all other fades, replacing them with this one"}},{"global":null,"name":"FakeRecoil","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gives the player fake recoil","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that should get fake recoil","%float% FlKick":"How much should the recoil kick?","%float% flDamp":"Damps the kick, higher the value, easier it is to control","%float% flX":"How wide should the recoil go?","%float% flY":"How high should the recoil go?","%bool% bLeftPattern":"If true, the recoil will head to the left, instead of right"}},{"global":"true","name":"FindEntityByClassname","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding classname.","desc_md":"true","desc_file":"Util_FindEntityByClassname","type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% strClassname":"The specified classname it should search for"}},{"global":"true","name":"FindEntityByClassnameFast","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding classname.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"This function does not support wildcards.","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% strClassname":"The specified classname it should search for"}},{"global":"true","name":"FindEntityByClassnameNearest","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding classname.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%string_in% szName":"The specified string it should search for","%Vector_in% vecSrc":"The cordinates where we should search from","%float_in% flRadius":"The size of our search sphere"}},{"global":"true","name":"FindEntityByClassnameNearest2D","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding classname.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%string_in% szName":"The specified string it should search for","%Vector_in% vecSrc":"The cordinates where we should search from","%float_in% flRadius":"The size of our search sphere"}},{"global":"true","name":"FindEntityByClassnameNearestFast","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding classname.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"This function does not support wildcards.","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%string_in% szName":"The specified string it should search for","%Vector_in% vecSrc":"The cordinates where we should search from","%float_in% flRadius":"The size of our search sphere"}},{"global":"true","name":"FindEntityByClassnameWithin","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding classname.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% szName":"The specified string it should search for","%Vector_in% vecSrc":"The cordinates where we should search from","%float_in% flRadius":"The size of our search sphere"}},{"global":"true","name":"FindEntityByClassnameWithinBBOX","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding classname.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% szName":"The specified string it should search for","%Vector_in% vecMin":"The cordinates where we should search from (Min Vector BBOX)","%Vector_in% vecMax":"The cordinates where we should search from (Max Vector BBOX)"}},{"global":"true","name":"FindEntityByEntIndex","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding index.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%int_in% entindex":"The specific entity by index"}},{"global":"true","name":"FindEntityByModel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding model name.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% szName":"The specified model it should search for"}},{"global":"true","name":"FindEntityByName","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding name.","desc_md":"true","desc_file":"Util_FindEntityByName","type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% strClassname":"The specified entity name it should search for"}},{"global":"true","name":"FindEntityByNameFast","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding classname.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"This function does not support wildcards.","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% strName":"The specified classname it should search for"}},{"global":"true","name":"FindEntityByNameNearest","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding name.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%string_in% szName":"The specified string it should search for","%Vector_in% vecSrc":"The cordinates where we should search from","%float_in% flRadius":"The size of our search sphere"}},{"global":"true","name":"FindEntityByNameWithin","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding name.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% szName":"The specified string it should search for","%Vector_in% vecSrc":"The cordinates where we should search from","%float_in% flRadius":"The size of our search sphere"}},{"global":"true","name":"FindEntityByOutputTarget","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding output target.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% szName":"The specified string it should search for"}},{"global":"true","name":"FindEntityByTarget","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding targetname.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% strTargetName":"The specified targetname it should search for"}},{"global":null,"name":"FindEntityInSphere","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs all entities from a specific location. Does a simple sphere trace","desc_md":null,"desc_file":null,"type":"array_int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns an object array","args":{"%Vector_in% vOrigin":"The origin where we should do the sphere trace at","%float_in% flSize":"The size of our sphere"}},{"global":null,"name":"FloatToInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts the float to a interger value.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the specified value as a interger.","args":{"%float_in% flValue":"Our float to input"}},{"global":"true","name":"FromUserID","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CTerrorPlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs the player entity by their userid.","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CTerrorPlayer@ object, which can be manipulated.","args":{"%int_in% userid":"The player&apos;s UserID"}},{"global":null,"name":"GameText","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a hud message for all players","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strMessage":"The message for the game text","%HudTextParams_in% params":"The params for the game text"}},{"global":null,"name":"GameTextPlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a hud message for the specific player","desc_md":"true","desc_file":"GameTextPlayer","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player it should display the message for","%string_in% strMessage":"The message for the game text","%HudTextParams_in% params":"The params for the game text"}},{"global":"true","name":"GetBotProfile","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"BotProfile","ref":null,"namespace":null,"child":null,"desc":"Grabs a bot profile.","desc_md":"true","desc_file":"GetBotProfile","type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a ASBotProfile@ object, which can be manipulated.","args":{"%int% id":"The ID of the bot profile we want to grab"}},{"global":"false","name":"GetBotProfiles","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grab the amounts of bot profiles currently available.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the amount of available bot profiles.","args":{}},{"global":null,"name":"GetCosmeticWear","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Removes the cosmetic model from the player, if they have that specific model applied on them.","desc_md":"true","desc_file":"CosmeticHelp","type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we found the model we want to remove","args":{"%class_CZP_Player% pPlayer":"The player that wears it","%string_in% strModel":"The model of the cosmetic"}},{"global":null,"name":"GetDifficulty","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current difficulty","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current difficulty","args":{}},{"global":null,"name":"GetNumPlayers","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the amount of players.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the amount of players of said team","args":{"%bool_in% bAlive":"If true, it will only check for alive players"}},{"global":"true","name":"GetPlayerByName","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CTerrorPlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs the player entity by name.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CTerrorPlayer@ object, which can be manipulated.","args":{"%string_in% strValue":"Our player name, index or just their userid.","%bool_in% bSpecific":"If true, it will try to make sure to find the player by the exact name, index or userid."}},{"global":"true","name":"GetPlayerBySteamID","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CTerrorPlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs the player entity by SteamID32.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CTerrorPlayer@ object, which can be manipulated.","args":{"%string_in% strSteamID":"SteamID32"}},{"global":"true","name":"GetRandomPlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CTerrorPlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs a random player from the specified team, and if it should search for alive players only.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CTerrorPlayer@ object, which can be manipulated.","args":{"%bool_in% bZombieTeam":"If true, it will grab a random player on the zombie team","%bool_in% bAlive":"If true, it will only check for alive players"}},{"global":null,"name":"GetServerIP","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the IP Address of the server.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the IP Address of the server","args":{}},{"global":"true","name":"GetWeaponFromSlot","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CTerrorWeapon","ref":null,"namespace":null,"child":null,"desc":"Grabs the weapon from a player slot","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CTerrorWeapon@ object, which can be manipulated.","args":{"%class_CTerrorPlayer% pTerror":"The specified player it should check","%int_in% iSlot":"Our weapon slot"}},{"global":"true","name":"GrabCosmeticWearEntity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Grabs the the cosmetic entity from said player (or infected)","desc_md":"true","desc_file":"CosmeticHelp","type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CZP_Player% pPlayer":"The player that wears it","%string_in% strModel":"The model of the cosmetic"}},{"global":"false","name":"GrabWeaponMeleeName","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the melee script name from a CTerrorWeapon object, if it&apos;s a melee weapon","desc_md":"true","desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the CTerrorWeapon object is a melee weapon or not","args":{"%class_CTerrorWeapon% pWeapon":"The specified entity it should check","%string_out% szMeleeName":"The script name of the melee weapon"}},{"global":"false","name":"IsCampaign","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we are on said campaign.","desc_md":"true","desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we are on said campaign. If we are not on said campaign, or not in campaign mode, then this will return false.","args":{"%string_in% szCampaign":"The campaign we want to check for"}},{"global":"false","name":"IsDefibrillatorAllowed","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the current gamemode is allowing to use and spawn defibrillators.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"Hunted will always return `false`, as that gamemode does not support defibrillators.","return":"Returns true if this gamemode is allowing for defibrillators","args":{}},{"global":null,"name":"IsVoteAlreadyOngoing","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the built in Vote System already has a vote in progress","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if there is already a vote ongoing","args":{}},{"global":null,"name":"NumbersOnly","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the string contains numbers.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if it only contains numbers","args":{"%string_in% strValue":"The string we want to check"}},{"global":null,"name":"PrecacheModel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Precache a model.","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"deprecated","infobox_desc":"Use The [Engine.PrecacheFile][PrecacheFile] function instead.","return":null,"args":{"%string_in% strModel":"Our model we want to precache"}},{"global":null,"name":"RadiusDamage","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Cause damage within a radius","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%CTakeDamageInfo% info":"The damage information","%Vector% origin":"The place where we want the damage to take place","%int% radius":"The radius of the damage","%class_CBaseEntity% pIgnore":"The object we want to ignore [Optional]"}},{"global":"false","name":"ResetAmmoMaxCarry","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Resets the max ammo carry to the default value","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iAmmoIndex":"The ammo index"}},{"global":null,"name":"ScreenFade","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fades the screen for a specific player, or everyone on the server","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pActivator":"If not null, it will only go to the specified player. If null, all players will get the message","%Color% clr":"The color of the Game Instructor message","%float_in% flDuration":"How long it will take to fade in&#47;out","%float_in% flHoldTime":"The max time it will hold the fade","%enum_FadeFlag_t% eFlags":"What kind of fade flags it should use"}},{"global":null,"name":"ScreenShake","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Causes the screen to shake, the player is within the screen shake radius","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vPos":"The position where the shake should originate from","%float_in% flDurration":"The durration of our shake","%float_in% flRadius":"The radius of our shake (if set to 0 or less, it will shake everywhere)","%float_in% flAmp":"Our amplitude for the shake","%float_in% flFreq":"Our shake frequence"}},{"global":null,"name":"SendUIMessage","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sends a javascript ui.engineCallbacks.ASResponse message to the player using. Only works if the player is currently using the entity prop_button_interact","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that should get the message","%string_in% strValue":"Our message we want to send"}},{"global":"false","name":"SetAmmoMaxCarry","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the max ammo carry for a certain ammo type","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iAmmoIndex":"The ammo index","%int_in% iMaxCarrySize":"The max carry size"}},{"global":"false","name":"SetNextLevel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the map the game will switch to after the round is over","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szNextLevel":"The map that we want to change to"}},{"global":null,"name":"ShowFakeTime","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Draw a fake timer on our screen.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flTime":"Our time to input","%enum_TimerFlag% iType":"Our flags"}},{"global":null,"name":"SpawnGib","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"This will spawn a gib at a specific location.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strModel":"null","%Vector_in% vecPosition":"The position of this gib","%QAngle_in% qAngles":"The angles of this gib","%float_in% flTime = 5.0f":"Our float to input"}},{"global":null,"name":"SpawnGrenade","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"This will spawn a grenade at a specific location.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pOwner":"The owner of this grenade","%Vector_in% vecPosition":"The position of this grenade","%Vector_in% vecVelocity":"The velocity of this grenade","%QAngle_in% qAngles":"The angles of this grenade","%float_in% flTime = 5.0f":"our timer for this grenade, before it explodes"}},{"global":null,"name":"StartVote","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Starts a custom vote using the built in Vote System","desc_md":"true","desc_file":"ASVoteItem","type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the vote started successfully","args":{"%ASVoteItem_in% info":"The vote information"}},{"global":null,"name":"Steam64ToSteam32","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts a player&apos;s SteamID64 to SteamID32.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the SteamID32.","args":{"%string_in% strSteamID":"The steamid64 it should convert"}},{"global":null,"name":"SteamIDFormat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of SteamID&apos;s that can be converted.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"AUTO":"Auto-detect format --- this also supports other unlisted formats such as full profile URLs.","STEAMID32":"Classic STEAM_x:y:zzzzzz | x = 0&#47;1","STEAMID64":"SteamID64: 7656119xxxxxxxxxx","STEAMID3":"SteamID3 format: [U:1:xxxxxx]","S32":"Raw 32-bit SIGNED format. This is a raw steamid index that overflows into negative bitspace.<br>This is the format that SourceMod returns with GetSteamAccountID, and will always fit into a 32-bit signed variable. (e.g. a 32-bit PHP integer).","RAW":"Raw index. like 64-bit minus the base value."}},{"global":null,"name":"StrContains","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the the current string contains certain words.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if it contains the string we are looking for","args":{"%string_in% strFind":"The string we want to find","%string_in% strTarget":"The string we are looking for"}},{"global":null,"name":"StrEql","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the both strings are equal.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if both strings are equal","args":{"%string_in% strFind":"The string we want to find","%string_in% strTarget":"The string we are looking for","%bool_in% bIgnoreSensitive":"If true, it will ignore sensitivity"}},{"global":"true","name":"StringToArgSplit","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"This will split the string, and become an argument value","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CASCommand@ object, which can be manipulated.","args":{"%string_in% szString":"The string we want to split","%string_in% szSplit":"The value to split the string into an argument"}},{"global":null,"name":"StringToFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts the string to a float value.","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the specified value as a float.","args":{"%string_in% strValue":"Our raw string input"}},{"global":null,"name":"StringToInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts the string to a interger value.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the specified value as a interger.","args":{"%string_in% strValue":"Our raw string input"}},{"global":null,"name":"StrReplace","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"This will replace our string, to whatever we desire.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the new replaced string. If nothing was replaced, it will return the original string.","args":{"%string_in% strValue":"Our current string of choice","%string_in% strFind":"The specified string we want to find","%string_in% strReplace":"The string we want to replace"}},{"global":null,"name":"TimerFlag","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of fake timer flags.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"FL_NONE":"Empty flag","FL_TRED":"If set, it will make the time to go red colored when nearing the end","FL_TGRN":"If set, it will make the time to go green colored when nearing the end","FL_BLINK_YLW":"If set, it will cause the timer to blink (yellow colored)","FL_BLINK_RED":"If set, it will cause the timer to blink (red colored)","FL_BLINK":"If set, it will cause the timer to blink (every 5 seconds)","FL_BLINK_HALFWAY":"If set, it will cause the timer to blink half way in  (every 5 seconds)","FL_BLINK_END":"If set, it will cause the timer to blink at the very end  (every 5 seconds)","FL_NO_HUD_DRAW":"If set, it won&apos;t draw on the screen (used for planted_c4)"}},{"global":"true","name":"ToBaseAnimating","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseAnimating","ref":null,"namespace":null,"child":null,"desc":"Grabs the base animating object from the entity object (if it&apos;s using CBaseAnimating as it&apos;s base)","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseAnimating@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"CBaseEntity object of choice"}},{"global":"true","name":"ToBaseButton","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseButton","ref":null,"namespace":null,"child":null,"desc":"Grabs the base button object from the entity object (if it&apos;s a base button)","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseButton@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"CBaseEntity object of choice"}},{"global":"true","name":"ToBasePlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBasePlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs the player entity from the player slot.","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBasePlayer@ object, which can be manipulated.","args":{"%int_in% iSlot":"Our player slot (1-24)"}},{"global":"true","name":"ToBaseTrigger","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseTrigger","ref":null,"namespace":null,"child":null,"desc":"Grabs the base trigger object from the entity object (if it&apos;s a base trigger)","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseTrigger@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"CBaseEntity object of choice"}},{"global":"true","name":"ToInfected","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"Infected","ref":null,"namespace":null,"child":null,"desc":"Grabs the infected object, if the entindex is valid","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a Infected@ object, which can be manipulated.","args":{"%int_in% iEntIndex":"The entity index"}},{"global":"true","name":"ToPropDoor","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CPropDoorRotatingBreakable","ref":null,"namespace":null,"child":null,"desc":"Grabs the door object from the entity object (if it&apos;s a door)","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CPropDoorRotatingBreakable@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"CBaseEntity object of choice"}},{"global":"true","name":"ToTerrorPlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CTerrorPlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs the player entity from the player slot.","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CTerrorPlayer@ object, which can be manipulated.","args":{"%int_in% iSlot":"Our player slot (1-24)"}},{"global":"true","name":"ToTerrorWeapon","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CTerrorWeapon","ref":null,"namespace":null,"child":null,"desc":"Converts the object to CTerrorWeapon, if it uses said class.","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CTerrorWeapon@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should check"}},{"global":null,"name":"TraceAttack","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Attacks the object from a trace","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"CBaseEntity object to hit","%CTakeDamageInfo% info":"The damage information","%Vector% vecDir":"The direction where the damage came from","%CGameTrace% trace":"Outputs the results for the tracer"}},{"global":null,"name":"TraceHull","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Create&apos;s a hull tracer for CGameTrace.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecStart":"Starting point for the tracer","%Vector_in% vecEnd":"Ending point for the tracer","%Vector_in% vecMin":"Minimum size of the tracer","%Vector_in% vecMax":"Maximum size of the tracer","%enum_MASK% iMask":"Specifies what kind of mask it should use (Multiple masks are allowed)","%class_CBaseEntity% pEntityIgnore":"Ignores said entity, so it won&apos;t hit it","%enum_COLLISIONGROUP% iCollision":"Specifies what kind of collision it should check for","%CGameTrace_out% trace":"Outputs the results for the tracer"}},{"global":null,"name":"TraceLine","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Create&apos;s a line tracer for CGameTrace.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecStart":"Starting point for the tracer","%Vector_in% vecEnd":"Ending point for the tracer","%enum_MASK% iMask":"Specifies what kind of mask it should use (Multiple masks are allowed)","%class_CBaseEntity% pEntityIgnore":"Ignores said entity, so it won&apos;t hit it","%enum_COLLISIONGROUP% iCollision":"Specifies what kind of collision it should check for","%CGameTrace_out% trace":"Outputs the results for the tracer"}},{"global":null,"name":"UIType_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of UI Interaction types","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"k_eUserInterface":"Sent using contagion:&#47;&#47;ui&#47;","k_eTrigger":"Sent using contagion:&#47;&#47;trigger&#47;"}},{"global":null,"name":"ViewPunch","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Punches the player view, in the specific area","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% vecOrigin":"The place where it will punch the players (if they are within range. It only applies if flRadius is higher than 0)","%QAngle% angViewPunch":"The punch angles to apply.","%float_in% flRadius":"The radius around this entity in which to affect players. If set to 0, it will effect everyone","%bool_in% bAir":"If true, it will punch players in the air"}}]},"QAngle":{"desc":"Commonly used utility functions","page":"QAngle","category":"Utilities","type":"class","functions":[{"global":null,"name":"DestructQAngle","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Destroys the QAngle","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Length","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Grabs the length of the QAngle","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the length of our QAngle","args":{}},{"global":null,"name":"opEquals","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Checks if the angles are the same","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if both QAngles are the same","args":{"%QAngle_in% other":"The Vector we want to check"}},{"global":null,"name":"QAngle","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a QAngle class.","desc_md":"true","desc_file":"QAngle_Construct","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns QAngle class which can be manipulated","args":{"%float% x":"Sets the x angle","%float% y":"Sets the y angle","%float% z":"Sets the z angle"}},{"global":null,"name":"x","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Grabs the x angle","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the X angle","args":{}},{"global":null,"name":"y","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Grabs the y angle","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Y angle","args":{}},{"global":null,"name":"z","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Grabs the z angle","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Z angle","args":{}}]}}},"doc_extras":{"manual/doc_script.html":"Angelscript 2.34.0 scripting manual","#scriptable_gamemodes":"Scriptable GameModes","#scriptable_weapons":"Scriptable Weapons","#sequence_files":"Sequence Files"}}